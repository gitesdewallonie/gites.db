--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: buzz; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA buzz;


--
-- Name: londiste; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA londiste;


--
-- Name: pgq; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA pgq;


--
-- Name: txid; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA txid;


--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: unaccent; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS unaccent WITH SCHEMA public;


--
-- Name: EXTENSION unaccent; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION unaccent IS 'text search dictionary that removes accents';


SET search_path = londiste, pg_catalog;

--
-- Name: ret_provider_table_list; Type: TYPE; Schema: londiste; Owner: -
--

CREATE TYPE ret_provider_table_list AS (
	table_name text,
	trigger_name text
);


--
-- Name: ret_subscriber_table; Type: TYPE; Schema: londiste; Owner: -
--

CREATE TYPE ret_subscriber_table AS (
	table_name text,
	merge_state text,
	snapshot text,
	trigger_name text,
	skip_truncate boolean
);


SET search_path = pgq, pg_catalog;

--
-- Name: ret_batch_event; Type: TYPE; Schema: pgq; Owner: -
--

CREATE TYPE ret_batch_event AS (
	ev_id bigint,
	ev_time timestamp with time zone,
	ev_txid bigint,
	ev_retry integer,
	ev_type text,
	ev_data text,
	ev_extra1 text,
	ev_extra2 text,
	ev_extra3 text,
	ev_extra4 text
);


--
-- Name: ret_batch_info; Type: TYPE; Schema: pgq; Owner: -
--

CREATE TYPE ret_batch_info AS (
	queue_name text,
	consumer_name text,
	batch_start timestamp with time zone,
	batch_end timestamp with time zone,
	prev_tick_id bigint,
	tick_id bigint,
	lag interval
);


--
-- Name: ret_consumer_info; Type: TYPE; Schema: pgq; Owner: -
--

CREATE TYPE ret_consumer_info AS (
	queue_name text,
	consumer_name text,
	lag interval,
	last_seen interval,
	last_tick bigint,
	current_batch bigint,
	next_tick bigint
);


--
-- Name: ret_queue_info; Type: TYPE; Schema: pgq; Owner: -
--

CREATE TYPE ret_queue_info AS (
	queue_name text,
	queue_ntables integer,
	queue_cur_table integer,
	queue_rotation_period interval,
	queue_switch_time timestamp with time zone,
	queue_external_ticker boolean,
	queue_ticker_max_count integer,
	queue_ticker_max_lag interval,
	queue_ticker_idle_period interval,
	ticker_lag interval
);


SET search_path = public, pg_catalog;

--
-- Name: box2d; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE box2d;


--
-- Name: box2d_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d_in(cstring) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_in';


--
-- Name: box2d_out(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d_out(box2d) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_out';


--
-- Name: box2d; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE box2d (
    INTERNALLENGTH = 16,
    INPUT = box2d_in,
    OUTPUT = box2d_out,
    ALIGNMENT = int4,
    STORAGE = plain
);


--
-- Name: box3d; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE box3d;


--
-- Name: box3d_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_in(cstring) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_in';


--
-- Name: box3d_out(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_out(box3d) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_out';


--
-- Name: box3d; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE box3d (
    INTERNALLENGTH = 48,
    INPUT = box3d_in,
    OUTPUT = box3d_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- Name: box3d_extent; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE box3d_extent;


--
-- Name: box3d_extent_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_extent_in(cstring) RETURNS box3d_extent
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_in';


--
-- Name: box3d_extent_out(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_extent_out(box3d_extent) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_extent_out';


--
-- Name: box3d_extent; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE box3d_extent (
    INTERNALLENGTH = 48,
    INPUT = box3d_extent_in,
    OUTPUT = box3d_extent_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- Name: chip; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE chip;


--
-- Name: chip_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION chip_in(cstring) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_in';


--
-- Name: chip_out(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION chip_out(chip) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_out';


--
-- Name: chip; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE chip (
    INTERNALLENGTH = variable,
    INPUT = chip_in,
    OUTPUT = chip_out,
    ALIGNMENT = double,
    STORAGE = extended
);


--
-- Name: geography; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE geography;


--
-- Name: geography_analyze(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_analyze(internal) RETURNS boolean
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'geography_analyze';


--
-- Name: geography_in(cstring, oid, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_in(cstring, oid, integer) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_in';


--
-- Name: geography_out(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_out(geography) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_out';


--
-- Name: geography_typmod_in(cstring[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_in(cstring[]) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_in';


--
-- Name: geography_typmod_out(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_out(integer) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_out';


--
-- Name: geography; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE geography (
    INTERNALLENGTH = variable,
    INPUT = geography_in,
    OUTPUT = geography_out,
    TYPMOD_IN = geography_typmod_in,
    TYPMOD_OUT = geography_typmod_out,
    ANALYZE = geography_analyze,
    ALIGNMENT = double,
    STORAGE = main
);


--
-- Name: geometry; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE geometry;


--
-- Name: geometry_analyze(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_analyze(internal) RETURNS boolean
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_analyze';


--
-- Name: geometry_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_in(cstring) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_in';


--
-- Name: geometry_out(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_out(geometry) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_out';


--
-- Name: geometry_recv(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_recv(internal) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_recv';


--
-- Name: geometry_send(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_send(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_send';


--
-- Name: geometry; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE geometry (
    INTERNALLENGTH = variable,
    INPUT = geometry_in,
    OUTPUT = geometry_out,
    RECEIVE = geometry_recv,
    SEND = geometry_send,
    ANALYZE = geometry_analyze,
    DELIMITER = ':',
    ALIGNMENT = int4,
    STORAGE = main
);


--
-- Name: geometry_dump; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE geometry_dump AS (
	path integer[],
	geom geometry
);


--
-- Name: gidx; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE gidx;


--
-- Name: gidx_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gidx_in(cstring) RETURNS gidx
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'gidx_in';


--
-- Name: gidx_out(gidx); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gidx_out(gidx) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'gidx_out';


--
-- Name: gidx; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE gidx (
    INTERNALLENGTH = variable,
    INPUT = gidx_in,
    OUTPUT = gidx_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- Name: pgis_abs; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE pgis_abs;


--
-- Name: pgis_abs_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_abs_in(cstring) RETURNS pgis_abs
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_abs_in';


--
-- Name: pgis_abs_out(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_abs_out(pgis_abs) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_abs_out';


--
-- Name: pgis_abs; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE pgis_abs (
    INTERNALLENGTH = 8,
    INPUT = pgis_abs_in,
    OUTPUT = pgis_abs_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- Name: spheroid; Type: SHELL TYPE; Schema: public; Owner: -
--

CREATE TYPE spheroid;


--
-- Name: spheroid_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION spheroid_in(cstring) RETURNS spheroid
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ellipsoid_in';


--
-- Name: spheroid_out(spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION spheroid_out(spheroid) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ellipsoid_out';


--
-- Name: spheroid; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE spheroid (
    INTERNALLENGTH = 65,
    INPUT = spheroid_in,
    OUTPUT = spheroid_out,
    ALIGNMENT = double,
    STORAGE = plain
);


--
-- Name: txid; Type: DOMAIN; Schema: public; Owner: -
--

CREATE DOMAIN txid AS bigint
	CONSTRAINT txid_check CHECK ((VALUE > 0));


SET search_path = londiste, pg_catalog;

--
-- Name: cmp_list(text, text, text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION cmp_list(list1 text, a_queue text, a_table text, a_field text) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    sql   text;
    tmp   record;
    list2 text;
begin
    sql := 'select ' || a_field || ' as name from ' || a_table
        || ' where queue_name = ' || quote_literal(a_queue)
        || ' order by 1';
    list2 := '';
    for tmp in execute sql loop
        if list2 = '' then
            list2 := tmp.name;
        else
            list2 := list2 || ',' || tmp.name;
        end if;
    end loop;
    return list1 = list2;
end;
$$;


--
-- Name: find_column_types(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION find_column_types(tbl text) RETURNS text
    LANGUAGE plpgsql STABLE STRICT
    AS $$
declare
    res      text;
    col      record;
    tbl_oid  oid;
begin
    tbl_oid := londiste.find_table_oid(tbl);
    res := '';
    for col in 
        SELECT CASE WHEN k.attname IS NOT NULL THEN 'k' ELSE 'v' END AS type
            FROM pg_attribute a LEFT JOIN (
                SELECT k.attname FROM pg_index i, pg_attribute k
                 WHERE i.indrelid = tbl_oid AND k.attrelid = i.indexrelid
                   AND i.indisprimary AND k.attnum > 0 AND NOT k.attisdropped
                ) k ON (k.attname = a.attname)
            WHERE a.attrelid = tbl_oid AND a.attnum > 0 AND NOT a.attisdropped
            ORDER BY a.attnum
    loop
        res := res || col.type;
    end loop;

    return res;
end;
$$;


--
-- Name: find_rel_oid(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION find_rel_oid(tbl text, kind text) RETURNS oid
    LANGUAGE plpgsql STABLE STRICT
    AS $$
declare
    res      oid;
    pos      integer;
    schema   text;
    name     text;
begin
    pos := position('.' in tbl);
    if pos > 0 then
        schema := substring(tbl for pos - 1);
        name := substring(tbl from pos + 1);
    else
        schema := 'public';
        name := tbl;
    end if;
    select c.oid into res
      from pg_namespace n, pg_class c
     where c.relnamespace = n.oid
       and c.relkind = kind
       and n.nspname = schema and c.relname = name;
    if not found then
        if kind = 'r' then
            raise exception 'table not found';
        elsif kind = 'S' then
            raise exception 'seq not found';
        else
            raise exception 'weird relkind';
        end if;
    end if;

    return res;
end;
$$;


--
-- Name: find_seq_oid(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION find_seq_oid(tbl text) RETURNS oid
    LANGUAGE plpgsql STABLE STRICT
    AS $$
begin
    return londiste.find_rel_oid(tbl, 'S');
end;
$$;


SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: subscriber_pending_fkeys; Type: TABLE; Schema: londiste; Owner: -; Tablespace: 
--

CREATE TABLE subscriber_pending_fkeys (
    from_table text NOT NULL,
    to_table text NOT NULL,
    fkey_name text NOT NULL,
    fkey_def text NOT NULL
);


--
-- Name: find_table_fkeys(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION find_table_fkeys(i_table_name text) RETURNS SETOF subscriber_pending_fkeys
    LANGUAGE plpgsql STABLE STRICT
    AS $$
declare
    fkey      record;
    tbl_oid   oid;
begin
    select londiste.find_table_oid(i_table_name) into tbl_oid;
        
    for fkey in
        select n1.nspname || '.' || t1.relname as from_table, n2.nspname || '.' || t2.relname as to_table,
            conname::text as fkey_name, 
            'alter table only ' || quote_ident(n1.nspname) || '.' || quote_ident(t1.relname)
            || ' add constraint ' || quote_ident(conname::text) || ' ' || pg_get_constraintdef(c.oid)
            as fkey_def
        from pg_constraint c, pg_namespace n1, pg_class t1, pg_namespace n2, pg_class t2
        where c.contype = 'f' and (c.conrelid = tbl_oid or c.confrelid = tbl_oid)
            and t1.oid = c.conrelid and n1.oid = t1.relnamespace
            and t2.oid = c.confrelid and n2.oid = t2.relnamespace
        order by 1,2,3
    loop
        return next fkey;
    end loop;
    
    return;
end;
$$;


--
-- Name: find_table_oid(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION find_table_oid(tbl text) RETURNS oid
    LANGUAGE plpgsql STABLE STRICT
    AS $$
begin
    return londiste.find_rel_oid(tbl, 'r');
end;
$$;


--
-- Name: subscriber_pending_triggers; Type: TABLE; Schema: londiste; Owner: -; Tablespace: 
--

CREATE TABLE subscriber_pending_triggers (
    table_name text NOT NULL,
    trigger_name text NOT NULL,
    trigger_def text NOT NULL
);


--
-- Name: find_table_triggers(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION find_table_triggers(i_table_name text) RETURNS SETOF subscriber_pending_triggers
    LANGUAGE plpgsql STABLE STRICT
    AS $$
declare
    tg        record;
begin
    for tg in
        select n.nspname || '.' || c.relname as table_name, t.tgname::text as name, pg_get_triggerdef(t.oid) as def 
        from pg_trigger t, pg_class c, pg_namespace n
        where n.oid = c.relnamespace and c.oid = t.tgrelid
            and t.tgrelid = londiste.find_table_oid(i_table_name)
            and not t.tgisconstraint
    loop
        return next tg;
    end loop;
    
    return;
end;
$$;


--
-- Name: get_last_tick(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION get_last_tick(i_consumer text) RETURNS bigint
    LANGUAGE plpgsql STABLE STRICT SECURITY DEFINER
    AS $$
declare
    res   bigint;
begin
    select last_tick_id into res
      from londiste.completed
     where consumer_id = i_consumer;
    return res;
end;
$$;


--
-- Name: subscriber_table; Type: TABLE; Schema: londiste; Owner: -; Tablespace: 
--

CREATE TABLE subscriber_table (
    nr integer NOT NULL,
    queue_name text NOT NULL,
    table_name text NOT NULL,
    snapshot text,
    merge_state text,
    trigger_name text,
    skip_truncate boolean
);


--
-- Name: get_table_state(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION get_table_state(i_queue text) RETURNS SETOF subscriber_table
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    rec londiste.subscriber_table%rowtype;
begin
    for rec in
        select * from londiste.subscriber_table
            where queue_name = i_queue
            order by nr
    loop
        return next rec;
    end loop;
    return;
end;
$$;


--
-- Name: link(text, text, bigint, text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION link(i_source_name text, i_dest_name text, prov_tick_id bigint, prov_tbl_list text, prov_seq_list text) RETURNS text
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    tmp  text;
    list text;
    tick_seq text;
    external boolean;
    last_tick bigint;
begin
    -- check if all matches
    if not londiste.cmp_list(prov_tbl_list, i_source_name,
                             'londiste.subscriber_table', 'table_name')
    then
        raise exception 'not all tables copied into subscriber';
    end if;
    if not londiste.cmp_list(prov_seq_list, i_source_name,
                             'londiste.subscriber_seq', 'seq_name')
    then
        raise exception 'not all seqs copied into subscriber';
    end if;
    if not londiste.cmp_list(prov_seq_list, i_dest_name,
                             'londiste.provider_table', 'table_name')
    then
        raise exception 'linked provider queue does not have all tables';
    end if;
    if not londiste.cmp_list(prov_seq_list, i_dest_name,
                             'londiste.provider_seq', 'seq_name')
    then
        raise exception 'linked provider queue does not have all seqs';
    end if;

    -- check pgq
    select queue_external_ticker, queue_tick_seq into external, tick_seq
        from pgq.queue where queue_name = i_dest_name;
    if not found then
        raise exception 'dest queue does not exist';
    end if;
    if external then
        raise exception 'dest queue has already external_ticker turned on?';
    end if;

    if nextval(tick_seq) >= prov_tick_id then
        raise exception 'dest queue ticks larger';
    end if;
    
    update pgq.queue set queue_external_ticker = true
        where queue_name = i_dest_name;

    insert into londiste.link (source, dest) values (i_source_name, i_dest_name);

    return null;
end;
$$;


--
-- Name: link_del(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION link_del(i_source_name text, i_dest_name text) RETURNS text
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
begin
    delete from londiste.link
     where source = i_source_name
       and dest = i_dest_name;
    if not found then
        raise exception 'no suck link';
    end if;
    return null;
end;
$$;


--
-- Name: link_dest(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION link_dest(i_source_name text) RETURNS text
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    res  text;
begin
    select dest into res from londiste.link
     where source = i_source_name;
    return res;
end;
$$;


--
-- Name: link_source(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION link_source(i_dst_name text) RETURNS text
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    res  text;
begin
    select source into res from londiste.link
     where dest = i_dst_name;
    return res;
end;
$$;


--
-- Name: provider_add_seq(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION provider_add_seq(i_queue_name text, i_seq_name text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    link text;
begin
    -- check if linked queue
    link := londiste.link_source(i_queue_name);
    if link is not null then
        raise exception 'Linked queue, cannot modify';
    end if;

    perform 1 from pg_class
        where oid = londiste.find_seq_oid(i_seq_name);
    if not found then
        raise exception 'seq not found';
    end if;

    insert into londiste.provider_seq (queue_name, seq_name)
        values (i_queue_name, i_seq_name);
    perform londiste.provider_notify_change(i_queue_name);

    return 0;
end;
$$;


--
-- Name: provider_add_table(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION provider_add_table(i_queue_name text, i_table_name text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
begin
    return londiste.provider_add_table(i_queue_name, i_table_name,
        londiste.find_column_types(i_table_name));
end;
$$;


--
-- Name: provider_add_table(text, text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION provider_add_table(i_queue_name text, i_table_name text, i_col_types text) RETURNS integer
    LANGUAGE plpgsql STRICT SECURITY DEFINER
    AS $$
declare
    tgname text;
    sql    text;
begin
    if londiste.link_source(i_queue_name) is not null then
        raise exception 'Linked queue, manipulation not allowed';
    end if;

    if position('k' in i_col_types) < 1 then
        raise exception 'need key column';
    end if;
    if position('.' in i_table_name) < 1 then
        raise exception 'need fully-qualified table name';
    end if;
    select queue_name into tgname
        from pgq.queue where queue_name = i_queue_name;
    if not found then
        raise exception 'no such event queue';
    end if;

    tgname := i_queue_name || '_logger';
    tgname := replace(lower(tgname), '.', '_');
    insert into londiste.provider_table
        (queue_name, table_name, trigger_name)
        values (i_queue_name, i_table_name, tgname);

    perform londiste.provider_create_trigger(
        i_queue_name, i_table_name, i_col_types);

    return 1;
end;
$$;


--
-- Name: provider_create_trigger(text, text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION provider_create_trigger(i_queue_name text, i_table_name text, i_col_types text) RETURNS integer
    LANGUAGE plpgsql STRICT SECURITY DEFINER
    AS $$
declare
    tgname text;
begin
    select trigger_name into tgname
        from londiste.provider_table
        where queue_name = i_queue_name
          and table_name = i_table_name;
    if not found then
        raise exception 'table not found';
    end if;

    execute 'create trigger ' || quote_ident(tgname)
        || ' after insert or update or delete on '
        || londiste.quote_fqname(i_table_name)
        || ' for each row execute procedure pgq.logtriga('
        || quote_literal(i_queue_name) || ', '
        || quote_literal(i_col_types) || ', '
        || quote_literal(i_table_name) || ')';

    return 1;
end;
$$;


--
-- Name: provider_get_seq_list(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION provider_get_seq_list(i_queue_name text) RETURNS SETOF text
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    rec record;
begin
    for rec in
        select seq_name from londiste.provider_seq
            where queue_name = i_queue_name
            order by nr
    loop
        return next rec.seq_name;
    end loop;
    return;
end;
$$;


--
-- Name: provider_get_table_list(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION provider_get_table_list(i_queue text) RETURNS SETOF ret_provider_table_list
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$ 
declare 
    rec   londiste.ret_provider_table_list%rowtype; 
begin 
    for rec in 
        select table_name, trigger_name
            from londiste.provider_table
            where queue_name = i_queue
            order by nr
    loop
        return next rec;
    end loop; 
    return;
end; 
$$;


--
-- Name: provider_notify_change(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION provider_notify_change(i_queue_name text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    res      text;
    tbl      record;
begin
    res := '';
    for tbl in
        select table_name from londiste.provider_table
            where queue_name = i_queue_name
            order by nr
    loop
        if res = '' then
            res := tbl.table_name;
        else
            res := res || ',' || tbl.table_name;
        end if;
    end loop;
    
    perform pgq.insert_event(i_queue_name, 'T', res);

    return 1;
end;
$$;


--
-- Name: provider_refresh_trigger(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION provider_refresh_trigger(i_queue_name text, i_table_name text) RETURNS integer
    LANGUAGE plpgsql STRICT SECURITY DEFINER
    AS $$
begin
    return londiste.provider_refresh_trigger(i_queue_name, i_table_name,
                            londiste.find_column_types(i_table_name));
end;
$$;


--
-- Name: provider_refresh_trigger(text, text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION provider_refresh_trigger(i_queue_name text, i_table_name text, i_col_types text) RETURNS integer
    LANGUAGE plpgsql STRICT SECURITY DEFINER
    AS $$
declare
    t_name   text;
    tbl_oid  oid;
begin
    select trigger_name into t_name
        from londiste.provider_table
        where queue_name = i_queue_name
          and table_name = i_table_name;
    if not found then
        raise exception 'table not found';
    end if;

    tbl_oid := londiste.find_table_oid(i_table_name);
    perform 1 from pg_trigger
        where tgrelid = tbl_oid
          and tgname = t_name;
    if found then
        execute 'drop trigger ' || quote_ident(t_name)
            || ' on ' || londiste.quote_fqname(i_table_name);
    end if;

    perform londiste.provider_create_trigger(i_queue_name, i_table_name, i_col_types);

    return 1;
end;
$$;


--
-- Name: provider_remove_seq(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION provider_remove_seq(i_queue_name text, i_seq_name text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    link text;
begin
    -- check if linked queue
    link := londiste.link_source(i_queue_name);
    if link is not null then
        raise exception 'Linked queue, cannot modify';
    end if;

    delete from londiste.provider_seq
        where queue_name = i_queue_name
          and seq_name = i_seq_name;
    if not found then
        raise exception 'seq not attached';
    end if;

    perform londiste.provider_notify_change(i_queue_name);

    return 0;
end;
$$;


--
-- Name: provider_remove_table(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION provider_remove_table(i_queue_name text, i_table_name text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    tgname text;
begin
    if londiste.link_source(i_queue_name) is not null then
        raise exception 'Linked queue, manipulation not allowed';
    end if;

    select trigger_name into tgname from londiste.provider_table
        where queue_name = i_queue_name
          and table_name = i_table_name;
    if not found then
        raise exception 'no such table registered';
    end if;

    begin
        execute 'drop trigger ' || quote_ident(tgname) || ' on ' || londiste.quote_fqname(i_table_name);
    exception
        when undefined_table then
            raise notice 'table % does not exist', i_table_name;
        when undefined_object then
            raise notice 'trigger % does not exist on table %', tgname, i_table_name;
    end;

    delete from londiste.provider_table
        where queue_name = i_queue_name
          and table_name = i_table_name;

    return 1;
end;
$$;


--
-- Name: quote_fqname(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION quote_fqname(i_name text) RETURNS text
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $$
declare
    res     text;
    pos     integer;
    s       text;
    n       text;
begin
    pos := position('.' in i_name);
    if pos > 0 then
        s := substring(i_name for pos - 1);
        n := substring(i_name from pos + 1);
    else
        s := 'public';
        n := i_name;
    end if;
    return quote_ident(s) || '.' || quote_ident(n);
end;
$$;


--
-- Name: set_last_tick(text, bigint); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION set_last_tick(i_consumer text, i_tick_id bigint) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
begin
    if i_tick_id is null then
        delete from londiste.completed
         where consumer_id = i_consumer;
    else
        update londiste.completed
           set last_tick_id = i_tick_id
         where consumer_id = i_consumer;
        if not found then
            insert into londiste.completed (consumer_id, last_tick_id)
                values (i_consumer, i_tick_id);
        end if;
    end if;

    return 1;
end;
$$;


--
-- Name: set_table_state(text, text, text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION set_table_state(i_queue_name text, i_table_name text, i_snapshot text, i_merge_state text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
begin
    return londiste.subscriber_set_table_state(i_queue_name, i_table_name, i_snapshot, i_merge_state);
end;
$$;


--
-- Name: subscriber_add_seq(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_add_seq(i_queue_name text, i_seq_name text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    link text;
begin
    insert into londiste.subscriber_seq (queue_name, seq_name)
        values (i_queue_name, i_seq_name);

    -- update linked queue if needed
    link := londiste.link_dest(i_queue_name);
    if link is not null then
        insert into londiste.provider_seq
            (queue_name, seq_name)
        values (link, i_seq_name);
        perform londiste.provider_notify_change(link);
    end if;

    return 0;
end;
$$;


--
-- Name: subscriber_add_table(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_add_table(i_queue_name text, i_table text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
begin
    insert into londiste.subscriber_table (queue_name, table_name)
        values (i_queue_name, i_table);

    -- linked queue is updated, when the table is copied

    return 0;
end;
$$;


--
-- Name: subscriber_drop_all_table_triggers(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_drop_all_table_triggers(i_table_name text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
    trigger record;
begin
    for trigger in
        select trigger_name as name
        from londiste.find_table_triggers(i_table_name)
    loop
        perform londiste.subscriber_drop_table_trigger(i_table_name, trigger.name);
    end loop;
    
    return 1;
end;
$$;


--
-- Name: subscriber_drop_table_fkey(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_drop_table_fkey(i_from_table text, i_fkey_name text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
    fkey       record;
begin        
    select * into fkey
    from londiste.find_table_fkeys(i_from_table) 
    where fkey_name = i_fkey_name and from_table = i_from_table;
    
    if not found then
        return 0;
    end if;
            
    insert into londiste.subscriber_pending_fkeys values (fkey.from_table, fkey.to_table, i_fkey_name, fkey.fkey_def);
        
    execute 'alter table only ' || londiste.quote_fqname(fkey.from_table)
            || ' drop constraint ' || quote_ident(i_fkey_name);
    
    return 1;
end;
$$;


--
-- Name: subscriber_drop_table_trigger(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_drop_table_trigger(i_table_name text, i_trigger_name text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
    trig_def record;
begin
    select * into trig_def
    from londiste.find_table_triggers(i_table_name)
    where trigger_name = i_trigger_name;
    
    if FOUND is not true then
        return 0;
    end if;
    
    insert into londiste.subscriber_pending_triggers(table_name, trigger_name, trigger_def) 
        values (i_table_name, i_trigger_name, trig_def.trigger_def);
    
    execute 'drop trigger ' || quote_ident(i_trigger_name)
        || ' on ' || londiste.quote_fqname(i_table_name);
    
    return 1;
end;
$$;


--
-- Name: subscriber_get_queue_valid_pending_fkeys(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_get_queue_valid_pending_fkeys(i_queue_name text) RETURNS SETOF subscriber_pending_fkeys
    LANGUAGE plpgsql
    AS $$
declare
    fkeys   record;
begin
    for fkeys in
        select pf.* from londiste.subscriber_pending_fkeys pf
            join londiste.subscriber_table st_from 
                on (st_from.table_name = pf.from_table and st_from.merge_state = 'ok' and st_from.snapshot is null)
            join londiste.subscriber_table st_to   
                on (st_to.table_name = pf.to_table and st_to.merge_state = 'ok' and st_to.snapshot is null)
            -- change the AND to OR to allow fkeys between tables coming from different queues
            where (st_from.queue_name = i_queue_name and st_to.queue_name = i_queue_name)
            order by 1, 2, 3
    loop
        return next fkeys;
    end loop;
    
    return;
end;
$$;


--
-- Name: subscriber_get_seq_list(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_get_seq_list(i_queue_name text) RETURNS SETOF text
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    rec record;
begin
    for rec in
        select seq_name from londiste.subscriber_seq
            where queue_name = i_queue_name
            order by nr
    loop
        return next rec.seq_name;
    end loop;
    return;
end;
$$;


--
-- Name: subscriber_get_table_list(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_get_table_list(i_queue_name text) RETURNS SETOF ret_subscriber_table
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    rec londiste.ret_subscriber_table%rowtype;
begin
    for rec in
        select table_name, merge_state, snapshot, trigger_name, skip_truncate
          from londiste.subscriber_table
         where queue_name = i_queue_name
         order by nr
    loop
        return next rec;
    end loop;
    return;
end;
$$;


--
-- Name: subscriber_get_table_pending_fkeys(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_get_table_pending_fkeys(i_table_name text) RETURNS SETOF subscriber_pending_fkeys
    LANGUAGE plpgsql
    AS $$
declare
    fkeys   record;
begin
    for fkeys in
        select *
        from londiste.subscriber_pending_fkeys
        where from_table=i_table_name or to_table=i_table_name
        order by 1,2,3
    loop
        return next fkeys;
    end loop;
    
    return;
end;
$$;


--
-- Name: subscriber_get_table_pending_triggers(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_get_table_pending_triggers(i_table_name text) RETURNS SETOF subscriber_pending_triggers
    LANGUAGE plpgsql STABLE STRICT
    AS $$
declare
    trigger    record;
begin
    for trigger in
        select *
        from londiste.subscriber_pending_triggers
        where table_name = i_table_name
    loop
        return next trigger;
    end loop;
    
    return;
end;
$$;


--
-- Name: subscriber_remove_seq(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_remove_seq(i_queue_name text, i_seq_name text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    link text;
begin
    delete from londiste.subscriber_seq
        where queue_name = i_queue_name
          and seq_name = i_seq_name;
    if not found then
        raise exception 'no such seq?';
    end if;

    -- update linked queue if needed
    link := londiste.link_dest(i_queue_name);
    if link is not null then
        delete from londiste.provider_seq
         where queue_name = link
           and seq_name = i_seq_name;
        perform londiste.provider_notify_change(link);
    end if;

    return 0;
end;
$$;


--
-- Name: subscriber_remove_table(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_remove_table(i_queue_name text, i_table text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    link  text;
begin
    delete from londiste.subscriber_table
     where queue_name = i_queue_name
       and table_name = i_table;
    if not found then
        raise exception 'no such table';
    end if;

    -- sync link
    link := londiste.link_dest(i_queue_name);
    if link is not null then
        delete from londiste.provider_table
            where queue_name = link
              and table_name = i_table;
        perform londiste.provider_notify_change(link);
    end if;

    return 0;
end;
$$;


--
-- Name: subscriber_restore_all_table_triggers(text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_restore_all_table_triggers(i_table_name text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
    trigger record;
begin
    for trigger in
        select trigger_name as name
        from londiste.subscriber_get_table_pending_triggers(i_table_name)
    loop
        perform londiste.subscriber_restore_table_trigger(i_table_name, trigger.name);
    end loop;
    
    return 1;
end;
$$;


--
-- Name: subscriber_restore_table_fkey(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_restore_table_fkey(i_from_table text, i_fkey_name text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
    fkey    record;
begin
    select * into fkey
    from londiste.subscriber_pending_fkeys 
    where fkey_name = i_fkey_name and from_table = i_from_table;
    
    if not found then
        return 0;
    end if;
    
    delete from londiste.subscriber_pending_fkeys where fkey_name = fkey.fkey_name;
        
    execute fkey.fkey_def;
        
    return 1;
end;
$$;


--
-- Name: subscriber_restore_table_trigger(text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_restore_table_trigger(i_table_name text, i_trigger_name text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
declare
    trig_def text;
begin
    select trigger_def into trig_def
    from londiste.subscriber_pending_triggers
    where (table_name, trigger_name) = (i_table_name, i_trigger_name);
    
    if not found then
        return 0;
    end if;
    
    delete from londiste.subscriber_pending_triggers 
    where table_name = i_table_name and trigger_name = i_trigger_name;
    
    execute trig_def;

    return 1;
end;
$$;


--
-- Name: subscriber_set_skip_truncate(text, text, boolean); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_set_skip_truncate(i_queue text, i_table text, i_value boolean) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
begin
    update londiste.subscriber_table
       set skip_truncate = i_value
     where queue_name = i_queue
       and table_name = i_table;
    if not found then
        raise exception 'table not found';
    end if;

    return 1;
end;
$$;


--
-- Name: subscriber_set_table_state(text, text, text, text); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION subscriber_set_table_state(i_queue_name text, i_table_name text, i_snapshot text, i_merge_state text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
declare
    link  text;
    ok    integer;
begin
    update londiste.subscriber_table
        set snapshot = i_snapshot,
            merge_state = i_merge_state,
            -- reset skip_snapshot when table is copied over
            skip_truncate = case when i_merge_state = 'ok'
                                 then null
                                 else skip_truncate
                            end
      where queue_name = i_queue_name
        and table_name = i_table_name;
    if not found then
        raise exception 'no such table';
    end if;

    -- sync link state also
    link := londiste.link_dest(i_queue_name);
    if link then
        select * from londiste.provider_table
            where queue_name = linkdst
              and table_name = i_table_name;
        if found then
            if i_merge_state is null or i_merge_state <> 'ok' then
                delete from londiste.provider_table
                 where queue_name = link
                   and table_name = i_table_name;
                perform londiste.notify_change(link);
            end if;
        else
            if i_merge_state = 'ok' then
                insert into londiste.provider_table (queue_name, table_name)
                    values (link, i_table_name);
                perform londiste.notify_change(link);
            end if;
        end if;
    end if;

    return 1;
end;
$$;


--
-- Name: version(); Type: FUNCTION; Schema: londiste; Owner: -
--

CREATE FUNCTION version() RETURNS text
    LANGUAGE plpgsql
    AS $$
begin
    return '2.1.7';
end;
$$;


SET search_path = pgq, pg_catalog;

--
-- Name: batch_event_sql(bigint); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION batch_event_sql(x_batch_id bigint) RETURNS text
    LANGUAGE plpgsql
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.batch_event_sql(1)
--      Creates SELECT statement that fetches events for this batch.
--
-- Parameters:
--      x_batch_id    - ID of a active batch.
--
-- Returns:
--      SQL statement.
-- ----------------------------------------------------------------------

-- ----------------------------------------------------------------------
-- Algorithm description:
--      Given 2 snapshots, sn1 and sn2 with sn1 having xmin1, xmax1
--      and sn2 having xmin2, xmax2 create expression that filters
--      right txid's from event table.
--
--      Simplest solution would be
--      > WHERE ev_txid >= xmin1 AND ev_txid <= xmax2
--      >   AND NOT txid_visible_in_snapshot(ev_txid, sn1)
--      >   AND txid_visible_in_snapshot(ev_txid, sn2)
--
--      The simple solution has a problem with long transactions (xmin1 very low).
--      All the batches that happen when the long tx is active will need
--      to scan all events in that range.  Here is 2 optimizations used:
--
--      1)  Use [xmax1..xmax2] for range scan.  That limits the range to
--      txids that actually happened between two snapshots.  For txids
--      in the range [xmin1..xmax1] look which ones were actually
--      committed between snapshots and search for them using exact
--      values using IN (..) list.
--
--      2) As most TX are short, there could be lot of them that were
--      just below xmax1, but were committed before xmax2.  So look
--      if there are ID's near xmax1 and lower the range to include
--      them, thus decresing size of IN (..) list.
-- ----------------------------------------------------------------------
declare
    rec             record;
    sql             text;
    tbl             text;
    arr             text;
    part            text;
    select_fields   text;
    retry_expr      text;
    batch           record;
begin
    select s.sub_last_tick, s.sub_next_tick, s.sub_id, s.sub_queue,
           txid_snapshot_xmax(last.tick_snapshot) as tx_start,
           txid_snapshot_xmax(cur.tick_snapshot) as tx_end,
           last.tick_snapshot as last_snapshot,
           cur.tick_snapshot as cur_snapshot
        into batch
        from pgq.subscription s, pgq.tick last, pgq.tick cur
        where s.sub_batch = x_batch_id
          and last.tick_queue = s.sub_queue
          and last.tick_id = s.sub_last_tick
          and cur.tick_queue = s.sub_queue
          and cur.tick_id = s.sub_next_tick;
    if not found then
        raise exception 'batch not found';
    end if;

    -- load older transactions
    arr := '';
    for rec in
        -- active tx-es in prev_snapshot that were committed in cur_snapshot
        select id1 from
            txid_snapshot_xip(batch.last_snapshot) id1 left join
            txid_snapshot_xip(batch.cur_snapshot) id2 on (id1 = id2)
        where id2 is null
        order by 1 desc
    loop
        -- try to avoid big IN expression, so try to include nearby
        -- tx'es into range
        if batch.tx_start - 100 <= rec.id1 then
            batch.tx_start := rec.id1;
        else
            if arr = '' then
                arr := rec.id1;
            else
                arr := arr || ',' || rec.id1;
            end if;
        end if;
    end loop;

    -- must match pgq.event_template
    select_fields := 'select ev_id, ev_time, ev_txid, ev_retry, ev_type,'
        || ' ev_data, ev_extra1, ev_extra2, ev_extra3, ev_extra4';
    retry_expr :=  ' and (ev_owner is null or ev_owner = '
        || batch.sub_id || ')';

    -- now generate query that goes over all potential tables
    sql := '';
    for rec in
        select xtbl from pgq.batch_event_tables(x_batch_id) xtbl
    loop
        tbl := rec.xtbl;
        -- this gets newer queries that definitely are not in prev_snapshot
        part := select_fields
            || ' from pgq.tick cur, pgq.tick last, ' || tbl || ' ev '
            || ' where cur.tick_id = ' || batch.sub_next_tick
            || ' and cur.tick_queue = ' || batch.sub_queue
            || ' and last.tick_id = ' || batch.sub_last_tick
            || ' and last.tick_queue = ' || batch.sub_queue
            || ' and ev.ev_txid >= ' || batch.tx_start
            || ' and ev.ev_txid <= ' || batch.tx_end
            || ' and txid_visible_in_snapshot(ev.ev_txid, cur.tick_snapshot)'
            || ' and not txid_visible_in_snapshot(ev.ev_txid, last.tick_snapshot)'
            || retry_expr;
        -- now include older tx-es, that were ongoing
        -- at the time of prev_snapshot
        if arr <> '' then
            part := part || ' union all '
                || select_fields || ' from ' || tbl || ' ev '
                || ' where ev.ev_txid in (' || arr || ')'
                || retry_expr;
        end if;
        if sql = '' then
            sql := part;
        else
            sql := sql || ' union all ' || part;
        end if;
    end loop;
    if sql = '' then
        raise exception 'could not construct sql for batch %', x_batch_id;
    end if;
    return sql || ' order by 1';
end;
$$;


--
-- Name: batch_event_tables(bigint); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION batch_event_tables(x_batch_id bigint) RETURNS SETOF text
    LANGUAGE plpgsql
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.batch_event_tables(1)
--
--     Returns set of table names where this batch events may reside.
--
-- Parameters:
--     x_batch_id    - ID of a active batch.
-- ----------------------------------------------------------------------
declare
    nr                    integer;
    tbl                   text;
    use_prev              integer;
    use_next              integer;
    batch                 record;
begin
    select
           txid_snapshot_xmin(last.tick_snapshot) as tx_min, -- absolute minimum
           txid_snapshot_xmax(cur.tick_snapshot) as tx_max, -- absolute maximum
           q.queue_data_pfx, q.queue_ntables,
           q.queue_cur_table, q.queue_switch_step1, q.queue_switch_step2
        into batch
        from pgq.tick last, pgq.tick cur, pgq.subscription s, pgq.queue q
        where cur.tick_id = s.sub_next_tick
          and cur.tick_queue = s.sub_queue
          and last.tick_id = s.sub_last_tick
          and last.tick_queue = s.sub_queue
          and s.sub_batch = x_batch_id
          and q.queue_id = s.sub_queue;
    if not found then
        raise exception 'Cannot find data for batch %', x_batch_id;
    end if;

    -- if its definitely not in one or other, look into both
    if batch.tx_max < batch.queue_switch_step1 then
        use_prev := 1;
        use_next := 0;
    elsif batch.queue_switch_step2 is not null
      and (batch.tx_min > batch.queue_switch_step2)
    then
        use_prev := 0;
        use_next := 1;
    else
        use_prev := 1;
        use_next := 1;
    end if;

    if use_prev then
        nr := batch.queue_cur_table - 1;
        if nr < 0 then
            nr := batch.queue_ntables - 1;
        end if;
        tbl := batch.queue_data_pfx || '_' || nr;
        return next tbl;
    end if;

    if use_next then
        tbl := batch.queue_data_pfx || '_' || batch.queue_cur_table;
        return next tbl;
    end if;

    return;
end;
$$;


--
-- Name: create_queue(text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION create_queue(i_queue_name text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.create_queue(1)
--
--      Creates new queue with given name.
--
-- Returns:
--      0 - queue already exists
--      1 - queue created
-- ----------------------------------------------------------------------
declare
    tblpfx   text;
    tblname  text;
    idxpfx   text;
    idxname  text;
    sql      text;
    id       integer;
    tick_seq text;
    ev_seq text;
    n_tables integer;
begin
    if i_queue_name is null then
        raise exception 'Invalid NULL value';
    end if;

    -- check if exists
    perform 1 from pgq.queue where queue_name = i_queue_name;
    if found then
        return 0;
    end if;

    -- insert event
    id := nextval('pgq.queue_queue_id_seq');
    tblpfx := 'pgq.event_' || id;
    idxpfx := 'event_' || id;
    tick_seq := 'pgq.event_' || id || '_tick_seq';
    ev_seq := 'pgq.event_' || id || '_id_seq';
    insert into pgq.queue (queue_id, queue_name,
            queue_data_pfx, queue_event_seq, queue_tick_seq)
        values (id, i_queue_name, tblpfx, ev_seq, tick_seq);

    select queue_ntables into n_tables from pgq.queue
        where queue_id = id;

    -- create seqs
    execute 'CREATE SEQUENCE ' || tick_seq;
    execute 'CREATE SEQUENCE ' || ev_seq;

    -- create data tables
    execute 'CREATE TABLE ' || tblpfx || ' () '
            || ' INHERITS (pgq.event_template)';
    for i in 0 .. (n_tables - 1) loop
        tblname := tblpfx || '_' || i;
        idxname := idxpfx || '_' || i;
        execute 'CREATE TABLE ' || tblname || ' () '
                || ' INHERITS (' || tblpfx || ')';
        execute 'ALTER TABLE ' || tblname || ' ALTER COLUMN ev_id '
                || ' SET DEFAULT nextval(' || quote_literal(ev_seq) || ')';
        execute 'create index ' || idxname || '_txid_idx on '
                || tblname || ' (ev_txid)';
    end loop;

    perform pgq.grant_perms(i_queue_name);

    perform pgq.ticker(i_queue_name);

    return 1;
end;
$$;


--
-- Name: current_event_table(text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION current_event_table(x_queue_name text) RETURNS text
    LANGUAGE plpgsql
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.current_event_table(1)
--
--      Return active event table for particular queue.
--      Event can be added to it without going via functions,
--      e.g. by COPY.
--
-- Note:
--      The result is valid only during current transaction.
--
-- Permissions:
--      Actual insertion requires superuser access.
--
-- Parameters:
--      x_queue_name    - Queue name.
-- ----------------------------------------------------------------------
declare
    res text;
begin
    select queue_data_pfx || '_' || queue_cur_table into res
        from pgq.queue where queue_name = x_queue_name;
    if not found then
        raise exception 'Event queue not found';
    end if;
    return res;
end;
$$;


--
-- Name: drop_queue(text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION drop_queue(x_queue_name text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.drop_queue(1)
--
--     Drop queue and all associated tables.
--     No consumers must be listening on the queue.
--
-- ----------------------------------------------------------------------
declare
    tblname  text;
    q record;
    num integer;
begin
    -- check ares
    if x_queue_name is null then
        raise exception 'Invalid NULL value';
    end if;

    -- check if exists
    select * into q from pgq.queue
        where queue_name = x_queue_name;
    if not found then
        raise exception 'No such event queue';
    end if;

    -- check if no consumers
    select count(*) into num from pgq.subscription
        where sub_queue = q.queue_id;
    if num > 0 then
        raise exception 'cannot drop queue, consumers still attached';
    end if;

    -- drop data tables
    for i in 0 .. (q.queue_ntables - 1) loop
        tblname := q.queue_data_pfx || '_' || i;
        execute 'DROP TABLE ' || tblname;
    end loop;
    execute 'DROP TABLE ' || q.queue_data_pfx;

    -- delete ticks
    delete from pgq.tick where tick_queue = q.queue_id;

    -- drop seqs
    -- FIXME: any checks needed here?
    execute 'DROP SEQUENCE ' || q.queue_tick_seq;
    execute 'DROP SEQUENCE ' || q.queue_event_seq;

    -- delete event
    delete from pgq.queue
        where queue_name = x_queue_name;

    return 1;
end;
$$;


--
-- Name: event_failed(bigint, bigint, text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION event_failed(x_batch_id bigint, x_event_id bigint, x_reason text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.event_failed(3)
--
--      Copies the event to failed queue so it can be looked at later.
--
-- Parameters:
--      x_batch_id      - ID of active batch.
--      x_event_id      - Event id
--      x_reason        - Text to associate with event.
--
-- Returns:
--     0 if event was already in queue, 1 otherwise.
-- ----------------------------------------------------------------------
begin
    insert into pgq.failed_queue (ev_failed_reason, ev_failed_time,
        ev_id, ev_time, ev_txid, ev_owner, ev_retry, ev_type, ev_data,
        ev_extra1, ev_extra2, ev_extra3, ev_extra4)
    select x_reason, now(),
           ev_id, ev_time, NULL, sub_id, coalesce(ev_retry, 0),
           ev_type, ev_data, ev_extra1, ev_extra2, ev_extra3, ev_extra4
      from pgq.get_batch_events(x_batch_id),
           pgq.subscription
     where sub_batch = x_batch_id
       and ev_id = x_event_id;
    if not found then
        raise exception 'event not found';
    end if;
    return 1;

-- dont worry if the event is already in queue
exception
    when unique_violation then
        return 0;
end;
$$;


--
-- Name: event_retry(bigint, bigint, timestamp with time zone); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION event_retry(x_batch_id bigint, x_event_id bigint, x_retry_time timestamp with time zone) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.event_retry(3)
--
--     Put the event into retry queue, to be processed again later.
--
-- Parameters:
--      x_batch_id      - ID of active batch.
--      x_event_id      - event id
--      x_retry_time    - Time when the event should be put back into queue
--
-- Returns:
--     nothing
-- ----------------------------------------------------------------------
begin
    insert into pgq.retry_queue (ev_retry_after,
        ev_id, ev_time, ev_txid, ev_owner, ev_retry, ev_type, ev_data,
        ev_extra1, ev_extra2, ev_extra3, ev_extra4)
    select x_retry_time,
           ev_id, ev_time, NULL, sub_id, coalesce(ev_retry, 0) + 1,
           ev_type, ev_data, ev_extra1, ev_extra2, ev_extra3, ev_extra4
      from pgq.get_batch_events(x_batch_id),
           pgq.subscription
     where sub_batch = x_batch_id
       and ev_id = x_event_id;
    if not found then
        raise exception 'event not found';
    end if;
    return 1;

-- dont worry if the event is already in queue
exception
    when unique_violation then
        return 0;
end;
$$;


--
-- Name: event_retry(bigint, bigint, integer); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION event_retry(x_batch_id bigint, x_event_id bigint, x_retry_seconds integer) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.event_retry(3)
--
--     Put the event into retry queue, to be processed later again.
--
-- Parameters:
--      x_batch_id      - ID of active batch.
--      x_event_id      - event id
--      x_retry_seconds - Time when the event should be put back into queue
--
-- Returns:
--     nothing
-- ----------------------------------------------------------------------
declare
    new_retry  timestamptz;
begin
    new_retry := current_timestamp + ((x_retry_seconds || ' seconds')::interval);
    return pgq.event_retry(x_batch_id, x_event_id, new_retry);
end;
$$;


--
-- Name: event_retry_raw(text, text, timestamp with time zone, bigint, timestamp with time zone, integer, text, text, text, text, text, text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION event_retry_raw(x_queue text, x_consumer text, x_retry_after timestamp with time zone, x_ev_id bigint, x_ev_time timestamp with time zone, x_ev_retry integer, x_ev_type text, x_ev_data text, x_ev_extra1 text, x_ev_extra2 text, x_ev_extra3 text, x_ev_extra4 text) RETURNS bigint
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.event_retry_raw(12)
--
--      Allows full control over what goes to retry queue.
--
-- Parameters:
--      x_queue         - name of the queue
--      x_consumer      - name of the consumer
--      x_retry_after   - when the event should be processed again
--      x_ev_id         - event id
--      x_ev_time       - creation time
--      x_ev_retry      - retry count
--      x_ev_type       - user data
--      x_ev_data       - user data
--      x_ev_extra1     - user data
--      x_ev_extra2     - user data
--      x_ev_extra3     - user data
--      x_ev_extra4     - user data
--
-- Returns:
--      Event ID.
-- ----------------------------------------------------------------------
declare
    q record;
    id bigint;
begin
    select sub_id, queue_event_seq into q
      from pgq.consumer, pgq.queue, pgq.subscription
     where queue_name = x_queue
       and co_name = x_consumer
       and sub_consumer = co_id
       and sub_queue = queue_id;
    if not found then
        raise exception 'consumer not registered';
    end if;

    id := x_ev_id;
    if id is null then
        id := nextval(q.queue_event_seq);
    end if;

    insert into pgq.retry_queue (ev_retry_after,
            ev_id, ev_time, ev_owner, ev_retry,
            ev_type, ev_data, ev_extra1, ev_extra2, ev_extra3, ev_extra4)
    values (x_retry_after, x_ev_id, x_ev_time, q.sub_id, x_ev_retry,
            x_ev_type, x_ev_data, x_ev_extra1, x_ev_extra2,
            x_ev_extra3, x_ev_extra4);

    return id;
end;
$$;


--
-- Name: failed_event_count(text, text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION failed_event_count(x_queue_name text, x_consumer_name text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$ 
-- ----------------------------------------------------------------------
-- Function: pgq.failed_event_count(2)
--
--      Get size of failed event queue.
--
-- Parameters:
--      x_queue_name        - Queue name
--      x_consumer_name     - Consumer name
--
-- Returns:
--      Number of failed events in failed event queue.
-- ----------------------------------------------------------------------
declare 
    ret integer;
begin 
    select count(1) into ret
      from pgq.failed_queue, pgq.consumer, pgq.queue, pgq.subscription
     where queue_name = x_queue_name
       and co_name = x_consumer_name
       and sub_queue = queue_id
       and sub_consumer = co_id
       and ev_owner = sub_id;
    return ret;
end; 
$$;


--
-- Name: failed_event_delete(text, text, bigint); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION failed_event_delete(x_queue_name text, x_consumer_name text, x_event_id bigint) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$ 
-- ----------------------------------------------------------------------
-- Function: pgq.failed_event_delete(3)
--
--      Delete specific event from failed event queue.
--
-- Parameters:
--      x_queue_name        - Queue name
--      x_consumer_name     - Consumer name
--      x_event_id          - Event ID
--
-- Returns:
--      nothing
-- ----------------------------------------------------------------------
declare 
    x_sub_id integer;
begin 
    select sub_id into x_sub_id
      from pgq.subscription, pgq.consumer, pgq.queue
     where queue_name = x_queue_name
       and co_name = x_consumer_name
       and sub_consumer = co_id
       and sub_queue = queue_id;
    if not found then
        raise exception 'no such queue/consumer';
    end if;

    delete from pgq.failed_queue
     where ev_owner = x_sub_id
       and ev_id = x_event_id;
    if not found then
        raise exception 'event not found';
    end if;

    return 1;
end; 
$$;


--
-- Name: failed_queue; Type: TABLE; Schema: pgq; Owner: -; Tablespace: 
--

CREATE TABLE failed_queue (
    ev_failed_reason text,
    ev_failed_time timestamp with time zone NOT NULL,
    ev_id bigint NOT NULL,
    ev_time timestamp with time zone NOT NULL,
    ev_txid bigint,
    ev_owner integer NOT NULL,
    ev_retry integer,
    ev_type text,
    ev_data text,
    ev_extra1 text,
    ev_extra2 text,
    ev_extra3 text,
    ev_extra4 text
);


--
-- Name: failed_event_list(text, text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION failed_event_list(x_queue_name text, x_consumer_name text) RETURNS SETOF failed_queue
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$ 
-- ----------------------------------------------------------------------
-- Function: pgq.failed_event_list(2)
--
--      Get list of all failed events for one consumer.
--
-- Parameters:
--      x_queue_name        - Queue name
--      x_consumer_name     - Consumer name
--
-- Returns:
--      List of failed events.
-- ----------------------------------------------------------------------
declare 
    rec pgq.failed_queue%rowtype; 
begin 
    for rec in
        select fq.*
          from pgq.failed_queue fq, pgq.consumer,
               pgq.queue, pgq.subscription
         where queue_name = x_queue_name
           and co_name = x_consumer_name
           and sub_consumer = co_id
           and sub_queue = queue_id
           and ev_owner = sub_id
        order by ev_id
    loop
        return next rec; 
    end loop; 
    return;
end; 
$$;


--
-- Name: failed_event_list(text, text, integer, integer); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION failed_event_list(x_queue_name text, x_consumer_name text, x_count integer, x_offset integer) RETURNS SETOF failed_queue
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$ 
-- ----------------------------------------------------------------------
-- Function: pgq.failed_event_list(4)
--
--      Get list of failed events, from offset and specific count.
--
-- Parameters:
--      x_queue_name        - Queue name
--      x_consumer_name     - Consumer name
--      x_count             - Max amount of events to fetch
--      x_offset            - From this offset
--
-- Returns:
--      List of failed events.
-- ----------------------------------------------------------------------
declare 
    rec pgq.failed_queue%rowtype; 
begin 
    for rec in
        select fq.*
          from pgq.failed_queue fq, pgq.consumer,
               pgq.queue, pgq.subscription
         where queue_name = x_queue_name
           and co_name = x_consumer_name
           and sub_consumer = co_id
           and sub_queue = queue_id
           and ev_owner = sub_id
        order by ev_id
        limit x_count
        offset x_offset
    loop
        return next rec; 
    end loop; 
    return;
end; 
$$;


--
-- Name: failed_event_retry(text, text, bigint); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION failed_event_retry(x_queue_name text, x_consumer_name text, x_event_id bigint) RETURNS bigint
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$ 
-- ----------------------------------------------------------------------
-- Function: pgq.failed_event_retry(3)
--
--      Insert specific event from failed queue to main queue.
--
-- Parameters:
--      x_queue_name        - Queue name
--      x_consumer_name     - Consumer name
--      x_event_id          - Event ID
--
-- Returns:
--      nothing
-- ----------------------------------------------------------------------
declare 
    ret         bigint;
    x_sub_id    integer;
begin 
    select sub_id into x_sub_id
      from pgq.subscription, pgq.consumer, pgq.queue
     where queue_name = x_queue_name
       and co_name = x_consumer_name
       and sub_consumer = co_id
       and sub_queue = queue_id;
    if not found then
        raise exception 'no such queue/consumer';
    end if;

    select pgq.insert_event_raw(x_queue_name, ev_id, ev_time,
            ev_owner, ev_retry, ev_type, ev_data,
            ev_extra1, ev_extra2, ev_extra3, ev_extra4)
      into ret
      from pgq.failed_queue, pgq.consumer, pgq.queue
     where ev_owner = x_sub_id
       and ev_id = x_event_id;
    if not found then
        raise exception 'event not found';
    end if;

    perform pgq.failed_event_delete(x_queue_name, x_consumer_name, x_event_id);

    return ret;
end; 
$$;


--
-- Name: finish_batch(bigint); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION finish_batch(x_batch_id bigint) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.finish_batch(1)
--
--      Closes a batch.  No more operations can be done with events
--      of this batch.
--
-- Parameters:
--      x_batch_id      - id of batch.
--
-- Returns:
--      If batch 1 if batch was found, 0 otherwise.
-- ----------------------------------------------------------------------
begin
    update pgq.subscription
        set sub_active = now(),
            sub_last_tick = sub_next_tick,
            sub_next_tick = null,
            sub_batch = null
        where sub_batch = x_batch_id;
    if not found then
        raise warning 'finish_batch: batch % not found', x_batch_id;
        return 0;
    end if;

    return 1;
end;
$$;


--
-- Name: force_tick(text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION force_tick(i_queue_name text) RETURNS bigint
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.force_tick(2)
--
--      Simulate lots of events happening to force ticker to tick.
--
--      Should be called in loop, with some delay until last tick
--      changes or too much time is passed.
--
--      Such function is needed because paraller calls of pgq.ticker() are
--      dangerous, and cannot be protected with locks as snapshot
--      is taken before locking.
--
-- Parameters:
--      i_queue_name     - Name of the queue
--
-- Returns:
--      Currently last tick id.
-- ----------------------------------------------------------------------
declare
    q  record;
    t  record;
begin
    -- bump seq and get queue id
    select queue_id,
           setval(queue_event_seq, nextval(queue_event_seq)
                                   + queue_ticker_max_count * 2) as tmp
      into q from pgq.queue
     where queue_name = i_queue_name
       and not queue_external_ticker;
    if not found then
        raise exception 'queue not found or ticks not allowed';
    end if;

    -- return last tick id
    select tick_id into t from pgq.tick
     where tick_queue = q.queue_id
     order by tick_queue desc, tick_id desc limit 1;

    return t.tick_id;
end;
$$;


--
-- Name: get_batch_events(bigint); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION get_batch_events(x_batch_id bigint) RETURNS SETOF ret_batch_event
    LANGUAGE plpgsql
    AS $$ 
-- ----------------------------------------------------------------------
-- Function: pgq.get_batch_events(1)
--
--      Get all events in batch.
--
-- Parameters:
--      x_batch_id      - ID of active batch.
--
-- Returns:
--      List of events.
-- ----------------------------------------------------------------------
declare 
    rec pgq.ret_batch_event%rowtype; 
    sql text; 
begin 
    sql := pgq.batch_event_sql(x_batch_id); 
    for rec in execute sql loop
        return next rec; 
    end loop; 
    return;
end; 
$$;


--
-- Name: get_batch_info(bigint); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION get_batch_info(x_batch_id bigint) RETURNS ret_batch_info
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.get_batch_info(1)
--
--      Returns detailed info about a batch.
--
-- Parameters:
--      x_batch_id      - id of a active batch.
--
-- Returns:
--      Info
-- ----------------------------------------------------------------------
declare
    ret  pgq.ret_batch_info%rowtype;
begin
    select queue_name, co_name,
           prev.tick_time as batch_start,
           cur.tick_time as batch_end,
           sub_last_tick, sub_next_tick,
           current_timestamp - cur.tick_time as lag
        into ret
        from pgq.subscription, pgq.tick cur, pgq.tick prev,
             pgq.queue, pgq.consumer
        where sub_batch = x_batch_id
          and prev.tick_id = sub_last_tick
          and prev.tick_queue = sub_queue
          and cur.tick_id = sub_next_tick
          and cur.tick_queue = sub_queue
          and queue_id = sub_queue
          and co_id = sub_consumer;
    return ret;
end;
$$;


--
-- Name: get_consumer_info(); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION get_consumer_info() RETURNS SETOF ret_consumer_info
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.get_consumer_info(0)
--
--      Returns info about all consumers on all queues.
--
-- Returns:
--      See pgq.get_consumer_info(2)
-- ----------------------------------------------------------------------
declare
    ret  pgq.ret_consumer_info%rowtype;
    i    record;
begin
    for i in select queue_name from pgq.queue order by 1
    loop
        for ret in
            select * from pgq.get_consumer_info(i.queue_name)
        loop
            return next ret;
        end loop;
    end loop;
    return;
end;
$$;


--
-- Name: get_consumer_info(text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION get_consumer_info(x_queue_name text) RETURNS SETOF ret_consumer_info
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.get_consumer_info(1)
--
--      Returns info about consumers on one particular queue.
--
-- Parameters:
--      x_queue_name    - Queue name
--
-- Returns:
--      See pgq.get_consumer_info(2)
-- ----------------------------------------------------------------------
declare
    ret  pgq.ret_consumer_info%rowtype;
    tmp record;
begin
    for tmp in
        select queue_name, co_name
          from pgq.queue, pgq.consumer, pgq.subscription
         where queue_id = sub_queue
           and co_id = sub_consumer
           and queue_name = x_queue_name
         order by 1, 2
    loop
        for ret in
            select * from pgq.get_consumer_info(tmp.queue_name, tmp.co_name)
        loop
            return next ret;
        end loop;
    end loop;
    return;
end;
$$;


--
-- Name: get_consumer_info(text, text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION get_consumer_info(x_queue_name text, x_consumer_name text) RETURNS SETOF ret_consumer_info
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.get_consumer_info(2)
--
--      Get info about particular consumer on particular queue.
--
-- Parameters:
--      x_queue_name        - name of a queue.
--      x_consumer_name     - name of a consumer
--
-- Returns:
--      queue_name          - Queue name
--      consumer_name       - Consumer name
--      lag                 - How old are events the consumer is processing
--      last_seen           - When the consumer seen by pgq
--      last_tick           - Tick ID of last processed tick
--      current_batch       - Current batch ID, if one is active or NULL
--      next_tick           - If batch is active, then its final tick.
-- ----------------------------------------------------------------------
declare
    ret  pgq.ret_consumer_info%rowtype;
begin
    for ret in 
        select queue_name, co_name,
               current_timestamp - tick_time as lag,
               current_timestamp - sub_active as last_seen,
               sub_last_tick as last_tick,
               sub_batch as current_batch,
               sub_next_tick as next_tick
          from pgq.subscription, pgq.tick, pgq.queue, pgq.consumer
         where tick_id = sub_last_tick
           and queue_id = sub_queue
           and tick_queue = sub_queue
           and co_id = sub_consumer
           and queue_name = x_queue_name
           and co_name = x_consumer_name
         order by 1,2
    loop
        return next ret;
    end loop;
    return;
end;
$$;


--
-- Name: get_queue_info(); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION get_queue_info() RETURNS SETOF ret_queue_info
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.get_queue_info(0)
--
--      Get info about all queues.
--
-- Returns:
--      List of pgq.ret_queue_info records.
-- ----------------------------------------------------------------------
declare
    q     record;
    ret   pgq.ret_queue_info%rowtype;
begin
    for q in
        select queue_name from pgq.queue order by 1
    loop
        select * into ret from pgq.get_queue_info(q.queue_name);
        return next ret;
    end loop;
    return;
end;
$$;


--
-- Name: get_queue_info(text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION get_queue_info(qname text) RETURNS ret_queue_info
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.get_queue_info(1)
--
--      Get info about particular queue.
--
-- Returns:
--      One pgq.ret_queue_info record.
-- ----------------------------------------------------------------------
declare
    ret   pgq.ret_queue_info%rowtype;
begin
    select queue_name, queue_ntables, queue_cur_table,
           queue_rotation_period, queue_switch_time,
           queue_external_ticker,
           queue_ticker_max_count, queue_ticker_max_lag,
           queue_ticker_idle_period,
           (select current_timestamp - tick_time
              from pgq.tick where tick_queue = queue_id
             order by tick_queue desc, tick_id desc limit 1
            ) as ticker_lag
      into ret from pgq.queue where queue_name = qname;
    return ret;
end;
$$;


--
-- Name: grant_perms(text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION grant_perms(x_queue_name text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.grant_perms(1)
--
--      Make event tables readable by public.
--
-- Parameters:
--      x_queue_name        - Name of the queue.
--
-- Returns:
--      nothing
-- ----------------------------------------------------------------------
declare
    q           record;
    i           integer;
    tbl_perms   text;
    seq_perms   text;
begin
    select * from pgq.queue into q
        where queue_name = x_queue_name;
    if not found then
        raise exception 'Queue not found';
    end if;

    if true then
        -- safe, all access must go via functions
        seq_perms := 'select';
        tbl_perms := 'select';
    else
        -- allow ordinery users to directly insert
        -- to event tables.  dangerous.
        seq_perms := 'select, update';
        tbl_perms := 'select, insert';
    end if;

    -- tick seq, normal users don't need to modify it
    execute 'grant ' || seq_perms
        || ' on ' || q.queue_tick_seq || ' to public';

    -- event seq
    execute 'grant ' || seq_perms
        || ' on ' || q.queue_event_seq || ' to public';
    
    -- parent table for events
    execute 'grant select on ' || q.queue_data_pfx || ' to public';

    -- real event tables
    for i in 0 .. q.queue_ntables - 1 loop
        execute 'grant ' || tbl_perms
            || ' on ' || q.queue_data_pfx || '_' || i
            || ' to public';
    end loop;

    return 1;
end;
$$;


--
-- Name: insert_event(text, text, text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION insert_event(queue_name text, ev_type text, ev_data text) RETURNS bigint
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.insert_event(3)
--
--      Insert a event into queue.
--
-- Parameters:
--      queue_name      - Name of the queue
--      ev_type         - User-specified type for the event
--      ev_data         - User data for the event
--
-- Returns:
--      Event ID
-- ----------------------------------------------------------------------
begin
    return pgq.insert_event(queue_name, ev_type, ev_data, null, null, null, null);
end;
$$;


--
-- Name: insert_event(text, text, text, text, text, text, text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION insert_event(queue_name text, ev_type text, ev_data text, ev_extra1 text, ev_extra2 text, ev_extra3 text, ev_extra4 text) RETURNS bigint
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.insert_event(7)
--
--      Insert a event into queue with all the extra fields.
--
-- Parameters:
--      queue_name      - Name of the queue
--      ev_type         - User-specified type for the event
--      ev_data         - User data for the event
--      ev_extra1       - Extra data field for the event
--      ev_extra2       - Extra data field for the event
--      ev_extra3       - Extra data field for the event
--      ev_extra4       - Extra data field for the event
--
-- Returns:
--      Event ID
-- ----------------------------------------------------------------------
begin
    return pgq.insert_event_raw(queue_name, null, now(), null, null,
            ev_type, ev_data, ev_extra1, ev_extra2, ev_extra3, ev_extra4);
end;
$$;


--
-- Name: maint_retry_events(); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION maint_retry_events() RETURNS integer
    LANGUAGE plpgsql
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.maint_retry_events(0)
--
--      Moves retry events back to main queue.
--
--      It moves small amount at a time.  It should be called
--      until it returns 0
--
-- Returns:
--      Number of events processed.
-- ----------------------------------------------------------------------
declare
    cnt    integer;
    rec    record;
begin
    cnt := 0;

    -- allow only single event mover at a time, without affecting inserts
    lock table pgq.retry_queue in share update exclusive mode;

    for rec in
        select queue_name,
               ev_id, ev_time, ev_owner, ev_retry, ev_type, ev_data,
               ev_extra1, ev_extra2, ev_extra3, ev_extra4
          from pgq.retry_queue, pgq.queue, pgq.subscription
         where ev_retry_after <= current_timestamp
           and sub_id = ev_owner
           and queue_id = sub_queue
         order by ev_retry_after
         limit 10
    loop
        cnt := cnt + 1;
        perform pgq.insert_event_raw(rec.queue_name,
                    rec.ev_id, rec.ev_time, rec.ev_owner, rec.ev_retry,
                    rec.ev_type, rec.ev_data, rec.ev_extra1, rec.ev_extra2,
                    rec.ev_extra3, rec.ev_extra4);
        delete from pgq.retry_queue
         where ev_owner = rec.ev_owner
           and ev_id = rec.ev_id;
    end loop;
    return cnt;
end;
$$;


--
-- Name: maint_rotate_tables_step1(text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION maint_rotate_tables_step1(i_queue_name text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.maint_rotate_tables_step1(1)
--
--      Rotate tables for one queue.
--
-- Parameters:
--      i_queue_name        - Name of the queue
--
-- Returns:
--      1 if rotation happened, otherwise 0.
-- ----------------------------------------------------------------------
declare
    badcnt          integer;
    cf              record;
    nr              integer;
    tbl             text;
    lowest_tick_id  int8;
    lowest_xmin     int8;
begin
    -- check if needed and load record
    select * from pgq.queue into cf
        where queue_name = i_queue_name
          and queue_rotation_period is not null
          and queue_switch_step2 is not null
          and queue_switch_time + queue_rotation_period < current_timestamp
        for update;
    if not found then
        return 0;
    end if;

    -- find lowest tick for that queue
    select min(sub_last_tick) into lowest_tick_id
      from pgq.subscription
     where sub_queue = cf.queue_id;

    -- if some consumer exists
    if lowest_tick_id is not null then
        -- is the slowest one still on previous table?
        select txid_snapshot_xmin(tick_snapshot) into lowest_xmin
          from pgq.tick
         where tick_queue = cf.queue_id
           and tick_id = lowest_tick_id;
        if lowest_xmin <= cf.queue_switch_step2 then
            return 0; -- skip rotation then
        end if;
    end if;

    -- nobody on previous table, we can rotate
    
    -- calc next table number and name
    nr := cf.queue_cur_table + 1;
    if nr = cf.queue_ntables then
        nr := 0;
    end if;
    tbl := cf.queue_data_pfx || '_' || nr;

    -- there may be long lock on the table from pg_dump,
    -- detect it and skip rotate then
    begin
        execute 'lock table ' || tbl || ' nowait';
        execute 'truncate ' || tbl;
    exception
        when lock_not_available then
            -- cannot truncate, skipping rotate
            return 0;
    end;

    -- remember the moment
    update pgq.queue
        set queue_cur_table = nr,
            queue_switch_time = current_timestamp,
            queue_switch_step1 = txid_current(),
            queue_switch_step2 = NULL
        where queue_id = cf.queue_id;

    -- Clean ticks by using step2 txid from previous rotation.
    -- That should keep all ticks for all batches that are completely
    -- in old table.  This keeps them for longer than needed, but:
    -- 1. we want the pgq.tick table to be big, to avoid Postgres
    --    accitentally switching to seqscans on that.
    -- 2. that way we guarantee to consumers that they an be moved
    --    back on the queue at least for one rotation_period.
    --    (may help in disaster recovery)
    delete from pgq.tick
        where tick_queue = cf.queue_id
          and txid_snapshot_xmin(tick_snapshot) < cf.queue_switch_step2;

    return 1;
end;
$$;


--
-- Name: maint_rotate_tables_step2(); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION maint_rotate_tables_step2() RETURNS integer
    LANGUAGE plpgsql
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.maint_rotate_tables_step2(0)
--
--      Stores the txid when the rotation was visible.  It should be
--      called in separate transaction than pgq.maint_rotate_tables_step1()
-- ----------------------------------------------------------------------
begin
    update pgq.queue
       set queue_switch_step2 = txid_current()
     where queue_switch_step2 is null;
    return 1;
end;
$$;


--
-- Name: maint_tables_to_vacuum(); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION maint_tables_to_vacuum() RETURNS SETOF text
    LANGUAGE plpgsql
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.maint_tables_to_vacuum(0)
--
--      Returns list of tablenames that need frequent vacuuming.
--
--      The goal is to avoid hardcoding them into maintenance process.
--
-- Returns:
--      List of table names.
-- ----------------------------------------------------------------------
declare
    row record;
begin
    return next 'pgq.subscription';
    return next 'pgq.consumer';
    return next 'pgq.queue';
    return next 'pgq.tick';
    return next 'pgq.retry_queue';

    -- include also txid, pgq_ext and londiste tables if they exist
    for row in
        select n.nspname as scm, t.relname as tbl
          from pg_class t, pg_namespace n
         where n.oid = t.relnamespace
           and n.nspname = 'txid' and t.relname = 'epoch'
        union all
        select n.nspname as scm, t.relname as tbl
          from pg_class t, pg_namespace n
         where n.oid = t.relnamespace
           and n.nspname = 'londiste' and t.relname = 'completed'
        union all
        select n.nspname as scm, t.relname as tbl
          from pg_class t, pg_namespace n
         where n.oid = t.relnamespace
           and n.nspname = 'pgq_ext'
           and t.relname in ('completed_tick', 'completed_batch', 'completed_event', 'partial_batch')
    loop
        return next row.scm || '.' || row.tbl;
    end loop;

    return;
end;
$$;


--
-- Name: next_batch(text, text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION next_batch(x_queue_name text, x_consumer_name text) RETURNS bigint
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.next_batch(2)
--
--      Makes next block of events active.
--
--      If it returns NULL, there is no events available in queue.
--      Consumer should sleep a bith then.
--
-- Parameters:
--      x_queue_name        - Name of the queue
--      x_consumer_name     - Name of the consumer
--
-- Returns:
--      Batch ID or NULL if there are no more events available.
-- ----------------------------------------------------------------------
declare
    next_tick       bigint;
    batch_id        bigint;
    errmsg          text;
    sub             record;
begin
    select sub_queue, sub_consumer, sub_id, sub_last_tick, sub_batch into sub
        from pgq.queue q, pgq.consumer c, pgq.subscription s
        where q.queue_name = x_queue_name
          and c.co_name = x_consumer_name
          and s.sub_queue = q.queue_id
          and s.sub_consumer = c.co_id;
    if not found then
        errmsg := 'Not subscriber to queue: '
            || coalesce(x_queue_name, 'NULL')
            || '/'
            || coalesce(x_consumer_name, 'NULL');
        raise exception '%', errmsg;
    end if;

    -- has already active batch
    if sub.sub_batch is not null then
        return sub.sub_batch;
    end if;

    -- find next tick
    select tick_id into next_tick
        from pgq.tick
        where tick_id > sub.sub_last_tick
          and tick_queue = sub.sub_queue
        order by tick_queue asc, tick_id asc
        limit 1;
    if not found then
        -- nothing to do
        return null;
    end if;

    -- get next batch
    batch_id := nextval('pgq.batch_id_seq');
    update pgq.subscription
        set sub_batch = batch_id,
            sub_next_tick = next_tick,
            sub_active = now()
        where sub_queue = sub.sub_queue
          and sub_consumer = sub.sub_consumer;
    return batch_id;
end;
$$;


--
-- Name: register_consumer(text, text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION register_consumer(x_queue_name text, x_consumer_id text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.register_consumer(2)
--
--      Subscribe consumer on a queue.
--
--      From this moment forward, consumer will see all events in the queue.
--
-- Parameters:
--      x_queue_name        - Name of queue
--      x_consumer_name     - Name of consumer
--
-- Returns:
--      0  - if already registered
--      1  - if new registration
-- ----------------------------------------------------------------------
begin
    return pgq.register_consumer(x_queue_name, x_consumer_id, NULL);
end;
$$;


--
-- Name: register_consumer(text, text, bigint); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION register_consumer(x_queue_name text, x_consumer_name text, x_tick_pos bigint) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.register_consumer(3)
--
--      Extended registration, allows to specify tick_id.
--
-- Note:
--      For usage in special situations.
--
-- Parameters:
--      x_queue_name        - Name of a queue
--      x_consumer_name     - Name of consumer
--      x_tick_pos          - Tick ID
--
-- Returns:
--      0/1 whether consumer has already registered.
-- ----------------------------------------------------------------------
declare
    tmp         text;
    last_tick   bigint;
    x_queue_id          integer;
    x_consumer_id integer;
    queue integer;
    sub record;
begin
    select queue_id into x_queue_id from pgq.queue
        where queue_name = x_queue_name;
    if not found then
        raise exception 'Event queue not created yet';
    end if;

    -- get consumer and create if new
    select co_id into x_consumer_id from pgq.consumer
        where co_name = x_consumer_name;
    if not found then
        insert into pgq.consumer (co_name) values (x_consumer_name);
        x_consumer_id := currval('pgq.consumer_co_id_seq');
    end if;

    -- if particular tick was requested, check if it exists
    if x_tick_pos is not null then
        perform 1 from pgq.tick
            where tick_queue = x_queue_id
              and tick_id = x_tick_pos;
        if not found then
            raise exception 'cannot reposition, tick not found: %', x_tick_pos;
        end if;
    end if;

    -- check if already registered
    select sub_last_tick, sub_batch into sub
        from pgq.subscription
        where sub_consumer = x_consumer_id
          and sub_queue  = x_queue_id;
    if found then
        if x_tick_pos is not null then
            if sub.sub_batch is not null then
                raise exception 'reposition while active not allowed';
            end if;
            -- update tick pos if requested
            update pgq.subscription
                set sub_last_tick = x_tick_pos
                where sub_consumer = x_consumer_id
                  and sub_queue = x_queue_id;
        end if;
        -- already registered
        return 0;
    end if;

    --  new registration
    if x_tick_pos is null then
        -- start from current tick
        select tick_id into last_tick from pgq.tick
            where tick_queue = x_queue_id
            order by tick_queue desc, tick_id desc
            limit 1;
        if not found then
            raise exception 'No ticks for this queue.  Please run ticker on database.';
        end if;
    else
        last_tick := x_tick_pos;
    end if;

    -- register
    insert into pgq.subscription (sub_queue, sub_consumer, sub_last_tick)
        values (x_queue_id, x_consumer_id, last_tick);
    return 1;
end;
$$;


--
-- Name: ticker(); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION ticker() RETURNS bigint
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.ticker(0)
--
--     Creates ticks for all queues which dont have external ticker.
--
-- Returns:
--     Number of queues that were processed.
-- ----------------------------------------------------------------------
declare
    res bigint;
begin
    select count(pgq.ticker(queue_name)) into res 
        from pgq.queue where not queue_external_ticker;
    return res;
end;
$$;


--
-- Name: ticker(text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION ticker(i_queue_name text) RETURNS bigint
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.ticker(1)
--
--     Insert a tick with a tick_id from sequence.
--
--     For pgqadm usage.
--
-- Parameters:
--     i_queue_name     - Name of the queue
--
-- Returns:
--     Tick id.
-- ----------------------------------------------------------------------
declare
    res bigint;
    ext boolean;
    seq text;
    q record;
begin
    select queue_id, queue_tick_seq, queue_external_ticker into q
        from pgq.queue where queue_name = i_queue_name;
    if not found then
        raise exception 'no such queue';
    end if;

    if q.queue_external_ticker then
        raise exception 'This queue has external tick source.';
    end if;

    insert into pgq.tick (tick_queue, tick_id)
        values (q.queue_id, nextval(q.queue_tick_seq));

    res = currval(q.queue_tick_seq);
    return res;
end;
$$;


--
-- Name: ticker(text, bigint); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION ticker(i_queue_name text, i_tick_id bigint) RETURNS bigint
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.ticker(2)
--
--     Insert a tick with a particular tick_id.
--
--     For external tickers.
--
-- Parameters:
--     i_queue_name     - Name of the queue
--     i_tick_id        - Id of new tick.
--
-- Returns:
--     Tick id.
-- ----------------------------------------------------------------------
begin
    insert into pgq.tick (tick_queue, tick_id)
    select queue_id, i_tick_id
        from pgq.queue
        where queue_name = i_queue_name
          and queue_external_ticker;
    if not found then
        raise exception 'queue not found';
    end if;
    return i_tick_id;
end;
$$;


--
-- Name: unregister_consumer(text, text); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION unregister_consumer(x_queue_name text, x_consumer_name text) RETURNS integer
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.unregister_consumer(2)
--
--      Unsubscriber consumer from the queue.  Also consumer's failed
--      and retry events are deleted.
--
-- Parameters:
--      x_queue_name        - Name of the queue
--      x_consumer_name     - Name of the consumer
--
-- Returns:
--      nothing
-- ----------------------------------------------------------------------
declare
    x_sub_id integer;
begin
    select sub_id into x_sub_id
        from pgq.subscription, pgq.consumer, pgq.queue
        where sub_queue = queue_id
          and sub_consumer = co_id
          and queue_name = x_queue_name
          and co_name = x_consumer_name;
    if not found then
        raise exception 'consumer not registered on queue';
    end if;

    delete from pgq.retry_queue
        where ev_owner = x_sub_id;

    delete from pgq.failed_queue
        where ev_owner = x_sub_id;

    delete from pgq.subscription
        where sub_id = x_sub_id;

    return 1;
end;
$$;


--
-- Name: version(); Type: FUNCTION; Schema: pgq; Owner: -
--

CREATE FUNCTION version() RETURNS text
    LANGUAGE plpgsql
    AS $$
-- ----------------------------------------------------------------------
-- Function: pgq.version(0)
--
--      Returns verison string for pgq.  ATM its SkyTools version
--      that is only bumped when PGQ database code changes.
-- ----------------------------------------------------------------------
begin
    return '2.1.8';
end;
$$;


SET search_path = public, pg_catalog;

--
-- Name: _st_asgeojson(integer, geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_asgeojson(integer, geometry, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asGeoJson';


--
-- Name: _st_asgeojson(integer, geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_asgeojson(integer, geography, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_geojson';


--
-- Name: _st_asgml(integer, geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_asgml(integer, geometry, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asGML';


--
-- Name: _st_asgml(integer, geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_asgml(integer, geography, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_gml';


--
-- Name: _st_askml(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_askml(integer, geometry, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asKML';


--
-- Name: _st_askml(integer, geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_askml(integer, geography, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_kml';


--
-- Name: _st_bestsrid(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_bestsrid(geography) RETURNS integer
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_BestSRID($1,$1)$_$;


--
-- Name: _st_bestsrid(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_bestsrid(geography, geography) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_bestsrid';


--
-- Name: _st_buffer(geometry, double precision, cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_buffer(geometry, double precision, cstring) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'buffer';


--
-- Name: _st_contains(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_contains(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'contains';


--
-- Name: _st_containsproperly(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_containsproperly(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'containsproperly';


--
-- Name: _st_coveredby(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_coveredby(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'coveredby';


--
-- Name: _st_covers(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_covers(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'covers';


--
-- Name: _st_covers(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_covers(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_covers';


--
-- Name: _st_crosses(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_crosses(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'crosses';


--
-- Name: _st_dfullywithin(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_dfullywithin(geometry, geometry, double precision) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dfullywithin';


--
-- Name: _st_distance(geography, geography, double precision, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_distance(geography, geography, double precision, boolean) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_distance';


--
-- Name: _st_dumppoints(geometry, integer[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_dumppoints(the_geom geometry, cur_path integer[]) RETURNS SETOF geometry_dump
    LANGUAGE plpgsql
    AS $$
DECLARE
  tmp geometry_dump;
  tmp2 geometry_dump;
  nb_points integer;
  nb_geom integer;
  i integer;
  j integer;
  g geometry;
  
BEGIN
  
  RAISE DEBUG '%,%', cur_path, ST_GeometryType(the_geom);

  -- Special case (MULTI* OR GEOMETRYCOLLECTION) : iterate and return the DumpPoints of the geometries
  SELECT ST_NumGeometries(the_geom) INTO nb_geom;

  IF (nb_geom IS NOT NULL) THEN
    
    i = 1;
    FOR tmp2 IN SELECT (ST_Dump(the_geom)).* LOOP

      FOR tmp IN SELECT * FROM _ST_DumpPoints(tmp2.geom, cur_path || tmp2.path) LOOP
	    RETURN NEXT tmp;
      END LOOP;
      i = i + 1;
      
    END LOOP;

    RETURN;
  END IF;
  

  -- Special case (POLYGON) : return the points of the rings of a polygon
  IF (ST_GeometryType(the_geom) = 'ST_Polygon') THEN

    FOR tmp IN SELECT * FROM _ST_DumpPoints(ST_ExteriorRing(the_geom), cur_path || ARRAY[1]) LOOP
      RETURN NEXT tmp;
    END LOOP;
    
    j := ST_NumInteriorRings(the_geom);
    FOR i IN 1..j LOOP
        FOR tmp IN SELECT * FROM _ST_DumpPoints(ST_InteriorRingN(the_geom, i), cur_path || ARRAY[i+1]) LOOP
          RETURN NEXT tmp;
        END LOOP;
    END LOOP;
    
    RETURN;
  END IF;

    
  -- Special case (POINT) : return the point
  IF (ST_GeometryType(the_geom) = 'ST_Point') THEN

    tmp.path = cur_path || ARRAY[1];
    tmp.geom = the_geom;

    RETURN NEXT tmp;
    RETURN;

  END IF;


  -- Use ST_NumPoints rather than ST_NPoints to have a NULL value if the_geom isn't
  -- a LINESTRING or CIRCULARSTRING.
  SELECT ST_NumPoints(the_geom) INTO nb_points;

  -- This should never happen
  IF (nb_points IS NULL) THEN
    RAISE EXCEPTION 'Unexpected error while dumping geometry %', ST_AsText(the_geom);
  END IF;

  FOR i IN 1..nb_points LOOP
    tmp.path = cur_path || ARRAY[i];
    tmp.geom := ST_PointN(the_geom, i);
    RETURN NEXT tmp;
  END LOOP;
   
END
$$;


--
-- Name: _st_dwithin(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_dwithin(geometry, geometry, double precision) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_dwithin';


--
-- Name: _st_dwithin(geography, geography, double precision, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_dwithin(geography, geography, double precision, boolean) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_dwithin';


--
-- Name: _st_equals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_equals(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geomequals';


--
-- Name: _st_expand(geography, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_expand(geography, double precision) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_expand';


--
-- Name: _st_intersects(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_intersects(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'intersects';


--
-- Name: _st_linecrossingdirection(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_linecrossingdirection(geometry, geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'ST_LineCrossingDirection';


--
-- Name: _st_longestline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_longestline(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_longestline2d';


--
-- Name: _st_maxdistance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_maxdistance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_maxdistance2d_linestring';


--
-- Name: _st_orderingequals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_orderingequals(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_same';


--
-- Name: _st_overlaps(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_overlaps(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'overlaps';


--
-- Name: _st_pointoutside(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_pointoutside(geography) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_point_outside';


--
-- Name: _st_touches(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_touches(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'touches';


--
-- Name: _st_within(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION _st_within(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'within';


--
-- Name: addauth(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addauth(text) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$ 
DECLARE
	lockid alias for $1;
	okay boolean;
	myrec record;
BEGIN
	-- check to see if table exists
	--  if not, CREATE TEMP TABLE mylock (transid xid, lockcode text)
	okay := 'f';
	FOR myrec IN SELECT * FROM pg_class WHERE relname = 'temp_lock_have_table' LOOP
		okay := 't';
	END LOOP; 
	IF (okay <> 't') THEN 
		CREATE TEMP TABLE temp_lock_have_table (transid xid, lockcode text);
			-- this will only work from pgsql7.4 up
			-- ON COMMIT DELETE ROWS;
	END IF;

	--  INSERT INTO mylock VALUES ( $1)
--	EXECUTE 'INSERT INTO temp_lock_have_table VALUES ( '||
--		quote_literal(getTransactionID()) || ',' ||
--		quote_literal(lockid) ||')';

	INSERT INTO temp_lock_have_table VALUES (getTransactionID(), lockid);

	RETURN true::boolean;
END;
$_$;


--
-- Name: addbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addbbox(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addBBOX';


--
-- Name: addgeometrycolumn(character varying, character varying, integer, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addgeometrycolumn(character varying, character varying, integer, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret  text;
BEGIN
	SELECT AddGeometryColumn('','',$1,$2,$3,$4,$5) into ret;
	RETURN ret;
END;
$_$;


--
-- Name: addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addgeometrycolumn(character varying, character varying, character varying, integer, character varying, integer) RETURNS text
    LANGUAGE plpgsql STABLE STRICT
    AS $_$
DECLARE
	ret  text;
BEGIN
	SELECT AddGeometryColumn('',$1,$2,$3,$4,$5,$6) into ret;
	RETURN ret;
END;
$_$;


--
-- Name: addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addgeometrycolumn(character varying, character varying, character varying, character varying, integer, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	catalog_name alias for $1;
	schema_name alias for $2;
	table_name alias for $3;
	column_name alias for $4;
	new_srid alias for $5;
	new_type alias for $6;
	new_dim alias for $7;
	rec RECORD;
	sr varchar;
	real_schema name;
	sql text;

BEGIN

	-- Verify geometry type
	IF ( NOT ( (new_type = 'GEOMETRY') OR
			   (new_type = 'GEOMETRYCOLLECTION') OR
			   (new_type = 'POINT') OR
			   (new_type = 'MULTIPOINT') OR
			   (new_type = 'POLYGON') OR
			   (new_type = 'MULTIPOLYGON') OR
			   (new_type = 'LINESTRING') OR
			   (new_type = 'MULTILINESTRING') OR
			   (new_type = 'GEOMETRYCOLLECTIONM') OR
			   (new_type = 'POINTM') OR
			   (new_type = 'MULTIPOINTM') OR
			   (new_type = 'POLYGONM') OR
			   (new_type = 'MULTIPOLYGONM') OR
			   (new_type = 'LINESTRINGM') OR
			   (new_type = 'MULTILINESTRINGM') OR
			   (new_type = 'CIRCULARSTRING') OR
			   (new_type = 'CIRCULARSTRINGM') OR
			   (new_type = 'COMPOUNDCURVE') OR
			   (new_type = 'COMPOUNDCURVEM') OR
			   (new_type = 'CURVEPOLYGON') OR
			   (new_type = 'CURVEPOLYGONM') OR
			   (new_type = 'MULTICURVE') OR
			   (new_type = 'MULTICURVEM') OR
			   (new_type = 'MULTISURFACE') OR
			   (new_type = 'MULTISURFACEM')) )
	THEN
		RAISE EXCEPTION 'Invalid type name - valid ones are:
	POINT, MULTIPOINT,
	LINESTRING, MULTILINESTRING,
	POLYGON, MULTIPOLYGON,
	CIRCULARSTRING, COMPOUNDCURVE, MULTICURVE,
	CURVEPOLYGON, MULTISURFACE,
	GEOMETRY, GEOMETRYCOLLECTION,
	POINTM, MULTIPOINTM,
	LINESTRINGM, MULTILINESTRINGM,
	POLYGONM, MULTIPOLYGONM,
	CIRCULARSTRINGM, COMPOUNDCURVEM, MULTICURVEM
	CURVEPOLYGONM, MULTISURFACEM,
	or GEOMETRYCOLLECTIONM';
		RETURN 'fail';
	END IF;


	-- Verify dimension
	IF ( (new_dim >4) OR (new_dim <0) ) THEN
		RAISE EXCEPTION 'invalid dimension';
		RETURN 'fail';
	END IF;

	IF ( (new_type LIKE '%M') AND (new_dim!=3) ) THEN
		RAISE EXCEPTION 'TypeM needs 3 dimensions';
		RETURN 'fail';
	END IF;


	-- Verify SRID
	IF ( new_srid != -1 ) THEN
		SELECT SRID INTO sr FROM spatial_ref_sys WHERE SRID = new_srid;
		IF NOT FOUND THEN
			RAISE EXCEPTION 'AddGeometryColumns() - invalid SRID';
			RETURN 'fail';
		END IF;
	END IF;


	-- Verify schema
	IF ( schema_name IS NOT NULL AND schema_name != '' ) THEN
		sql := 'SELECT nspname FROM pg_namespace ' ||
			'WHERE text(nspname) = ' || quote_literal(schema_name) ||
			'LIMIT 1';
		RAISE DEBUG '%', sql;
		EXECUTE sql INTO real_schema;

		IF ( real_schema IS NULL ) THEN
			RAISE EXCEPTION 'Schema % is not a valid schemaname', quote_literal(schema_name);
			RETURN 'fail';
		END IF;
	END IF;

	IF ( real_schema IS NULL ) THEN
		RAISE DEBUG 'Detecting schema';
		sql := 'SELECT n.nspname AS schemaname ' ||
			'FROM pg_catalog.pg_class c ' ||
			  'JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace ' ||
			'WHERE c.relkind = ' || quote_literal('r') ||
			' AND n.nspname NOT IN (' || quote_literal('pg_catalog') || ', ' || quote_literal('pg_toast') || ')' ||
			' AND pg_catalog.pg_table_is_visible(c.oid)' ||
			' AND c.relname = ' || quote_literal(table_name);
		RAISE DEBUG '%', sql;
		EXECUTE sql INTO real_schema;

		IF ( real_schema IS NULL ) THEN
			RAISE EXCEPTION 'Table % does not occur in the search_path', quote_literal(table_name);
			RETURN 'fail';
		END IF;
	END IF;


	-- Add geometry column to table
	sql := 'ALTER TABLE ' ||
		quote_ident(real_schema) || '.' || quote_ident(table_name)
		|| ' ADD COLUMN ' || quote_ident(column_name) ||
		' geometry ';
	RAISE DEBUG '%', sql;
	EXECUTE sql;


	-- Delete stale record in geometry_columns (if any)
	sql := 'DELETE FROM geometry_columns WHERE
		f_table_catalog = ' || quote_literal('') ||
		' AND f_table_schema = ' ||
		quote_literal(real_schema) ||
		' AND f_table_name = ' || quote_literal(table_name) ||
		' AND f_geometry_column = ' || quote_literal(column_name);
	RAISE DEBUG '%', sql;
	EXECUTE sql;


	-- Add record in geometry_columns
	sql := 'INSERT INTO geometry_columns (f_table_catalog,f_table_schema,f_table_name,' ||
										  'f_geometry_column,coord_dimension,srid,type)' ||
		' VALUES (' ||
		quote_literal('') || ',' ||
		quote_literal(real_schema) || ',' ||
		quote_literal(table_name) || ',' ||
		quote_literal(column_name) || ',' ||
		new_dim::text || ',' ||
		new_srid::text || ',' ||
		quote_literal(new_type) || ')';
	RAISE DEBUG '%', sql;
	EXECUTE sql;


	-- Add table CHECKs
	sql := 'ALTER TABLE ' ||
		quote_ident(real_schema) || '.' || quote_ident(table_name)
		|| ' ADD CONSTRAINT '
		|| quote_ident('enforce_srid_' || column_name)
		|| ' CHECK (ST_SRID(' || quote_ident(column_name) ||
		') = ' || new_srid::text || ')' ;
	RAISE DEBUG '%', sql;
	EXECUTE sql;

	sql := 'ALTER TABLE ' ||
		quote_ident(real_schema) || '.' || quote_ident(table_name)
		|| ' ADD CONSTRAINT '
		|| quote_ident('enforce_dims_' || column_name)
		|| ' CHECK (ST_NDims(' || quote_ident(column_name) ||
		') = ' || new_dim::text || ')' ;
	RAISE DEBUG '%', sql;
	EXECUTE sql;

	IF ( NOT (new_type = 'GEOMETRY')) THEN
		sql := 'ALTER TABLE ' ||
			quote_ident(real_schema) || '.' || quote_ident(table_name) || ' ADD CONSTRAINT ' ||
			quote_ident('enforce_geotype_' || column_name) ||
			' CHECK (GeometryType(' ||
			quote_ident(column_name) || ')=' ||
			quote_literal(new_type) || ' OR (' ||
			quote_ident(column_name) || ') is null)';
		RAISE DEBUG '%', sql;
		EXECUTE sql;
	END IF;

	RETURN
		real_schema || '.' ||
		table_name || '.' || column_name ||
		' SRID:' || new_srid::text ||
		' TYPE:' || new_type ||
		' DIMS:' || new_dim::text || ' ';
END;
$_$;


--
-- Name: addpoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addpoint(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addpoint';


--
-- Name: addpoint(geometry, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION addpoint(geometry, geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addpoint';


--
-- Name: affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $2, $3, 0,  $4, $5, 0,  0, 0, 1,  $6, $7, 0)$_$;


--
-- Name: affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_affine';


--
-- Name: area(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION area(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_area_polygon';


--
-- Name: area2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION area2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_area_polygon';


--
-- Name: asbinary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asbinary(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asBinary';


--
-- Name: asbinary(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asbinary(geometry, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asBinary';


--
-- Name: asewkb(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asewkb(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'WKBFromLWGEOM';


--
-- Name: asewkb(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asewkb(geometry, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'WKBFromLWGEOM';


--
-- Name: asewkt(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asewkt(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asEWKT';


--
-- Name: asgml(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asgml(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, 15, 0)$_$;


--
-- Name: asgml(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION asgml(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, 0)$_$;


--
-- Name: ashexewkb(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ashexewkb(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asHEXEWKB';


--
-- Name: ashexewkb(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ashexewkb(geometry, text) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asHEXEWKB';


--
-- Name: askml(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION askml(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, transform($1,4326), 15)$_$;


--
-- Name: askml(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION askml(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, transform($1,4326), $2)$_$;


--
-- Name: askml(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION askml(integer, geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, transform($2,4326), $3)$_$;


--
-- Name: assvg(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION assvg(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- Name: assvg(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION assvg(geometry, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- Name: assvg(geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION assvg(geometry, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- Name: astext(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION astext(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asText';


--
-- Name: azimuth(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION azimuth(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_azimuth';


--
-- Name: bdmpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bdmpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	geomtext alias for $1;
	srid alias for $2;
	mline geometry;
	geom geometry;
BEGIN
	mline := MultiLineStringFromText(geomtext, srid);

	IF mline IS NULL
	THEN
		RAISE EXCEPTION 'Input is not a MultiLinestring';
	END IF;

	geom := multi(BuildArea(mline));

	RETURN geom;
END;
$_$;


--
-- Name: bdpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bdpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	geomtext alias for $1;
	srid alias for $2;
	mline geometry;
	geom geometry;
BEGIN
	mline := MultiLineStringFromText(geomtext, srid);

	IF mline IS NULL
	THEN
		RAISE EXCEPTION 'Input is not a MultiLinestring';
	END IF;

	geom := BuildArea(mline);

	IF GeometryType(geom) != 'POLYGON'
	THEN
		RAISE EXCEPTION 'Input returns more then a single polygon, try using BdMPolyFromText instead';
	END IF;

	RETURN geom;
END;
$_$;


--
-- Name: boundary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION boundary(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'boundary';


--
-- Name: box(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box(geometry) RETURNS box
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX';


--
-- Name: box(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box(box3d) RETURNS box
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX';


--
-- Name: box2d(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d(box3d_extent) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX2DFLOAT4';


--
-- Name: box2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d(geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX2DFLOAT4';


--
-- Name: box2d(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box2d(box3d) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX2DFLOAT4';


--
-- Name: box3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d(geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX3D';


--
-- Name: box3d(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d(box2d) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_to_BOX3D';


--
-- Name: box3d_extent(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3d_extent(box3d_extent) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_extent_to_BOX3D';


--
-- Name: box3dtobox(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION box3dtobox(box3d) RETURNS box
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT box($1)$_$;


--
-- Name: buffer(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION buffer(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'buffer';


--
-- Name: buffer(geometry, double precision, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION buffer(geometry, double precision, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_Buffer($1, $2, $3)$_$;


--
-- Name: buildarea(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION buildarea(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_buildarea';


--
-- Name: bytea(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION bytea(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_bytea';


--
-- Name: centroid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION centroid(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'centroid';


--
-- Name: checkauth(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION checkauth(text, text) RETURNS integer
    LANGUAGE sql
    AS $_$ SELECT CheckAuth('', $1, $2) $_$;


--
-- Name: checkauth(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION checkauth(text, text, text) RETURNS integer
    LANGUAGE plpgsql
    AS $_$ 
DECLARE
	schema text;
BEGIN
	IF NOT LongTransactionsEnabled() THEN
		RAISE EXCEPTION 'Long transaction support disabled, use EnableLongTransaction() to enable.';
	END IF;

	if ( $1 != '' ) THEN
		schema = $1;
	ELSE
		SELECT current_schema() into schema;
	END IF;

	-- TODO: check for an already existing trigger ?

	EXECUTE 'CREATE TRIGGER check_auth BEFORE UPDATE OR DELETE ON ' 
		|| quote_ident(schema) || '.' || quote_ident($2)
		||' FOR EACH ROW EXECUTE PROCEDURE CheckAuthTrigger('
		|| quote_literal($3) || ')';

	RETURN 0;
END;
$_$;


--
-- Name: checkauthtrigger(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION checkauthtrigger() RETURNS trigger
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'check_authorization';


--
-- Name: collect(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION collect(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'LWGEOM_collect';


--
-- Name: combine_bbox(box2d, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION combine_bbox(box2d, geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_combine';


--
-- Name: combine_bbox(box3d_extent, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION combine_bbox(box3d_extent, geometry) RETURNS box3d_extent
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX3D_combine';


--
-- Name: combine_bbox(box3d, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION combine_bbox(box3d, geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX3D_combine';


--
-- Name: compression(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION compression(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getCompression';


--
-- Name: contains(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION contains(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'contains';


--
-- Name: convexhull(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION convexhull(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'convexhull';


--
-- Name: crosses(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION crosses(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'crosses';


--
-- Name: datatype(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION datatype(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getDatatype';


--
-- Name: difference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION difference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'difference';


--
-- Name: dimension(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dimension(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dimension';


--
-- Name: disablelongtransactions(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION disablelongtransactions() RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE
	rec RECORD;

BEGIN

	--
	-- Drop all triggers applied by CheckAuth()
	--
	FOR rec IN
		SELECT c.relname, t.tgname, t.tgargs FROM pg_trigger t, pg_class c, pg_proc p
		WHERE p.proname = 'checkauthtrigger' and t.tgfoid = p.oid and t.tgrelid = c.oid
	LOOP
		EXECUTE 'DROP TRIGGER ' || quote_ident(rec.tgname) ||
			' ON ' || quote_ident(rec.relname);
	END LOOP;

	--
	-- Drop the authorization_table table
	--
	FOR rec IN SELECT * FROM pg_class WHERE relname = 'authorization_table' LOOP
		DROP TABLE authorization_table;
	END LOOP;

	--
	-- Drop the authorized_tables view
	--
	FOR rec IN SELECT * FROM pg_class WHERE relname = 'authorized_tables' LOOP
		DROP VIEW authorized_tables;
	END LOOP;

	RETURN 'Long transactions support disabled';
END;
$$;


--
-- Name: disjoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION disjoint(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'disjoint';


--
-- Name: distance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION distance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_mindistance2d';


--
-- Name: distance_sphere(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION distance_sphere(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_distance_sphere';


--
-- Name: distance_spheroid(geometry, geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION distance_spheroid(geometry, geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_distance_ellipsoid';


--
-- Name: dropbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropbbox(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dropBBOX';


--
-- Name: dropgeometrycolumn(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrycolumn(character varying, character varying) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret text;
BEGIN
	SELECT DropGeometryColumn('','',$1,$2) into ret;
	RETURN ret;
END;
$_$;


--
-- Name: dropgeometrycolumn(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrycolumn(character varying, character varying, character varying) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret text;
BEGIN
	SELECT DropGeometryColumn('',$1,$2,$3) into ret;
	RETURN ret;
END;
$_$;


--
-- Name: dropgeometrycolumn(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrycolumn(character varying, character varying, character varying, character varying) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	catalog_name alias for $1;
	schema_name alias for $2;
	table_name alias for $3;
	column_name alias for $4;
	myrec RECORD;
	okay boolean;
	real_schema name;

BEGIN


	-- Find, check or fix schema_name
	IF ( schema_name != '' ) THEN
		okay = 'f';

		FOR myrec IN SELECT nspname FROM pg_namespace WHERE text(nspname) = schema_name LOOP
			okay := 't';
		END LOOP;

		IF ( okay <> 't' ) THEN
			RAISE NOTICE 'Invalid schema name - using current_schema()';
			SELECT current_schema() into real_schema;
		ELSE
			real_schema = schema_name;
		END IF;
	ELSE
		SELECT current_schema() into real_schema;
	END IF;

	-- Find out if the column is in the geometry_columns table
	okay = 'f';
	FOR myrec IN SELECT * from geometry_columns where f_table_schema = text(real_schema) and f_table_name = table_name and f_geometry_column = column_name LOOP
		okay := 't';
	END LOOP;
	IF (okay <> 't') THEN
		RAISE EXCEPTION 'column not found in geometry_columns table';
		RETURN 'f';
	END IF;

	-- Remove ref from geometry_columns table
	EXECUTE 'delete from geometry_columns where f_table_schema = ' ||
		quote_literal(real_schema) || ' and f_table_name = ' ||
		quote_literal(table_name)  || ' and f_geometry_column = ' ||
		quote_literal(column_name);

	-- Remove table column
	EXECUTE 'ALTER TABLE ' || quote_ident(real_schema) || '.' ||
		quote_ident(table_name) || ' DROP COLUMN ' ||
		quote_ident(column_name);

	RETURN real_schema || '.' || table_name || '.' || column_name ||' effectively removed.';

END;
$_$;


--
-- Name: dropgeometrytable(character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrytable(character varying) RETURNS text
    LANGUAGE sql STRICT
    AS $_$ SELECT DropGeometryTable('','',$1) $_$;


--
-- Name: dropgeometrytable(character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrytable(character varying, character varying) RETURNS text
    LANGUAGE sql STRICT
    AS $_$ SELECT DropGeometryTable('',$1,$2) $_$;


--
-- Name: dropgeometrytable(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dropgeometrytable(character varying, character varying, character varying) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	catalog_name alias for $1;
	schema_name alias for $2;
	table_name alias for $3;
	real_schema name;

BEGIN

	IF ( schema_name = '' ) THEN
		SELECT current_schema() into real_schema;
	ELSE
		real_schema = schema_name;
	END IF;

	-- Remove refs from geometry_columns table
	EXECUTE 'DELETE FROM geometry_columns WHERE ' ||
		'f_table_schema = ' || quote_literal(real_schema) ||
		' AND ' ||
		' f_table_name = ' || quote_literal(table_name);

	-- Remove table
	EXECUTE 'DROP TABLE '
		|| quote_ident(real_schema) || '.' ||
		quote_ident(table_name);

	RETURN
		real_schema || '.' ||
		table_name ||' dropped.';

END;
$_$;


--
-- Name: dump(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dump(geometry) RETURNS SETOF geometry_dump
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dump';


--
-- Name: dumprings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION dumprings(geometry) RETURNS SETOF geometry_dump
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dump_rings';


--
-- Name: enablelongtransactions(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION enablelongtransactions() RETURNS text
    LANGUAGE plpgsql
    AS $$ 
DECLARE
	"query" text;
	exists bool;
	rec RECORD;

BEGIN

	exists = 'f';
	FOR rec IN SELECT * FROM pg_class WHERE relname = 'authorization_table'
	LOOP
		exists = 't';
	END LOOP;

	IF NOT exists
	THEN
		"query" = 'CREATE TABLE authorization_table (
			toid oid, -- table oid
			rid text, -- row id
			expires timestamp,
			authid text
		)';
		EXECUTE "query";
	END IF;

	exists = 'f';
	FOR rec IN SELECT * FROM pg_class WHERE relname = 'authorized_tables'
	LOOP
		exists = 't';
	END LOOP;

	IF NOT exists THEN
		"query" = 'CREATE VIEW authorized_tables AS ' ||
			'SELECT ' ||
			'n.nspname as schema, ' ||
			'c.relname as table, trim(' ||
			quote_literal(chr(92) || '000') ||
			' from t.tgargs) as id_column ' ||
			'FROM pg_trigger t, pg_class c, pg_proc p ' ||
			', pg_namespace n ' ||
			'WHERE p.proname = ' || quote_literal('checkauthtrigger') ||
			' AND c.relnamespace = n.oid' ||
			' AND t.tgfoid = p.oid and t.tgrelid = c.oid';
		EXECUTE "query";
	END IF;

	RETURN 'Long transactions support enabled';
END;
$$;


--
-- Name: endpoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION endpoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_endpoint_linestring';


--
-- Name: envelope(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION envelope(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_envelope';


--
-- Name: equals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION equals(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geomequals';


--
-- Name: estimated_extent(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION estimated_extent(text, text) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT SECURITY DEFINER
    AS '$libdir/postgis-1.5', 'LWGEOM_estimated_extent';


--
-- Name: estimated_extent(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION estimated_extent(text, text, text) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT SECURITY DEFINER
    AS '$libdir/postgis-1.5', 'LWGEOM_estimated_extent';


--
-- Name: expand(box3d, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION expand(box3d, double precision) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_expand';


--
-- Name: expand(box2d, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION expand(box2d, double precision) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_expand';


--
-- Name: expand(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION expand(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_expand';


--
-- Name: exteriorring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION exteriorring(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_exteriorring_polygon';


--
-- Name: factor(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION factor(chip) RETURNS real
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getFactor';


--
-- Name: find_extent(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION find_extent(text, text) RETURNS box2d
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	tablename alias for $1;
	columnname alias for $2;
	myrec RECORD;

BEGIN
	FOR myrec IN EXECUTE 'SELECT extent("' || columnname || '") FROM "' || tablename || '"' LOOP
		return myrec.extent;
	END LOOP;
END;
$_$;


--
-- Name: find_extent(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION find_extent(text, text, text) RETURNS box2d
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	schemaname alias for $1;
	tablename alias for $2;
	columnname alias for $3;
	myrec RECORD;

BEGIN
	FOR myrec IN EXECUTE 'SELECT extent("' || columnname || '") FROM "' || schemaname || '"."' || tablename || '"' LOOP
		return myrec.extent;
	END LOOP;
END;
$_$;


--
-- Name: find_srid(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION find_srid(character varying, character varying, character varying) RETURNS integer
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	schem text;
	tabl text;
	sr int4;
BEGIN
	IF $1 IS NULL THEN
	  RAISE EXCEPTION 'find_srid() - schema is NULL!';
	END IF;
	IF $2 IS NULL THEN
	  RAISE EXCEPTION 'find_srid() - table name is NULL!';
	END IF;
	IF $3 IS NULL THEN
	  RAISE EXCEPTION 'find_srid() - column name is NULL!';
	END IF;
	schem = $1;
	tabl = $2;
-- if the table contains a . and the schema is empty
-- split the table into a schema and a table
-- otherwise drop through to default behavior
	IF ( schem = '' and tabl LIKE '%.%' ) THEN
	 schem = substr(tabl,1,strpos(tabl,'.')-1);
	 tabl = substr(tabl,length(schem)+2);
	ELSE
	 schem = schem || '%';
	END IF;

	select SRID into sr from geometry_columns where f_table_schema like schem and f_table_name = tabl and f_geometry_column = $3;
	IF NOT FOUND THEN
	   RAISE EXCEPTION 'find_srid() - couldnt find the corresponding SRID - is the geometry registered in the GEOMETRY_COLUMNS table?  Is there an uppercase/lowercase missmatch?';
	END IF;
	return sr;
END;
$_$;


--
-- Name: fix_geometry_columns(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION fix_geometry_columns() RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	mislinked record;
	result text;
	linked integer;
	deleted integer;
	foundschema integer;
BEGIN

	-- Since 7.3 schema support has been added.
	-- Previous postgis versions used to put the database name in
	-- the schema column. This needs to be fixed, so we try to
	-- set the correct schema for each geometry_colums record
	-- looking at table, column, type and srid.
	UPDATE geometry_columns SET f_table_schema = n.nspname
		FROM pg_namespace n, pg_class c, pg_attribute a,
			pg_constraint sridcheck, pg_constraint typecheck
			WHERE ( f_table_schema is NULL
		OR f_table_schema = ''
			OR f_table_schema NOT IN (
					SELECT nspname::varchar
					FROM pg_namespace nn, pg_class cc, pg_attribute aa
					WHERE cc.relnamespace = nn.oid
					AND cc.relname = f_table_name::name
					AND aa.attrelid = cc.oid
					AND aa.attname = f_geometry_column::name))
			AND f_table_name::name = c.relname
			AND c.oid = a.attrelid
			AND c.relnamespace = n.oid
			AND f_geometry_column::name = a.attname

			AND sridcheck.conrelid = c.oid
		AND sridcheck.consrc LIKE '(srid(% = %)'
			AND sridcheck.consrc ~ textcat(' = ', srid::text)

			AND typecheck.conrelid = c.oid
		AND typecheck.consrc LIKE
		'((geometrytype(%) = ''%''::text) OR (% IS NULL))'
			AND typecheck.consrc ~ textcat(' = ''', type::text)

			AND NOT EXISTS (
					SELECT oid FROM geometry_columns gc
					WHERE c.relname::varchar = gc.f_table_name
					AND n.nspname::varchar = gc.f_table_schema
					AND a.attname::varchar = gc.f_geometry_column
			);

	GET DIAGNOSTICS foundschema = ROW_COUNT;

	-- no linkage to system table needed
	return 'fixed:'||foundschema::text;

END;
$$;


--
-- Name: force_2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_2d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_2d';


--
-- Name: force_3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_3d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dz';


--
-- Name: force_3dm(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_3dm(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dm';


--
-- Name: force_3dz(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_3dz(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dz';


--
-- Name: force_4d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_4d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_4d';


--
-- Name: force_collection(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION force_collection(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_collection';


--
-- Name: forcerhr(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION forcerhr(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_forceRHR_poly';


--
-- Name: geography(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography(geometry) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_from_geometry';


--
-- Name: geography(geography, integer, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography(geography, integer, boolean) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_enforce_typmod';


--
-- Name: geography_cmp(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_cmp(geography, geography) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_cmp';


--
-- Name: geography_eq(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_eq(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_eq';


--
-- Name: geography_ge(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_ge(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_ge';


--
-- Name: geography_gist_compress(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_compress(internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_compress';


--
-- Name: geography_gist_consistent(internal, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_consistent(internal, geometry, integer) RETURNS boolean
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_consistent';


--
-- Name: geography_gist_decompress(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_decompress(internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_decompress';


--
-- Name: geography_gist_join_selectivity(internal, oid, internal, smallint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_join_selectivity(internal, oid, internal, smallint) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_join_selectivity';


--
-- Name: geography_gist_penalty(internal, internal, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_penalty(internal, internal, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_penalty';


--
-- Name: geography_gist_picksplit(internal, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_picksplit(internal, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_picksplit';


--
-- Name: geography_gist_same(box2d, box2d, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_same(box2d, box2d, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_same';


--
-- Name: geography_gist_selectivity(internal, oid, internal, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_selectivity(internal, oid, internal, integer) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_selectivity';


--
-- Name: geography_gist_union(bytea, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gist_union(bytea, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'geography_gist_union';


--
-- Name: geography_gt(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_gt(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_gt';


--
-- Name: geography_le(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_le(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_le';


--
-- Name: geography_lt(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_lt(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_lt';


--
-- Name: geography_overlaps(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_overlaps(geography, geography) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_overlaps';


--
-- Name: geography_typmod_dims(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_dims(integer) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_dims';


--
-- Name: geography_typmod_srid(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_srid(integer) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_srid';


--
-- Name: geography_typmod_type(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geography_typmod_type(integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_typmod_type';


--
-- Name: geomcollfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomcollfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromText($1)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: geomcollfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomcollfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromText($1, $2)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: geomcollfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomcollfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromWKB($1)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: geomcollfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomcollfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromWKB($1, $2)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: geometry(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(box3d_extent) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_LWGEOM';


--
-- Name: geometry(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(box2d) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_to_LWGEOM';


--
-- Name: geometry(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(box3d) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_LWGEOM';


--
-- Name: geometry(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'parse_WKT_lwgeom';


--
-- Name: geometry(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(chip) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_to_LWGEOM';


--
-- Name: geometry(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_bytea';


--
-- Name: geometry(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry(geography) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geometry_from_geography';


--
-- Name: geometry_above(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_above(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_above';


--
-- Name: geometry_below(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_below(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_below';


--
-- Name: geometry_cmp(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_cmp(geometry, geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_cmp';


--
-- Name: geometry_contain(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_contain(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_contain';


--
-- Name: geometry_contained(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_contained(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_contained';


--
-- Name: geometry_eq(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_eq(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_eq';


--
-- Name: geometry_ge(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_ge(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_ge';


--
-- Name: geometry_gist_joinsel(internal, oid, internal, smallint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_gist_joinsel(internal, oid, internal, smallint) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_joinsel';


--
-- Name: geometry_gist_sel(internal, oid, internal, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_gist_sel(internal, oid, internal, integer) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_sel';


--
-- Name: geometry_gt(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_gt(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_gt';


--
-- Name: geometry_le(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_le(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_le';


--
-- Name: geometry_left(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_left(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_left';


--
-- Name: geometry_lt(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_lt(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_lt';


--
-- Name: geometry_overabove(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overabove(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overabove';


--
-- Name: geometry_overbelow(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overbelow(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overbelow';


--
-- Name: geometry_overlap(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overlap(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overlap';


--
-- Name: geometry_overleft(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overleft(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overleft';


--
-- Name: geometry_overright(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_overright(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overright';


--
-- Name: geometry_right(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_right(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_right';


--
-- Name: geometry_same(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_same(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_samebox';


--
-- Name: geometry_samebox(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometry_samebox(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_samebox';


--
-- Name: geometryfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometryfromtext(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: geometryfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometryfromtext(text, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: geometryn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometryn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_geometryn_collection';


--
-- Name: geometrytype(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geometrytype(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_getTYPE';


--
-- Name: geomfromewkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromewkb(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOMFromWKB';


--
-- Name: geomfromewkt(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromewkt(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'parse_WKT_lwgeom';


--
-- Name: geomfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT geometryfromtext($1)$_$;


--
-- Name: geomfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT geometryfromtext($1, $2)$_$;


--
-- Name: geomfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromwkb(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_WKB';


--
-- Name: geomfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT setSRID(GeomFromWKB($1), $2)$_$;


--
-- Name: geomunion(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION geomunion(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geomunion';


--
-- Name: get_proj4_from_srid(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION get_proj4_from_srid(integer) RETURNS text
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
BEGIN
	RETURN proj4text::text FROM spatial_ref_sys WHERE srid= $1;
END;
$_$;


--
-- Name: getbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getbbox(geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX2DFLOAT4';


--
-- Name: getsrid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION getsrid(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_getSRID';


--
-- Name: gettransactionid(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION gettransactionid() RETURNS xid
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'getTransactionID';


--
-- Name: hasbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION hasbbox(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_hasBBOX';


--
-- Name: height(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION height(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getHeight';


--
-- Name: interiorringn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION interiorringn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_interiorringn_polygon';


--
-- Name: intersection(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION intersection(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'intersection';


--
-- Name: intersects(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION intersects(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'intersects';


--
-- Name: isclosed(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isclosed(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_isclosed_linestring';


--
-- Name: isempty(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isempty(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_isempty';


--
-- Name: isring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isring(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'isring';


--
-- Name: issimple(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION issimple(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'issimple';


--
-- Name: isvalid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION isvalid(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'isvalid';


--
-- Name: length(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length_linestring';


--
-- Name: length2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_linestring';


--
-- Name: length2d_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length2d_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_ellipsoid';


--
-- Name: length3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length3d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length_linestring';


--
-- Name: length3d_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length3d_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length_ellipsoid_linestring';


--
-- Name: length_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION length_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length_ellipsoid_linestring';


--
-- Name: line_interpolate_point(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION line_interpolate_point(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_interpolate_point';


--
-- Name: line_locate_point(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION line_locate_point(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_locate_point';


--
-- Name: line_substring(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION line_substring(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_substring';


--
-- Name: linefrommultipoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefrommultipoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_from_mpoint';


--
-- Name: linefromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'LINESTRING'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: linefromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'LINESTRING'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: linefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'LINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: linefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'LINESTRING'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: linemerge(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linemerge(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'linemerge';


--
-- Name: linestringfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linestringfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT LineFromText($1)$_$;


--
-- Name: linestringfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linestringfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT LineFromText($1, $2)$_$;


--
-- Name: linestringfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linestringfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'LINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: linestringfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION linestringfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'LINESTRING'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: locate_along_measure(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION locate_along_measure(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT locate_between_measures($1, $2, $2) $_$;


--
-- Name: locate_between_measures(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION locate_between_measures(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_locate_between_m';


--
-- Name: lockrow(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lockrow(text, text, text) RETURNS integer
    LANGUAGE sql STRICT
    AS $_$ SELECT LockRow(current_schema(), $1, $2, $3, now()::timestamp+'1:00'); $_$;


--
-- Name: lockrow(text, text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lockrow(text, text, text, text) RETURNS integer
    LANGUAGE sql STRICT
    AS $_$ SELECT LockRow($1, $2, $3, $4, now()::timestamp+'1:00'); $_$;


--
-- Name: lockrow(text, text, text, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lockrow(text, text, text, timestamp without time zone) RETURNS integer
    LANGUAGE sql STRICT
    AS $_$ SELECT LockRow(current_schema(), $1, $2, $3, $4); $_$;


--
-- Name: lockrow(text, text, text, text, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lockrow(text, text, text, text, timestamp without time zone) RETURNS integer
    LANGUAGE plpgsql STRICT
    AS $_$ 
DECLARE
	myschema alias for $1;
	mytable alias for $2;
	myrid   alias for $3;
	authid alias for $4;
	expires alias for $5;
	ret int;
	mytoid oid;
	myrec RECORD;
	
BEGIN

	IF NOT LongTransactionsEnabled() THEN
		RAISE EXCEPTION 'Long transaction support disabled, use EnableLongTransaction() to enable.';
	END IF;

	EXECUTE 'DELETE FROM authorization_table WHERE expires < now()'; 

	SELECT c.oid INTO mytoid FROM pg_class c, pg_namespace n
		WHERE c.relname = mytable
		AND c.relnamespace = n.oid
		AND n.nspname = myschema;

	-- RAISE NOTICE 'toid: %', mytoid;

	FOR myrec IN SELECT * FROM authorization_table WHERE 
		toid = mytoid AND rid = myrid
	LOOP
		IF myrec.authid != authid THEN
			RETURN 0;
		ELSE
			RETURN 1;
		END IF;
	END LOOP;

	EXECUTE 'INSERT INTO authorization_table VALUES ('||
		quote_literal(mytoid::text)||','||quote_literal(myrid)||
		','||quote_literal(expires::text)||
		','||quote_literal(authid) ||')';

	GET DIAGNOSTICS ret = ROW_COUNT;

	RETURN ret;
END;
$_$;


--
-- Name: longtransactionsenabled(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION longtransactionsenabled() RETURNS boolean
    LANGUAGE plpgsql
    AS $$ 
DECLARE
	rec RECORD;
BEGIN
	FOR rec IN SELECT oid FROM pg_class WHERE relname = 'authorized_tables'
	LOOP
		return 't';
	END LOOP;
	return 'f';
END;
$$;


--
-- Name: lwgeom_gist_compress(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_compress(internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_compress';


--
-- Name: lwgeom_gist_consistent(internal, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_consistent(internal, geometry, integer) RETURNS boolean
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_consistent';


--
-- Name: lwgeom_gist_decompress(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_decompress(internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_decompress';


--
-- Name: lwgeom_gist_penalty(internal, internal, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_penalty(internal, internal, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_penalty';


--
-- Name: lwgeom_gist_picksplit(internal, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_picksplit(internal, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_picksplit';


--
-- Name: lwgeom_gist_same(box2d, box2d, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_same(box2d, box2d, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_same';


--
-- Name: lwgeom_gist_union(bytea, internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION lwgeom_gist_union(bytea, internal) RETURNS internal
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_union';


--
-- Name: m(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION m(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_m_point';


--
-- Name: makebox2d(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makebox2d(geometry, geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_construct';


--
-- Name: makebox3d(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makebox3d(geometry, geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_construct';


--
-- Name: makeline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makeline(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline';


--
-- Name: makeline_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makeline_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline_garray';


--
-- Name: makepoint(double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepoint(double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: makepoint(double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepoint(double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: makepoint(double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepoint(double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: makepointm(double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepointm(double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint3dm';


--
-- Name: makepolygon(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepolygon(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoly';


--
-- Name: makepolygon(geometry, geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION makepolygon(geometry, geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoly';


--
-- Name: max_distance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION max_distance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_maxdistance2d_linestring';


--
-- Name: mem_size(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mem_size(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_mem_size';


--
-- Name: mlinefromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mlinefromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'MULTILINESTRING'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: mlinefromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mlinefromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromText($1, $2)) = 'MULTILINESTRING'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: mlinefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mlinefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTILINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: mlinefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mlinefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTILINESTRING'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: mpointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'MULTIPOINT'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: mpointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1,$2)) = 'MULTIPOINT'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: mpointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTIPOINT'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: mpointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1,$2)) = 'MULTIPOINT'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: mpolyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpolyfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'MULTIPOLYGON'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: mpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'MULTIPOLYGON'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: mpolyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpolyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTIPOLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: mpolyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION mpolyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTIPOLYGON'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: multi(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multi(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_multi';


--
-- Name: multilinefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multilinefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTILINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: multilinefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multilinefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTILINESTRING'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: multilinestringfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multilinestringfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_MLineFromText($1)$_$;


--
-- Name: multilinestringfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multilinestringfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MLineFromText($1, $2)$_$;


--
-- Name: multipointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPointFromText($1)$_$;


--
-- Name: multipointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPointFromText($1, $2)$_$;


--
-- Name: multipointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTIPOINT'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: multipointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1,$2)) = 'MULTIPOINT'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: multipolyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipolyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'MULTIPOLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: multipolyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipolyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTIPOLYGON'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: multipolygonfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipolygonfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPolyFromText($1)$_$;


--
-- Name: multipolygonfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION multipolygonfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPolyFromText($1, $2)$_$;


--
-- Name: ndims(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ndims(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_ndims';


--
-- Name: noop(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION noop(geometry) RETURNS geometry
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_noop';


--
-- Name: npoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION npoints(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_npoints';


--
-- Name: nrings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION nrings(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_nrings';


--
-- Name: numgeometries(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numgeometries(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numgeometries_collection';


--
-- Name: numinteriorring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numinteriorring(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numinteriorrings_polygon';


--
-- Name: numinteriorrings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numinteriorrings(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numinteriorrings_polygon';


--
-- Name: numpoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION numpoints(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numpoints_linestring';


--
-- Name: overlaps(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION "overlaps"(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'overlaps';


--
-- Name: perimeter(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION perimeter(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter_poly';


--
-- Name: perimeter2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION perimeter2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter2d_poly';


--
-- Name: perimeter3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION perimeter3d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter_poly';


--
-- Name: pgis_geometry_accum_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_accum_finalfn(pgis_abs) RETURNS geometry[]
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_accum_finalfn';


--
-- Name: pgis_geometry_accum_transfn(pgis_abs, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_accum_transfn(pgis_abs, geometry) RETURNS pgis_abs
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_accum_transfn';


--
-- Name: pgis_geometry_collect_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_collect_finalfn(pgis_abs) RETURNS geometry
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_collect_finalfn';


--
-- Name: pgis_geometry_makeline_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_makeline_finalfn(pgis_abs) RETURNS geometry
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_makeline_finalfn';


--
-- Name: pgis_geometry_polygonize_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_polygonize_finalfn(pgis_abs) RETURNS geometry
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_polygonize_finalfn';


--
-- Name: pgis_geometry_union_finalfn(pgis_abs); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pgis_geometry_union_finalfn(pgis_abs) RETURNS geometry
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'pgis_geometry_union_finalfn';


--
-- Name: point_inside_circle(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION point_inside_circle(geometry, double precision, double precision, double precision) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_inside_circle_point';


--
-- Name: pointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'POINT'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: pointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'POINT'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: pointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'POINT'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: pointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'POINT'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: pointn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_pointn_linestring';


--
-- Name: pointonsurface(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION pointonsurface(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pointonsurface';


--
-- Name: polyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polyfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1)) = 'POLYGON'
	THEN GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: polyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polyfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'POLYGON'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: polyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'POLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: polyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'POLYGON'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: polygonfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT PolyFromText($1)$_$;


--
-- Name: polygonfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT PolyFromText($1, $2)$_$;


--
-- Name: polygonfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'POLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: polygonfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1,$2)) = 'POLYGON'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: polygonize_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION polygonize_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'polygonize_garray';


--
-- Name: populate_geometry_columns(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION populate_geometry_columns() RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	inserted    integer;
	oldcount    integer;
	probed      integer;
	stale       integer;
	gcs         RECORD;
	gc          RECORD;
	gsrid       integer;
	gndims      integer;
	gtype       text;
	query       text;
	gc_is_valid boolean;

BEGIN
	SELECT count(*) INTO oldcount FROM geometry_columns;
	inserted := 0;

	EXECUTE 'TRUNCATE geometry_columns';

	-- Count the number of geometry columns in all tables and views
	SELECT count(DISTINCT c.oid) INTO probed
	FROM pg_class c,
		 pg_attribute a,
		 pg_type t,
		 pg_namespace n
	WHERE (c.relkind = 'r' OR c.relkind = 'v')
	AND t.typname = 'geometry'
	AND a.attisdropped = false
	AND a.atttypid = t.oid
	AND a.attrelid = c.oid
	AND c.relnamespace = n.oid
	AND n.nspname NOT ILIKE 'pg_temp%';

	-- Iterate through all non-dropped geometry columns
	RAISE DEBUG 'Processing Tables.....';

	FOR gcs IN
	SELECT DISTINCT ON (c.oid) c.oid, n.nspname, c.relname
		FROM pg_class c,
			 pg_attribute a,
			 pg_type t,
			 pg_namespace n
		WHERE c.relkind = 'r'
		AND t.typname = 'geometry'
		AND a.attisdropped = false
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND n.nspname NOT ILIKE 'pg_temp%'
	LOOP

	inserted := inserted + populate_geometry_columns(gcs.oid);
	END LOOP;

	-- Add views to geometry columns table
	RAISE DEBUG 'Processing Views.....';
	FOR gcs IN
	SELECT DISTINCT ON (c.oid) c.oid, n.nspname, c.relname
		FROM pg_class c,
			 pg_attribute a,
			 pg_type t,
			 pg_namespace n
		WHERE c.relkind = 'v'
		AND t.typname = 'geometry'
		AND a.attisdropped = false
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
	LOOP

	inserted := inserted + populate_geometry_columns(gcs.oid);
	END LOOP;

	IF oldcount > inserted THEN
	stale = oldcount-inserted;
	ELSE
	stale = 0;
	END IF;

	RETURN 'probed:' ||probed|| ' inserted:'||inserted|| ' conflicts:'||probed-inserted|| ' deleted:'||stale;
END

$$;


--
-- Name: populate_geometry_columns(oid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION populate_geometry_columns(tbl_oid oid) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	gcs         RECORD;
	gc          RECORD;
	gsrid       integer;
	gndims      integer;
	gtype       text;
	query       text;
	gc_is_valid boolean;
	inserted    integer;

BEGIN
	inserted := 0;

	-- Iterate through all geometry columns in this table
	FOR gcs IN
	SELECT n.nspname, c.relname, a.attname
		FROM pg_class c,
			 pg_attribute a,
			 pg_type t,
			 pg_namespace n
		WHERE c.relkind = 'r'
		AND t.typname = 'geometry'
		AND a.attisdropped = false
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND n.nspname NOT ILIKE 'pg_temp%'
		AND c.oid = tbl_oid
	LOOP

	RAISE DEBUG 'Processing table %.%.%', gcs.nspname, gcs.relname, gcs.attname;

	DELETE FROM geometry_columns
	  WHERE f_table_schema = gcs.nspname
	  AND f_table_name = gcs.relname
	  AND f_geometry_column = gcs.attname;

	gc_is_valid := true;

	-- Try to find srid check from system tables (pg_constraint)
	gsrid :=
		(SELECT replace(replace(split_part(s.consrc, ' = ', 2), ')', ''), '(', '')
		 FROM pg_class c, pg_namespace n, pg_attribute a, pg_constraint s
		 WHERE n.nspname = gcs.nspname
		 AND c.relname = gcs.relname
		 AND a.attname = gcs.attname
		 AND a.attrelid = c.oid
		 AND s.connamespace = n.oid
		 AND s.conrelid = c.oid
		 AND a.attnum = ANY (s.conkey)
		 AND s.consrc LIKE '%srid(% = %');
	IF (gsrid IS NULL) THEN
		-- Try to find srid from the geometry itself
		EXECUTE 'SELECT srid(' || quote_ident(gcs.attname) || ')
				 FROM ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gsrid := gc.srid;

		-- Try to apply srid check to column
		IF (gsrid IS NOT NULL) THEN
			BEGIN
				EXECUTE 'ALTER TABLE ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
						 ADD CONSTRAINT ' || quote_ident('enforce_srid_' || gcs.attname) || '
						 CHECK (srid(' || quote_ident(gcs.attname) || ') = ' || gsrid || ')';
			EXCEPTION
				WHEN check_violation THEN
					RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not apply constraint CHECK (srid(%) = %)', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname), quote_ident(gcs.attname), gsrid;
					gc_is_valid := false;
			END;
		END IF;
	END IF;

	-- Try to find ndims check from system tables (pg_constraint)
	gndims :=
		(SELECT replace(split_part(s.consrc, ' = ', 2), ')', '')
		 FROM pg_class c, pg_namespace n, pg_attribute a, pg_constraint s
		 WHERE n.nspname = gcs.nspname
		 AND c.relname = gcs.relname
		 AND a.attname = gcs.attname
		 AND a.attrelid = c.oid
		 AND s.connamespace = n.oid
		 AND s.conrelid = c.oid
		 AND a.attnum = ANY (s.conkey)
		 AND s.consrc LIKE '%ndims(% = %');
	IF (gndims IS NULL) THEN
		-- Try to find ndims from the geometry itself
		EXECUTE 'SELECT ndims(' || quote_ident(gcs.attname) || ')
				 FROM ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gndims := gc.ndims;

		-- Try to apply ndims check to column
		IF (gndims IS NOT NULL) THEN
			BEGIN
				EXECUTE 'ALTER TABLE ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
						 ADD CONSTRAINT ' || quote_ident('enforce_dims_' || gcs.attname) || '
						 CHECK (ndims(' || quote_ident(gcs.attname) || ') = '||gndims||')';
			EXCEPTION
				WHEN check_violation THEN
					RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not apply constraint CHECK (ndims(%) = %)', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname), quote_ident(gcs.attname), gndims;
					gc_is_valid := false;
			END;
		END IF;
	END IF;

	-- Try to find geotype check from system tables (pg_constraint)
	gtype :=
		(SELECT replace(split_part(s.consrc, '''', 2), ')', '')
		 FROM pg_class c, pg_namespace n, pg_attribute a, pg_constraint s
		 WHERE n.nspname = gcs.nspname
		 AND c.relname = gcs.relname
		 AND a.attname = gcs.attname
		 AND a.attrelid = c.oid
		 AND s.connamespace = n.oid
		 AND s.conrelid = c.oid
		 AND a.attnum = ANY (s.conkey)
		 AND s.consrc LIKE '%geometrytype(% = %');
	IF (gtype IS NULL) THEN
		-- Try to find geotype from the geometry itself
		EXECUTE 'SELECT geometrytype(' || quote_ident(gcs.attname) || ')
				 FROM ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gtype := gc.geometrytype;
		--IF (gtype IS NULL) THEN
		--    gtype := 'GEOMETRY';
		--END IF;

		-- Try to apply geometrytype check to column
		IF (gtype IS NOT NULL) THEN
			BEGIN
				EXECUTE 'ALTER TABLE ONLY ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				ADD CONSTRAINT ' || quote_ident('enforce_geotype_' || gcs.attname) || '
				CHECK ((geometrytype(' || quote_ident(gcs.attname) || ') = ' || quote_literal(gtype) || ') OR (' || quote_ident(gcs.attname) || ' IS NULL))';
			EXCEPTION
				WHEN check_violation THEN
					-- No geometry check can be applied. This column contains a number of geometry types.
					RAISE WARNING 'Could not add geometry type check (%) to table column: %.%.%', gtype, quote_ident(gcs.nspname),quote_ident(gcs.relname),quote_ident(gcs.attname);
			END;
		END IF;
	END IF;

	IF (gsrid IS NULL) THEN
		RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine the srid', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
	ELSIF (gndims IS NULL) THEN
		RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine the number of dimensions', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
	ELSIF (gtype IS NULL) THEN
		RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine the geometry type', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
	ELSE
		-- Only insert into geometry_columns if table constraints could be applied.
		IF (gc_is_valid) THEN
			INSERT INTO geometry_columns (f_table_catalog,f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, type)
			VALUES ('', gcs.nspname, gcs.relname, gcs.attname, gndims, gsrid, gtype);
			inserted := inserted + 1;
		END IF;
	END IF;
	END LOOP;

	-- Add views to geometry columns table
	FOR gcs IN
	SELECT n.nspname, c.relname, a.attname
		FROM pg_class c,
			 pg_attribute a,
			 pg_type t,
			 pg_namespace n
		WHERE c.relkind = 'v'
		AND t.typname = 'geometry'
		AND a.attisdropped = false
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND n.nspname NOT ILIKE 'pg_temp%'
		AND c.oid = tbl_oid
	LOOP
		RAISE DEBUG 'Processing view %.%.%', gcs.nspname, gcs.relname, gcs.attname;

	DELETE FROM geometry_columns
	  WHERE f_table_schema = gcs.nspname
	  AND f_table_name = gcs.relname
	  AND f_geometry_column = gcs.attname;
	  
		EXECUTE 'SELECT ndims(' || quote_ident(gcs.attname) || ')
				 FROM ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gndims := gc.ndims;

		EXECUTE 'SELECT srid(' || quote_ident(gcs.attname) || ')
				 FROM ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gsrid := gc.srid;

		EXECUTE 'SELECT geometrytype(' || quote_ident(gcs.attname) || ')
				 FROM ' || quote_ident(gcs.nspname) || '.' || quote_ident(gcs.relname) || '
				 WHERE ' || quote_ident(gcs.attname) || ' IS NOT NULL LIMIT 1'
			INTO gc;
		gtype := gc.geometrytype;

		IF (gndims IS NULL) THEN
			RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine ndims', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
		ELSIF (gsrid IS NULL) THEN
			RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine srid', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
		ELSIF (gtype IS NULL) THEN
			RAISE WARNING 'Not inserting ''%'' in ''%.%'' into geometry_columns: could not determine gtype', quote_ident(gcs.attname), quote_ident(gcs.nspname), quote_ident(gcs.relname);
		ELSE
			query := 'INSERT INTO geometry_columns (f_table_catalog,f_table_schema, f_table_name, f_geometry_column, coord_dimension, srid, type) ' ||
					 'VALUES ('''', ' || quote_literal(gcs.nspname) || ',' || quote_literal(gcs.relname) || ',' || quote_literal(gcs.attname) || ',' || gndims || ',' || gsrid || ',' || quote_literal(gtype) || ')';
			EXECUTE query;
			inserted := inserted + 1;
		END IF;
	END LOOP;

	RETURN inserted;
END

$$;


--
-- Name: postgis_addbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_addbbox(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addBBOX';


--
-- Name: postgis_cache_bbox(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_cache_bbox() RETURNS trigger
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'cache_bbox';


--
-- Name: postgis_dropbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_dropbbox(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dropBBOX';


--
-- Name: postgis_full_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_full_version() RETURNS text
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
	libver text;
	projver text;
	geosver text;
	libxmlver text;
	usestats bool;
	dbproc text;
	relproc text;
	fullver text;
BEGIN
	SELECT postgis_lib_version() INTO libver;
	SELECT postgis_proj_version() INTO projver;
	SELECT postgis_geos_version() INTO geosver;
	SELECT postgis_libxml_version() INTO libxmlver;
	SELECT postgis_uses_stats() INTO usestats;
	SELECT postgis_scripts_installed() INTO dbproc;
	SELECT postgis_scripts_released() INTO relproc;

	fullver = 'POSTGIS="' || libver || '"';

	IF  geosver IS NOT NULL THEN
		fullver = fullver || ' GEOS="' || geosver || '"';
	END IF;

	IF  projver IS NOT NULL THEN
		fullver = fullver || ' PROJ="' || projver || '"';
	END IF;

	IF  libxmlver IS NOT NULL THEN
		fullver = fullver || ' LIBXML="' || libxmlver || '"';
	END IF;

	IF usestats THEN
		fullver = fullver || ' USE_STATS';
	END IF;

	-- fullver = fullver || ' DBPROC="' || dbproc || '"';
	-- fullver = fullver || ' RELPROC="' || relproc || '"';

	IF dbproc != relproc THEN
		fullver = fullver || ' (procs from ' || dbproc || ' need upgrade)';
	END IF;

	RETURN fullver;
END
$$;


--
-- Name: postgis_geos_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_geos_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_geos_version';


--
-- Name: postgis_getbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_getbbox(geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX2DFLOAT4';


--
-- Name: postgis_gist_joinsel(internal, oid, internal, smallint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_gist_joinsel(internal, oid, internal, smallint) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_joinsel';


--
-- Name: postgis_gist_sel(internal, oid, internal, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_gist_sel(internal, oid, internal, integer) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_sel';


--
-- Name: postgis_hasbbox(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_hasbbox(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_hasBBOX';


--
-- Name: postgis_lib_build_date(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_lib_build_date() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_lib_build_date';


--
-- Name: postgis_lib_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_lib_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_lib_version';


--
-- Name: postgis_libxml_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_libxml_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_libxml_version';


--
-- Name: postgis_noop(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_noop(geometry) RETURNS geometry
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_noop';


--
-- Name: postgis_proj_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_proj_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_proj_version';


--
-- Name: postgis_scripts_build_date(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_scripts_build_date() RETURNS text
    LANGUAGE sql IMMUTABLE
    AS $$SELECT '2012-10-07 12:25:36'::text AS version$$;


--
-- Name: postgis_scripts_installed(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_scripts_installed() RETURNS text
    LANGUAGE sql IMMUTABLE
    AS $$SELECT '1.5 r7360'::text AS version$$;


--
-- Name: postgis_scripts_released(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_scripts_released() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_scripts_released';


--
-- Name: postgis_transform_geometry(geometry, text, text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_transform_geometry(geometry, text, text, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'transform_geom';


--
-- Name: postgis_uses_stats(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_uses_stats() RETURNS boolean
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_uses_stats';


--
-- Name: postgis_version(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION postgis_version() RETURNS text
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'postgis_version';


--
-- Name: probe_geometry_columns(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION probe_geometry_columns() RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	inserted integer;
	oldcount integer;
	probed integer;
	stale integer;
BEGIN

	SELECT count(*) INTO oldcount FROM geometry_columns;

	SELECT count(*) INTO probed
		FROM pg_class c, pg_attribute a, pg_type t,
			pg_namespace n,
			pg_constraint sridcheck, pg_constraint typecheck

		WHERE t.typname = 'geometry'
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND sridcheck.connamespace = n.oid
		AND typecheck.connamespace = n.oid
		AND sridcheck.conrelid = c.oid
		AND sridcheck.consrc LIKE '(srid('||a.attname||') = %)'
		AND typecheck.conrelid = c.oid
		AND typecheck.consrc LIKE
		'((geometrytype('||a.attname||') = ''%''::text) OR (% IS NULL))'
		;

	INSERT INTO geometry_columns SELECT
		''::varchar as f_table_catalogue,
		n.nspname::varchar as f_table_schema,
		c.relname::varchar as f_table_name,
		a.attname::varchar as f_geometry_column,
		2 as coord_dimension,
		trim(both  ' =)' from
			replace(replace(split_part(
				sridcheck.consrc, ' = ', 2), ')', ''), '(', ''))::integer AS srid,
		trim(both ' =)''' from substr(typecheck.consrc,
			strpos(typecheck.consrc, '='),
			strpos(typecheck.consrc, '::')-
			strpos(typecheck.consrc, '=')
			))::varchar as type
		FROM pg_class c, pg_attribute a, pg_type t,
			pg_namespace n,
			pg_constraint sridcheck, pg_constraint typecheck
		WHERE t.typname = 'geometry'
		AND a.atttypid = t.oid
		AND a.attrelid = c.oid
		AND c.relnamespace = n.oid
		AND sridcheck.connamespace = n.oid
		AND typecheck.connamespace = n.oid
		AND sridcheck.conrelid = c.oid
		AND sridcheck.consrc LIKE '(st_srid('||a.attname||') = %)'
		AND typecheck.conrelid = c.oid
		AND typecheck.consrc LIKE
		'((geometrytype('||a.attname||') = ''%''::text) OR (% IS NULL))'

			AND NOT EXISTS (
					SELECT oid FROM geometry_columns gc
					WHERE c.relname::varchar = gc.f_table_name
					AND n.nspname::varchar = gc.f_table_schema
					AND a.attname::varchar = gc.f_geometry_column
			);

	GET DIAGNOSTICS inserted = ROW_COUNT;

	IF oldcount > probed THEN
		stale = oldcount-probed;
	ELSE
		stale = 0;
	END IF;

	RETURN 'probed:'||probed::text||
		' inserted:'||inserted::text||
		' conflicts:'||(probed-inserted)::text||
		' stale:'||stale::text;
END

$$;


--
-- Name: relate(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION relate(geometry, geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'relate_full';


--
-- Name: relate(geometry, geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION relate(geometry, geometry, text) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'relate_pattern';


--
-- Name: removepoint(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION removepoint(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_removepoint';


--
-- Name: rename_geometry_table_constraints(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rename_geometry_table_constraints() RETURNS text
    LANGUAGE sql IMMUTABLE
    AS $$
SELECT 'rename_geometry_table_constraint() is obsoleted'::text
$$;


--
-- Name: reverse(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION reverse(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_reverse';


--
-- Name: rotate(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rotate(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT rotateZ($1, $2)$_$;


--
-- Name: rotatex(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rotatex(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1, 1, 0, 0, 0, cos($2), -sin($2), 0, sin($2), cos($2), 0, 0, 0)$_$;


--
-- Name: rotatey(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rotatey(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  cos($2), 0, sin($2),  0, 1, 0,  -sin($2), 0, cos($2), 0,  0, 0)$_$;


--
-- Name: rotatez(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION rotatez(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  cos($2), -sin($2), 0,  sin($2), cos($2), 0,  0, 0, 1,  0, 0, 0)$_$;


--
-- Name: scale(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION scale(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT scale($1, $2, $3, 1)$_$;


--
-- Name: scale(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION scale(geometry, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $2, 0, 0,  0, $3, 0,  0, 0, $4,  0, 0, 0)$_$;


--
-- Name: se_envelopesintersect(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_envelopesintersect(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ 
	SELECT $1 && $2
	$_$;


--
-- Name: se_is3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_is3d(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_hasz';


--
-- Name: se_ismeasured(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_ismeasured(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_hasm';


--
-- Name: se_locatealong(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_locatealong(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT locate_between_measures($1, $2, $2) $_$;


--
-- Name: se_locatebetween(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_locatebetween(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_locate_between_m';


--
-- Name: se_m(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_m(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_m_point';


--
-- Name: se_z(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION se_z(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_z_point';


--
-- Name: segmentize(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION segmentize(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_segmentize2d';


--
-- Name: setfactor(chip, real); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setfactor(chip, real) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_setFactor';


--
-- Name: setpoint(geometry, integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setpoint(geometry, integer, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_setpoint_linestring';


--
-- Name: setsrid(chip, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setsrid(chip, integer) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_setSRID';


--
-- Name: setsrid(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION setsrid(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_setSRID';


--
-- Name: shift_longitude(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION shift_longitude(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_longitude_shift';


--
-- Name: simplify(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION simplify(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_simplify2d';


--
-- Name: snaptogrid(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION snaptogrid(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT SnapToGrid($1, 0, 0, $2, $2)$_$;


--
-- Name: snaptogrid(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION snaptogrid(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT SnapToGrid($1, 0, 0, $2, $3)$_$;


--
-- Name: snaptogrid(geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION snaptogrid(geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_snaptogrid';


--
-- Name: snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_snaptogrid_pointoff';


--
-- Name: srid(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION srid(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getSRID';


--
-- Name: srid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION srid(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_getSRID';


--
-- Name: st_addmeasure(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_addmeasure(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_AddMeasure';


--
-- Name: st_addpoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_addpoint(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addpoint';


--
-- Name: st_addpoint(geometry, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_addpoint(geometry, geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_addpoint';


--
-- Name: st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $2, $3, 0,  $4, $5, 0,  0, 0, 1,  $6, $7, 0)$_$;


--
-- Name: st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_affine(geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_affine';


--
-- Name: st_area(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area(text) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Area($1::geometry);  $_$;


--
-- Name: st_area(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_area_polygon';


--
-- Name: st_area(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area(geography) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_Area($1, true)$_$;


--
-- Name: st_area(geography, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area(geography, boolean) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_area';


--
-- Name: st_area2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_area2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_area_polygon';


--
-- Name: st_asbinary(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asbinary(text) RETURNS bytea
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsBinary($1::geometry);  $_$;


--
-- Name: st_asbinary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asbinary(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asBinary';


--
-- Name: st_asbinary(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asbinary(geography) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_binary';


--
-- Name: st_asbinary(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asbinary(geometry, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asBinary';


--
-- Name: st_asewkb(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asewkb(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'WKBFromLWGEOM';


--
-- Name: st_asewkb(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asewkb(geometry, text) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'WKBFromLWGEOM';


--
-- Name: st_asewkt(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asewkt(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asEWKT';


--
-- Name: st_asgeojson(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsGeoJson($1::geometry);  $_$;


--
-- Name: st_asgeojson(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, 15, 0)$_$;


--
-- Name: st_asgeojson(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, 15, 0)$_$;


--
-- Name: st_asgeojson(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, $2, 0)$_$;


--
-- Name: st_asgeojson(integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, 15, 0)$_$;


--
-- Name: st_asgeojson(geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, $2, 0)$_$;


--
-- Name: st_asgeojson(integer, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, 15, 0)$_$;


--
-- Name: st_asgeojson(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, $3, 0)$_$;


--
-- Name: st_asgeojson(geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geometry, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, $2, $3)$_$;


--
-- Name: st_asgeojson(integer, geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, $3, 0)$_$;


--
-- Name: st_asgeojson(geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(geography, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson(1, $1, $2, $3)$_$;


--
-- Name: st_asgeojson(integer, geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geometry, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, $3, $4)$_$;


--
-- Name: st_asgeojson(integer, geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgeojson(integer, geography, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGeoJson($1, $2, $3, $4)$_$;


--
-- Name: st_asgml(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsGML($1::geometry);  $_$;


--
-- Name: st_asgml(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, 15, 0)$_$;


--
-- Name: st_asgml(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, 15, 0)$_$;


--
-- Name: st_asgml(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, 0)$_$;


--
-- Name: st_asgml(integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, 15, 0)$_$;


--
-- Name: st_asgml(geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, 0)$_$;


--
-- Name: st_asgml(integer, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, 15, 0)$_$;


--
-- Name: st_asgml(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, $3, 0)$_$;


--
-- Name: st_asgml(geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geometry, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, $3)$_$;


--
-- Name: st_asgml(integer, geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, $3, 0)$_$;


--
-- Name: st_asgml(geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(geography, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML(2, $1, $2, $3)$_$;


--
-- Name: st_asgml(integer, geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geometry, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, $3, $4)$_$;


--
-- Name: st_asgml(integer, geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_asgml(integer, geography, integer, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsGML($1, $2, $3, $4)$_$;


--
-- Name: st_ashexewkb(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ashexewkb(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asHEXEWKB';


--
-- Name: st_ashexewkb(geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ashexewkb(geometry, text) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asHEXEWKB';


--
-- Name: st_askml(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsKML($1::geometry);  $_$;


--
-- Name: st_askml(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, ST_Transform($1,4326), 15)$_$;


--
-- Name: st_askml(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, $1, 15)$_$;


--
-- Name: st_askml(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, ST_Transform($1,4326), $2)$_$;


--
-- Name: st_askml(integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(integer, geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, ST_Transform($2,4326), 15)$_$;


--
-- Name: st_askml(geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML(2, $1, $2)$_$;


--
-- Name: st_askml(integer, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(integer, geography) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, $2, 15)$_$;


--
-- Name: st_askml(integer, geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(integer, geometry, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, ST_Transform($2,4326), $3)$_$;


--
-- Name: st_askml(integer, geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_askml(integer, geography, integer) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_AsKML($1, $2, $3)$_$;


--
-- Name: st_assvg(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsSVG($1::geometry);  $_$;


--
-- Name: st_assvg(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- Name: st_assvg(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geography) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_svg';


--
-- Name: st_assvg(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geometry, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- Name: st_assvg(geography, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geography, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_svg';


--
-- Name: st_assvg(geometry, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geometry, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'assvg_geometry';


--
-- Name: st_assvg(geography, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_assvg(geography, integer, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_svg';


--
-- Name: st_astext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_astext(text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_AsText($1::geometry);  $_$;


--
-- Name: st_astext(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_astext(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_asText';


--
-- Name: st_astext(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_astext(geography) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_as_text';


--
-- Name: st_azimuth(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_azimuth(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_azimuth';


--
-- Name: st_bdmpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_bdmpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	geomtext alias for $1;
	srid alias for $2;
	mline geometry;
	geom geometry;
BEGIN
	mline := ST_MultiLineStringFromText(geomtext, srid);

	IF mline IS NULL
	THEN
		RAISE EXCEPTION 'Input is not a MultiLinestring';
	END IF;

	geom := multi(ST_BuildArea(mline));

	RETURN geom;
END;
$_$;


--
-- Name: st_bdpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_bdpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	geomtext alias for $1;
	srid alias for $2;
	mline geometry;
	geom geometry;
BEGIN
	mline := ST_MultiLineStringFromText(geomtext, srid);

	IF mline IS NULL
	THEN
		RAISE EXCEPTION 'Input is not a MultiLinestring';
	END IF;

	geom := ST_BuildArea(mline);

	IF GeometryType(geom) != 'POLYGON'
	THEN
		RAISE EXCEPTION 'Input returns more then a single polygon, try using BdMPolyFromText instead';
	END IF;

	RETURN geom;
END;
$_$;


--
-- Name: st_boundary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_boundary(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'boundary';


--
-- Name: st_box(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box(geometry) RETURNS box
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX';


--
-- Name: st_box(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box(box3d) RETURNS box
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX';


--
-- Name: st_box2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d(geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX2DFLOAT4';


--
-- Name: st_box2d(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d(box3d) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX2DFLOAT4';


--
-- Name: st_box2d(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d(box3d_extent) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_BOX2DFLOAT4';


--
-- Name: st_box2d_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d_in(cstring) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_in';


--
-- Name: st_box2d_out(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box2d_out(box2d) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_out';


--
-- Name: st_box3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d(geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_BOX3D';


--
-- Name: st_box3d(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d(box2d) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_to_BOX3D';


--
-- Name: st_box3d_extent(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d_extent(box3d_extent) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_extent_to_BOX3D';


--
-- Name: st_box3d_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d_in(cstring) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_in';


--
-- Name: st_box3d_out(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_box3d_out(box3d) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_out';


--
-- Name: st_buffer(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'buffer';


--
-- Name: st_buffer(geography, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(geography, double precision) RETURNS geography
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT geography(ST_Transform(ST_Buffer(ST_Transform(geometry($1), _ST_BestSRID($1)), $2), 4326))$_$;


--
-- Name: st_buffer(text, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(text, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Buffer($1::geometry, $2);  $_$;


--
-- Name: st_buffer(geometry, double precision, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(geometry, double precision, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT _ST_Buffer($1, $2,
		CAST('quad_segs='||CAST($3 AS text) as cstring))
	   $_$;


--
-- Name: st_buffer(geometry, double precision, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buffer(geometry, double precision, text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT _ST_Buffer($1, $2,
		CAST( regexp_replace($3, '^[0123456789]+$',
			'quad_segs='||$3) AS cstring)
		)
	   $_$;


--
-- Name: st_buildarea(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_buildarea(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_buildarea';


--
-- Name: st_bytea(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_bytea(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_bytea';


--
-- Name: st_centroid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_centroid(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'centroid';


--
-- Name: st_chip_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_chip_in(cstring) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_in';


--
-- Name: st_chip_out(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_chip_out(chip) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_out';


--
-- Name: st_closestpoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_closestpoint(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_closestpoint';


--
-- Name: st_collect(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_collect(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_collect_garray';


--
-- Name: st_collect(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_collect(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'LWGEOM_collect';


--
-- Name: st_collectionextract(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_collectionextract(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_CollectionExtract';


--
-- Name: st_combine_bbox(box2d, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_combine_bbox(box2d, geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_combine';


--
-- Name: st_combine_bbox(box3d_extent, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_combine_bbox(box3d_extent, geometry) RETURNS box3d_extent
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX3D_combine';


--
-- Name: st_combine_bbox(box3d, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_combine_bbox(box3d, geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE
    AS '$libdir/postgis-1.5', 'BOX3D_combine';


--
-- Name: st_compression(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_compression(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getCompression';


--
-- Name: st_contains(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_contains(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Contains($1,$2)$_$;


--
-- Name: st_containsproperly(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_containsproperly(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_ContainsProperly($1,$2)$_$;


--
-- Name: st_convexhull(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_convexhull(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'convexhull';


--
-- Name: st_coorddim(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_coorddim(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_ndims';


--
-- Name: st_coveredby(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_coveredby(text, text) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$ SELECT ST_CoveredBy($1::geometry, $2::geometry);  $_$;


--
-- Name: st_coveredby(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_coveredby(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_CoveredBy($1,$2)$_$;


--
-- Name: st_coveredby(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_coveredby(geography, geography) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Covers($2, $1)$_$;


--
-- Name: st_covers(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_covers(text, text) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$ SELECT ST_Covers($1::geometry, $2::geometry);  $_$;


--
-- Name: st_covers(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_covers(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Covers($1,$2)$_$;


--
-- Name: st_covers(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_covers(geography, geography) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT $1 && $2 AND _ST_Covers($1, $2)$_$;


--
-- Name: st_crosses(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_crosses(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Crosses($1,$2)$_$;


--
-- Name: st_curvetoline(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_curvetoline(geometry) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_CurveToLine($1, 32)$_$;


--
-- Name: st_curvetoline(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_curvetoline(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_curve_segmentize';


--
-- Name: st_datatype(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_datatype(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getDatatype';


--
-- Name: st_dfullywithin(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dfullywithin(geometry, geometry, double precision) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && ST_Expand($2,$3) AND $2 && ST_Expand($1,$3) AND _ST_DFullyWithin(ST_ConvexHull($1), ST_ConvexHull($2), $3)$_$;


--
-- Name: st_difference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_difference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'difference';


--
-- Name: st_dimension(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dimension(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dimension';


--
-- Name: st_disjoint(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_disjoint(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'disjoint';


--
-- Name: st_distance(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance(text, text) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Distance($1::geometry, $2::geometry);  $_$;


--
-- Name: st_distance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_mindistance2d';


--
-- Name: st_distance(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance(geography, geography) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_Distance($1, $2, 0.0, true)$_$;


--
-- Name: st_distance(geography, geography, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance(geography, geography, boolean) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_Distance($1, $2, 0.0, $3)$_$;


--
-- Name: st_distance_sphere(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance_sphere(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_distance_sphere';


--
-- Name: st_distance_spheroid(geometry, geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_distance_spheroid(geometry, geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_distance_ellipsoid';


--
-- Name: st_dump(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dump(geometry) RETURNS SETOF geometry_dump
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dump';


--
-- Name: st_dumppoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dumppoints(geometry) RETURNS SETOF geometry_dump
    LANGUAGE sql STRICT
    AS $_$
  SELECT * FROM _ST_DumpPoints($1, NULL);
$_$;


--
-- Name: st_dumprings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dumprings(geometry) RETURNS SETOF geometry_dump
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_dump_rings';


--
-- Name: st_dwithin(text, text, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dwithin(text, text, double precision) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$ SELECT ST_DWithin($1::geometry, $2::geometry, $3);  $_$;


--
-- Name: st_dwithin(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dwithin(geometry, geometry, double precision) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && ST_Expand($2,$3) AND $2 && ST_Expand($1,$3) AND _ST_DWithin($1, $2, $3)$_$;


--
-- Name: st_dwithin(geography, geography, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dwithin(geography, geography, double precision) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && _ST_Expand($2,$3) AND $2 && _ST_Expand($1,$3) AND _ST_DWithin($1, $2, $3, true)$_$;


--
-- Name: st_dwithin(geography, geography, double precision, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_dwithin(geography, geography, double precision, boolean) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && _ST_Expand($2,$3) AND $2 && _ST_Expand($1,$3) AND _ST_DWithin($1, $2, $3, $4)$_$;


--
-- Name: st_endpoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_endpoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_endpoint_linestring';


--
-- Name: st_envelope(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_envelope(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_envelope';


--
-- Name: st_equals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_equals(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Equals($1,$2)$_$;


--
-- Name: st_estimated_extent(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_estimated_extent(text, text) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT SECURITY DEFINER
    AS '$libdir/postgis-1.5', 'LWGEOM_estimated_extent';


--
-- Name: st_estimated_extent(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_estimated_extent(text, text, text) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT SECURITY DEFINER
    AS '$libdir/postgis-1.5', 'LWGEOM_estimated_extent';


--
-- Name: st_expand(box3d, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_expand(box3d, double precision) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_expand';


--
-- Name: st_expand(box2d, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_expand(box2d, double precision) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_expand';


--
-- Name: st_expand(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_expand(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_expand';


--
-- Name: st_exteriorring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_exteriorring(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_exteriorring_polygon';


--
-- Name: st_factor(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_factor(chip) RETURNS real
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getFactor';


--
-- Name: st_find_extent(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_find_extent(text, text) RETURNS box2d
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	tablename alias for $1;
	columnname alias for $2;
	myrec RECORD;

BEGIN
	FOR myrec IN EXECUTE 'SELECT extent("' || columnname || '") FROM "' || tablename || '"' LOOP
		return myrec.extent;
	END LOOP;
END;
$_$;


--
-- Name: st_find_extent(text, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_find_extent(text, text, text) RETURNS box2d
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $_$
DECLARE
	schemaname alias for $1;
	tablename alias for $2;
	columnname alias for $3;
	myrec RECORD;

BEGIN
	FOR myrec IN EXECUTE 'SELECT extent("' || columnname || '") FROM "' || schemaname || '"."' || tablename || '"' LOOP
		return myrec.extent;
	END LOOP;
END;
$_$;


--
-- Name: st_force_2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_2d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_2d';


--
-- Name: st_force_3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_3d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dz';


--
-- Name: st_force_3dm(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_3dm(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dm';


--
-- Name: st_force_3dz(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_3dz(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_3dz';


--
-- Name: st_force_4d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_4d(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_4d';


--
-- Name: st_force_collection(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_force_collection(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_collection';


--
-- Name: st_forcerhr(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_forcerhr(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_forceRHR_poly';


--
-- Name: st_geogfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geogfromtext(text) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_from_text';


--
-- Name: st_geogfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geogfromwkb(bytea) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_from_binary';


--
-- Name: st_geographyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geographyfromtext(text) RETURNS geography
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geography_from_text';


--
-- Name: st_geohash(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geohash(geometry) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_GeoHash($1, 0)$_$;


--
-- Name: st_geohash(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geohash(geometry, integer) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_GeoHash';


--
-- Name: st_geomcollfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomcollfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(ST_GeomFromText($1)) = 'GEOMETRYCOLLECTION'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_geomcollfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomcollfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(ST_GeomFromText($1, $2)) = 'GEOMETRYCOLLECTION'
	THEN ST_GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: st_geomcollfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomcollfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(ST_GeomFromWKB($1)) = 'GEOMETRYCOLLECTION'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_geomcollfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomcollfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromWKB($1, $2)) = 'GEOMETRYCOLLECTION'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_geometry(box2d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(box2d) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_to_LWGEOM';


--
-- Name: st_geometry(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(box3d) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_LWGEOM';


--
-- Name: st_geometry(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'parse_WKT_lwgeom';


--
-- Name: st_geometry(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(chip) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_to_LWGEOM';


--
-- Name: st_geometry(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_bytea';


--
-- Name: st_geometry(box3d_extent); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry(box3d_extent) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_to_LWGEOM';


--
-- Name: st_geometry_above(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_above(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_above';


--
-- Name: st_geometry_analyze(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_analyze(internal) RETURNS boolean
    LANGUAGE c STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_analyze';


--
-- Name: st_geometry_below(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_below(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_below';


--
-- Name: st_geometry_cmp(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_cmp(geometry, geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_cmp';


--
-- Name: st_geometry_contain(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_contain(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_contain';


--
-- Name: st_geometry_contained(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_contained(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_contained';


--
-- Name: st_geometry_eq(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_eq(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_eq';


--
-- Name: st_geometry_ge(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_ge(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_ge';


--
-- Name: st_geometry_gt(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_gt(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_gt';


--
-- Name: st_geometry_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_in(cstring) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_in';


--
-- Name: st_geometry_le(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_le(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_le';


--
-- Name: st_geometry_left(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_left(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_left';


--
-- Name: st_geometry_lt(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_lt(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'lwgeom_lt';


--
-- Name: st_geometry_out(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_out(geometry) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_out';


--
-- Name: st_geometry_overabove(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overabove(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overabove';


--
-- Name: st_geometry_overbelow(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overbelow(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overbelow';


--
-- Name: st_geometry_overlap(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overlap(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overlap';


--
-- Name: st_geometry_overleft(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overleft(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overleft';


--
-- Name: st_geometry_overright(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_overright(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_overright';


--
-- Name: st_geometry_recv(internal); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_recv(internal) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_recv';


--
-- Name: st_geometry_right(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_right(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_right';


--
-- Name: st_geometry_same(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_same(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_samebox';


--
-- Name: st_geometry_send(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometry_send(geometry) RETURNS bytea
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_send';


--
-- Name: st_geometryfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometryfromtext(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: st_geometryfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometryfromtext(text, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: st_geometryn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometryn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_geometryn_collection';


--
-- Name: st_geometrytype(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geometrytype(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geometry_geometrytype';


--
-- Name: st_geomfromewkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromewkb(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOMFromWKB';


--
-- Name: st_geomfromewkt(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromewkt(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'parse_WKT_lwgeom';


--
-- Name: st_geomfromgml(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromgml(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geom_from_gml';


--
-- Name: st_geomfromkml(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromkml(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geom_from_kml';


--
-- Name: st_geomfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromtext(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: st_geomfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromtext(text, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: st_geomfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromwkb(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_WKB';


--
-- Name: st_geomfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_geomfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_SetSRID(ST_GeomFromWKB($1), $2)$_$;


--
-- Name: st_gmltosql(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_gmltosql(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geom_from_gml';


--
-- Name: st_hasarc(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_hasarc(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_has_arc';


--
-- Name: st_hausdorffdistance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_hausdorffdistance(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'hausdorffdistance';


--
-- Name: st_hausdorffdistance(geometry, geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_hausdorffdistance(geometry, geometry, double precision) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'hausdorffdistancedensify';


--
-- Name: st_height(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_height(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getHeight';


--
-- Name: st_interiorringn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_interiorringn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_interiorringn_polygon';


--
-- Name: st_intersection(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersection(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'intersection';


--
-- Name: st_intersection(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersection(geography, geography) RETURNS geography
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT geography(ST_Transform(ST_Intersection(ST_Transform(geometry($1), _ST_BestSRID($1, $2)), ST_Transform(geometry($2), _ST_BestSRID($1, $2))), 4326))$_$;


--
-- Name: st_intersection(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersection(text, text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Intersection($1::geometry, $2::geometry);  $_$;


--
-- Name: st_intersects(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersects(text, text) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$ SELECT ST_Intersects($1::geometry, $2::geometry);  $_$;


--
-- Name: st_intersects(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersects(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Intersects($1,$2)$_$;


--
-- Name: st_intersects(geography, geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_intersects(geography, geography) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Distance($1, $2, 0.0, false) < 0.00001$_$;


--
-- Name: st_isclosed(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isclosed(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_isclosed_linestring';


--
-- Name: st_isempty(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isempty(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_isempty';


--
-- Name: st_isring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isring(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'isring';


--
-- Name: st_issimple(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_issimple(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'issimple';


--
-- Name: st_isvalid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isvalid(geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'isvalid';


--
-- Name: st_isvalidreason(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_isvalidreason(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'isvalidreason';


--
-- Name: st_length(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length(text) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT ST_Length($1::geometry);  $_$;


--
-- Name: st_length(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_linestring';


--
-- Name: st_length(geography); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length(geography) RETURNS double precision
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT ST_Length($1, true)$_$;


--
-- Name: st_length(geography, boolean); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length(geography, boolean) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'geography_length';


--
-- Name: st_length2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_linestring';


--
-- Name: st_length2d_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length2d_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length2d_ellipsoid';


--
-- Name: st_length3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length3d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_length_linestring';


--
-- Name: st_length3d_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length3d_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length_ellipsoid_linestring';


--
-- Name: st_length_spheroid(geometry, spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_length_spheroid(geometry, spheroid) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'LWGEOM_length_ellipsoid_linestring';


--
-- Name: st_line_interpolate_point(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_line_interpolate_point(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_interpolate_point';


--
-- Name: st_line_locate_point(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_line_locate_point(geometry, geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_locate_point';


--
-- Name: st_line_substring(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_line_substring(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_substring';


--
-- Name: st_linecrossingdirection(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linecrossingdirection(geometry, geometry) RETURNS integer
    LANGUAGE sql IMMUTABLE
    AS $_$ SELECT CASE WHEN NOT $1 && $2 THEN 0 ELSE _ST_LineCrossingDirection($1,$2) END $_$;


--
-- Name: st_linefrommultipoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefrommultipoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_from_mpoint';


--
-- Name: st_linefromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'LINESTRING'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_linefromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'LINESTRING'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: st_linefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'LINESTRING'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_linefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'LINESTRING'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_linemerge(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linemerge(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'linemerge';


--
-- Name: st_linestringfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linestringfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'LINESTRING'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_linestringfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linestringfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'LINESTRING'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_linetocurve(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_linetocurve(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_line_desegmentize';


--
-- Name: st_locate_along_measure(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_locate_along_measure(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ SELECT locate_between_measures($1, $2, $2) $_$;


--
-- Name: st_locate_between_measures(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_locate_between_measures(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_locate_between_m';


--
-- Name: st_locatebetweenelevations(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_locatebetweenelevations(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_LocateBetweenElevations';


--
-- Name: st_longestline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_longestline(geometry, geometry) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_LongestLine(ST_ConvexHull($1), ST_ConvexHull($2))$_$;


--
-- Name: st_m(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_m(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_m_point';


--
-- Name: st_makebox2d(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makebox2d(geometry, geometry) RETURNS box2d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX2DFLOAT4_construct';


--
-- Name: st_makebox3d(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makebox3d(geometry, geometry) RETURNS box3d
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_construct';


--
-- Name: st_makeenvelope(double precision, double precision, double precision, double precision, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makeenvelope(double precision, double precision, double precision, double precision, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ST_MakeEnvelope';


--
-- Name: st_makeline(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makeline(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline_garray';


--
-- Name: st_makeline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makeline(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline';


--
-- Name: st_makeline_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makeline_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makeline_garray';


--
-- Name: st_makepoint(double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepoint(double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: st_makepoint(double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepoint(double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: st_makepoint(double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepoint(double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: st_makepointm(double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepointm(double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint3dm';


--
-- Name: st_makepolygon(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepolygon(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoly';


--
-- Name: st_makepolygon(geometry, geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_makepolygon(geometry, geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoly';


--
-- Name: st_maxdistance(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_maxdistance(geometry, geometry) RETURNS double precision
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT _ST_MaxDistance(ST_ConvexHull($1), ST_ConvexHull($2))$_$;


--
-- Name: st_mem_size(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mem_size(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_mem_size';


--
-- Name: st_minimumboundingcircle(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_minimumboundingcircle(geometry) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_MinimumBoundingCircle($1, 48)$_$;


--
-- Name: st_minimumboundingcircle(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_minimumboundingcircle(inputgeom geometry, segs_per_quarter integer) RETURNS geometry
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $$
	DECLARE
	hull GEOMETRY;
	ring GEOMETRY;
	center GEOMETRY;
	radius DOUBLE PRECISION;
	dist DOUBLE PRECISION;
	d DOUBLE PRECISION;
	idx1 integer;
	idx2 integer;
	l1 GEOMETRY;
	l2 GEOMETRY;
	p1 GEOMETRY;
	p2 GEOMETRY;
	a1 DOUBLE PRECISION;
	a2 DOUBLE PRECISION;


	BEGIN

	-- First compute the ConvexHull of the geometry
	hull = ST_ConvexHull(inputgeom);
	--A point really has no MBC
	IF ST_GeometryType(hull) = 'ST_Point' THEN
		RETURN hull;
	END IF;
	-- convert the hull perimeter to a linestring so we can manipulate individual points
	--If its already a linestring force it to a closed linestring
	ring = CASE WHEN ST_GeometryType(hull) = 'ST_LineString' THEN ST_AddPoint(hull, ST_StartPoint(hull)) ELSE ST_ExteriorRing(hull) END;

	dist = 0;
	-- Brute Force - check every pair
	FOR i in 1 .. (ST_NumPoints(ring)-2)
		LOOP
			FOR j in i .. (ST_NumPoints(ring)-1)
				LOOP
				d = ST_Distance(ST_PointN(ring,i),ST_PointN(ring,j));
				-- Check the distance and update if larger
				IF (d > dist) THEN
					dist = d;
					idx1 = i;
					idx2 = j;
				END IF;
			END LOOP;
		END LOOP;

	-- We now have the diameter of the convex hull.  The following line returns it if desired.
	-- RETURN MakeLine(PointN(ring,idx1),PointN(ring,idx2));

	-- Now for the Minimum Bounding Circle.  Since we know the two points furthest from each
	-- other, the MBC must go through those two points. Start with those points as a diameter of a circle.

	-- The radius is half the distance between them and the center is midway between them
	radius = ST_Distance(ST_PointN(ring,idx1),ST_PointN(ring,idx2)) / 2.0;
	center = ST_Line_interpolate_point(ST_MakeLine(ST_PointN(ring,idx1),ST_PointN(ring,idx2)),0.5);

	-- Loop through each vertex and check if the distance from the center to the point
	-- is greater than the current radius.
	FOR k in 1 .. (ST_NumPoints(ring)-1)
		LOOP
		IF(k <> idx1 and k <> idx2) THEN
			dist = ST_Distance(center,ST_PointN(ring,k));
			IF (dist > radius) THEN
				-- We have to expand the circle.  The new circle must pass trhough
				-- three points - the two original diameters and this point.

				-- Draw a line from the first diameter to this point
				l1 = ST_Makeline(ST_PointN(ring,idx1),ST_PointN(ring,k));
				-- Compute the midpoint
				p1 = ST_line_interpolate_point(l1,0.5);
				-- Rotate the line 90 degrees around the midpoint (perpendicular bisector)
				l1 = ST_Translate(ST_Rotate(ST_Translate(l1,-X(p1),-Y(p1)),pi()/2),X(p1),Y(p1));
				--  Compute the azimuth of the bisector
				a1 = ST_Azimuth(ST_PointN(l1,1),ST_PointN(l1,2));
				--  Extend the line in each direction the new computed distance to insure they will intersect
				l1 = ST_AddPoint(l1,ST_Makepoint(X(ST_PointN(l1,2))+sin(a1)*dist,Y(ST_PointN(l1,2))+cos(a1)*dist),-1);
				l1 = ST_AddPoint(l1,ST_Makepoint(X(ST_PointN(l1,1))-sin(a1)*dist,Y(ST_PointN(l1,1))-cos(a1)*dist),0);

				-- Repeat for the line from the point to the other diameter point
				l2 = ST_Makeline(ST_PointN(ring,idx2),ST_PointN(ring,k));
				p2 = ST_Line_interpolate_point(l2,0.5);
				l2 = ST_Translate(ST_Rotate(ST_Translate(l2,-X(p2),-Y(p2)),pi()/2),X(p2),Y(p2));
				a2 = ST_Azimuth(ST_PointN(l2,1),ST_PointN(l2,2));
				l2 = ST_AddPoint(l2,ST_Makepoint(X(ST_PointN(l2,2))+sin(a2)*dist,Y(ST_PointN(l2,2))+cos(a2)*dist),-1);
				l2 = ST_AddPoint(l2,ST_Makepoint(X(ST_PointN(l2,1))-sin(a2)*dist,Y(ST_PointN(l2,1))-cos(a2)*dist),0);

				-- The new center is the intersection of the two bisectors
				center = ST_Intersection(l1,l2);
				-- The new radius is the distance to any of the three points
				radius = ST_Distance(center,ST_PointN(ring,idx1));
			END IF;
		END IF;
		END LOOP;
	--DONE!!  Return the MBC via the buffer command
	RETURN ST_Buffer(center,radius,segs_per_quarter);

	END;
$$;


--
-- Name: st_mlinefromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mlinefromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'MULTILINESTRING'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_mlinefromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mlinefromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE
	WHEN geometrytype(GeomFromText($1, $2)) = 'MULTILINESTRING'
	THEN GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: st_mlinefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mlinefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTILINESTRING'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_mlinefromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mlinefromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'MULTILINESTRING'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_mpointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'MULTIPOINT'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_mpointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromText($1, $2)) = 'MULTIPOINT'
	THEN GeomFromText($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_mpointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTIPOINT'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_mpointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1, $2)) = 'MULTIPOINT'
	THEN GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_mpolyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpolyfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'MULTIPOLYGON'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_mpolyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpolyfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1, $2)) = 'MULTIPOLYGON'
	THEN ST_GeomFromText($1,$2)
	ELSE NULL END
	$_$;


--
-- Name: st_mpolyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpolyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTIPOLYGON'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_mpolyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_mpolyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'MULTIPOLYGON'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_multi(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multi(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_force_multi';


--
-- Name: st_multilinefromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multilinefromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTILINESTRING'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_multilinestringfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multilinestringfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_MLineFromText($1)$_$;


--
-- Name: st_multilinestringfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multilinestringfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MLineFromText($1, $2)$_$;


--
-- Name: st_multipointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPointFromText($1)$_$;


--
-- Name: st_multipointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTIPOINT'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_multipointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1,$2)) = 'MULTIPOINT'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_multipolyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipolyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'MULTIPOLYGON'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_multipolyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipolyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'MULTIPOLYGON'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_multipolygonfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipolygonfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPolyFromText($1)$_$;


--
-- Name: st_multipolygonfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_multipolygonfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT MPolyFromText($1, $2)$_$;


--
-- Name: st_ndims(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ndims(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_ndims';


--
-- Name: st_npoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_npoints(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_npoints';


--
-- Name: st_nrings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_nrings(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_nrings';


--
-- Name: st_numgeometries(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_numgeometries(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numgeometries_collection';


--
-- Name: st_numinteriorring(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_numinteriorring(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numinteriorrings_polygon';


--
-- Name: st_numinteriorrings(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_numinteriorrings(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numinteriorrings_polygon';


--
-- Name: st_numpoints(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_numpoints(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_numpoints_linestring';


--
-- Name: st_orderingequals(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_orderingequals(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ 
	SELECT $1 ~= $2 AND _ST_OrderingEquals($1, $2)
	$_$;


--
-- Name: st_overlaps(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_overlaps(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Overlaps($1,$2)$_$;


--
-- Name: st_perimeter(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_perimeter(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter2d_poly';


--
-- Name: st_perimeter2d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_perimeter2d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter2d_poly';


--
-- Name: st_perimeter3d(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_perimeter3d(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_perimeter_poly';


--
-- Name: st_point(double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_point(double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_makepoint';


--
-- Name: st_point_inside_circle(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_point_inside_circle(geometry, double precision, double precision, double precision) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_inside_circle_point';


--
-- Name: st_pointfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'POINT'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_pointfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1, $2)) = 'POINT'
	THEN ST_GeomFromText($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_pointfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'POINT'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_pointfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'POINT'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_pointn(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointn(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_pointn_linestring';


--
-- Name: st_pointonsurface(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_pointonsurface(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'pointonsurface';


--
-- Name: st_polyfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polyfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1)) = 'POLYGON'
	THEN ST_GeomFromText($1)
	ELSE NULL END
	$_$;


--
-- Name: st_polyfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polyfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromText($1, $2)) = 'POLYGON'
	THEN ST_GeomFromText($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_polyfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polyfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1)) = 'POLYGON'
	THEN ST_GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_polyfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polyfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1, $2)) = 'POLYGON'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_polygon(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygon(geometry, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$ 
	SELECT setSRID(makepolygon($1), $2)
	$_$;


--
-- Name: st_polygonfromtext(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonfromtext(text) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_PolyFromText($1)$_$;


--
-- Name: st_polygonfromtext(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonfromtext(text, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT PolyFromText($1, $2)$_$;


--
-- Name: st_polygonfromwkb(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonfromwkb(bytea) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(GeomFromWKB($1)) = 'POLYGON'
	THEN GeomFromWKB($1)
	ELSE NULL END
	$_$;


--
-- Name: st_polygonfromwkb(bytea, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonfromwkb(bytea, integer) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
	SELECT CASE WHEN geometrytype(ST_GeomFromWKB($1,$2)) = 'POLYGON'
	THEN ST_GeomFromWKB($1, $2)
	ELSE NULL END
	$_$;


--
-- Name: st_polygonize(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonize(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'polygonize_garray';


--
-- Name: st_polygonize_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_polygonize_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'polygonize_garray';


--
-- Name: st_postgis_gist_joinsel(internal, oid, internal, smallint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_postgis_gist_joinsel(internal, oid, internal, smallint) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_joinsel';


--
-- Name: st_postgis_gist_sel(internal, oid, internal, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_postgis_gist_sel(internal, oid, internal, integer) RETURNS double precision
    LANGUAGE c
    AS '$libdir/postgis-1.5', 'LWGEOM_gist_sel';


--
-- Name: st_relate(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_relate(geometry, geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'relate_full';


--
-- Name: st_relate(geometry, geometry, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_relate(geometry, geometry, text) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'relate_pattern';


--
-- Name: st_removepoint(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_removepoint(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_removepoint';


--
-- Name: st_reverse(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_reverse(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_reverse';


--
-- Name: st_rotate(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_rotate(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT rotateZ($1, $2)$_$;


--
-- Name: st_rotatex(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_rotatex(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1, 1, 0, 0, 0, cos($2), -sin($2), 0, sin($2), cos($2), 0, 0, 0)$_$;


--
-- Name: st_rotatey(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_rotatey(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  cos($2), 0, sin($2),  0, 1, 0,  -sin($2), 0, cos($2), 0,  0, 0)$_$;


--
-- Name: st_rotatez(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_rotatez(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  cos($2), -sin($2), 0,  sin($2), cos($2), 0,  0, 0, 1,  0, 0, 0)$_$;


--
-- Name: st_scale(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_scale(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT scale($1, $2, $3, 1)$_$;


--
-- Name: st_scale(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_scale(geometry, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $2, 0, 0,  0, $3, 0,  0, 0, $4,  0, 0, 0)$_$;


--
-- Name: st_segmentize(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_segmentize(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_segmentize2d';


--
-- Name: st_setfactor(chip, real); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_setfactor(chip, real) RETURNS chip
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_setFactor';


--
-- Name: st_setpoint(geometry, integer, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_setpoint(geometry, integer, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_setpoint_linestring';


--
-- Name: st_setsrid(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_setsrid(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_setSRID';


--
-- Name: st_shift_longitude(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_shift_longitude(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_longitude_shift';


--
-- Name: st_shortestline(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_shortestline(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_shortestline2d';


--
-- Name: st_simplify(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_simplify(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_simplify2d';


--
-- Name: st_simplifypreservetopology(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_simplifypreservetopology(geometry, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT COST 100
    AS '$libdir/postgis-1.5', 'topologypreservesimplify';


--
-- Name: st_snaptogrid(geometry, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_snaptogrid(geometry, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_SnapToGrid($1, 0, 0, $2, $2)$_$;


--
-- Name: st_snaptogrid(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_snaptogrid(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT ST_SnapToGrid($1, 0, 0, $2, $3)$_$;


--
-- Name: st_snaptogrid(geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_snaptogrid(geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_snaptogrid';


--
-- Name: st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_snaptogrid(geometry, geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_snaptogrid_pointoff';


--
-- Name: st_spheroid_in(cstring); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_spheroid_in(cstring) RETURNS spheroid
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ellipsoid_in';


--
-- Name: st_spheroid_out(spheroid); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_spheroid_out(spheroid) RETURNS cstring
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'ellipsoid_out';


--
-- Name: st_srid(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_srid(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getSRID';


--
-- Name: st_srid(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_srid(geometry) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_getSRID';


--
-- Name: st_startpoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_startpoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_startpoint_linestring';


--
-- Name: st_summary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_summary(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_summary';


--
-- Name: st_symdifference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_symdifference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'symdifference';


--
-- Name: st_symmetricdifference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_symmetricdifference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'symdifference';


--
-- Name: st_text(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_text(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_text';


--
-- Name: st_touches(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_touches(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Touches($1,$2)$_$;


--
-- Name: st_transform(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_transform(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'transform';


--
-- Name: st_translate(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_translate(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT translate($1, $2, $3, 0)$_$;


--
-- Name: st_translate(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_translate(geometry, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1, 1, 0, 0, 0, 1, 0, 0, 0, 1, $2, $3, $4)$_$;


--
-- Name: st_transscale(geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_transscale(geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $4, 0, 0,  0, $5, 0,
		0, 0, 1,  $2 * $4, $3 * $5, 0)$_$;


--
-- Name: st_union(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_union(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_union_geometry_array';


--
-- Name: st_union(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_union(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'geomunion';


--
-- Name: st_unite_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_unite_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_union_geometry_array';


--
-- Name: st_width(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_width(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getWidth';


--
-- Name: st_within(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_within(geometry, geometry) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$SELECT $1 && $2 AND _ST_Within($1,$2)$_$;


--
-- Name: st_wkbtosql(bytea); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_wkbtosql(bytea) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_WKB';


--
-- Name: st_wkttosql(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_wkttosql(text) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_from_text';


--
-- Name: st_x(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_x(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_x_point';


--
-- Name: st_xmax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_xmax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_xmax';


--
-- Name: st_xmin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_xmin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_xmin';


--
-- Name: st_y(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_y(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_y_point';


--
-- Name: st_ymax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ymax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_ymax';


--
-- Name: st_ymin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_ymin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_ymin';


--
-- Name: st_z(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_z(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_z_point';


--
-- Name: st_zmax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_zmax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_zmax';


--
-- Name: st_zmflag(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_zmflag(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_zmflag';


--
-- Name: st_zmin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION st_zmin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_zmin';


--
-- Name: startpoint(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION startpoint(geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_startpoint_linestring';


--
-- Name: summary(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION summary(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_summary';


--
-- Name: symdifference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION symdifference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'symdifference';


--
-- Name: symmetricdifference(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION symmetricdifference(geometry, geometry) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'symdifference';


--
-- Name: text(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION text(geometry) RETURNS text
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_to_text';


--
-- Name: touches(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION touches(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'touches';


--
-- Name: transform(geometry, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION transform(geometry, integer) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'transform';


--
-- Name: translate(geometry, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION translate(geometry, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT translate($1, $2, $3, 0)$_$;


--
-- Name: translate(geometry, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION translate(geometry, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1, 1, 0, 0, 0, 1, 0, 0, 0, 1, $2, $3, $4)$_$;


--
-- Name: transscale(geometry, double precision, double precision, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION transscale(geometry, double precision, double precision, double precision, double precision) RETURNS geometry
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$SELECT affine($1,  $4, 0, 0,  0, $5, 0,
		0, 0, 1,  $2 * $4, $3 * $5, 0)$_$;


--
-- Name: unite_garray(geometry[]); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION unite_garray(geometry[]) RETURNS geometry
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'pgis_union_geometry_array';


--
-- Name: unlockrows(text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION unlockrows(text) RETURNS integer
    LANGUAGE plpgsql STRICT
    AS $_$ 
DECLARE
	ret int;
BEGIN

	IF NOT LongTransactionsEnabled() THEN
		RAISE EXCEPTION 'Long transaction support disabled, use EnableLongTransaction() to enable.';
	END IF;

	EXECUTE 'DELETE FROM authorization_table where authid = ' ||
		quote_literal($1);

	GET DIAGNOSTICS ret = ROW_COUNT;

	RETURN ret;
END;
$_$;


--
-- Name: updategeometrysrid(character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updategeometrysrid(character varying, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret  text;
BEGIN
	SELECT UpdateGeometrySRID('','',$1,$2,$3) into ret;
	RETURN ret;
END;
$_$;


--
-- Name: updategeometrysrid(character varying, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updategeometrysrid(character varying, character varying, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	ret  text;
BEGIN
	SELECT UpdateGeometrySRID('',$1,$2,$3,$4) into ret;
	RETURN ret;
END;
$_$;


--
-- Name: updategeometrysrid(character varying, character varying, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION updategeometrysrid(character varying, character varying, character varying, character varying, integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	catalog_name alias for $1;
	schema_name alias for $2;
	table_name alias for $3;
	column_name alias for $4;
	new_srid alias for $5;
	myrec RECORD;
	okay boolean;
	cname varchar;
	real_schema name;

BEGIN


	-- Find, check or fix schema_name
	IF ( schema_name != '' ) THEN
		okay = 'f';

		FOR myrec IN SELECT nspname FROM pg_namespace WHERE text(nspname) = schema_name LOOP
			okay := 't';
		END LOOP;

		IF ( okay <> 't' ) THEN
			RAISE EXCEPTION 'Invalid schema name';
		ELSE
			real_schema = schema_name;
		END IF;
	ELSE
		SELECT INTO real_schema current_schema()::text;
	END IF;

	-- Find out if the column is in the geometry_columns table
	okay = 'f';
	FOR myrec IN SELECT * from geometry_columns where f_table_schema = text(real_schema) and f_table_name = table_name and f_geometry_column = column_name LOOP
		okay := 't';
	END LOOP;
	IF (okay <> 't') THEN
		RAISE EXCEPTION 'column not found in geometry_columns table';
		RETURN 'f';
	END IF;

	-- Update ref from geometry_columns table
	EXECUTE 'UPDATE geometry_columns SET SRID = ' || new_srid::text ||
		' where f_table_schema = ' ||
		quote_literal(real_schema) || ' and f_table_name = ' ||
		quote_literal(table_name)  || ' and f_geometry_column = ' ||
		quote_literal(column_name);

	-- Make up constraint name
	cname = 'enforce_srid_'  || column_name;

	-- Drop enforce_srid constraint
	EXECUTE 'ALTER TABLE ' || quote_ident(real_schema) ||
		'.' || quote_ident(table_name) ||
		' DROP constraint ' || quote_ident(cname);

	-- Update geometries SRID
	EXECUTE 'UPDATE ' || quote_ident(real_schema) ||
		'.' || quote_ident(table_name) ||
		' SET ' || quote_ident(column_name) ||
		' = setSRID(' || quote_ident(column_name) ||
		', ' || new_srid::text || ')';

	-- Reset enforce_srid constraint
	EXECUTE 'ALTER TABLE ' || quote_ident(real_schema) ||
		'.' || quote_ident(table_name) ||
		' ADD constraint ' || quote_ident(cname) ||
		' CHECK (srid(' || quote_ident(column_name) ||
		') = ' || new_srid::text || ')';

	RETURN real_schema || '.' || table_name || '.' || column_name ||' SRID changed to ' || new_srid::text;

END;
$_$;


--
-- Name: width(chip); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION width(chip) RETURNS integer
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'CHIP_getWidth';


--
-- Name: within(geometry, geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION within(geometry, geometry) RETURNS boolean
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'within';


--
-- Name: x(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION x(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_x_point';


--
-- Name: xmax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION xmax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_xmax';


--
-- Name: xmin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION xmin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_xmin';


--
-- Name: y(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION y(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_y_point';


--
-- Name: ymax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ymax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_ymax';


--
-- Name: ymin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION ymin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_ymin';


--
-- Name: z(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION z(geometry) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_z_point';


--
-- Name: zmax(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION zmax(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_zmax';


--
-- Name: zmflag(geometry); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION zmflag(geometry) RETURNS smallint
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'LWGEOM_zmflag';


--
-- Name: zmin(box3d); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION zmin(box3d) RETURNS double precision
    LANGUAGE c IMMUTABLE STRICT
    AS '$libdir/postgis-1.5', 'BOX3D_zmin';


SET search_path = txid, pg_catalog;

--
-- Name: epoch_guard(); Type: FUNCTION; Schema: txid; Owner: -
--

CREATE FUNCTION epoch_guard() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
    if TG_OP = 'UPDATE' then
	-- epoch: allow only small increase
	if NEW.epoch > OLD.epoch and NEW.epoch < (OLD.epoch + 3) then
	    return NEW;
	end if;
	-- last_value: allow only increase
	if NEW.epoch = OLD.epoch and NEW.last_value > OLD.last_value then
	    return NEW;
	end if;
    end if;
    raise exception 'bad operation on txid.epoch';
end;
$$;


SET search_path = public, pg_catalog;

--
-- Name: accum(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE accum(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_accum_finalfn
);


--
-- Name: collect(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE collect(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_collect_finalfn
);


--
-- Name: extent(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE extent(geometry) (
    SFUNC = public.st_combine_bbox,
    STYPE = box3d_extent
);


--
-- Name: extent3d(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE extent3d(geometry) (
    SFUNC = public.combine_bbox,
    STYPE = box3d
);


--
-- Name: makeline(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE makeline(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_makeline_finalfn
);


--
-- Name: memcollect(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE memcollect(geometry) (
    SFUNC = public.st_collect,
    STYPE = geometry
);


--
-- Name: memgeomunion(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE memgeomunion(geometry) (
    SFUNC = geomunion,
    STYPE = geometry
);


--
-- Name: polygonize(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE polygonize(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_polygonize_finalfn
);


--
-- Name: st_accum(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_accum(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_accum_finalfn
);


--
-- Name: st_collect(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_collect(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_collect_finalfn
);


--
-- Name: st_extent(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_extent(geometry) (
    SFUNC = public.st_combine_bbox,
    STYPE = box3d_extent
);


--
-- Name: st_extent3d(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_extent3d(geometry) (
    SFUNC = public.st_combine_bbox,
    STYPE = box3d
);


--
-- Name: st_makeline(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_makeline(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_makeline_finalfn
);


--
-- Name: st_memcollect(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_memcollect(geometry) (
    SFUNC = public.st_collect,
    STYPE = geometry
);


--
-- Name: st_memunion(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_memunion(geometry) (
    SFUNC = public.st_union,
    STYPE = geometry
);


--
-- Name: st_polygonize(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_polygonize(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_polygonize_finalfn
);


--
-- Name: st_union(geometry); Type: AGGREGATE; Schema: public; Owner: -
--

CREATE AGGREGATE st_union(geometry) (
    SFUNC = pgis_geometry_accum_transfn,
    STYPE = pgis_abs,
    FINALFUNC = pgis_geometry_union_finalfn
);


--
-- Name: &&; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR && (
    PROCEDURE = geometry_overlap,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = &&,
    RESTRICT = geometry_gist_sel,
    JOIN = geometry_gist_joinsel
);


--
-- Name: &&; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR && (
    PROCEDURE = geography_overlaps,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = &&,
    RESTRICT = geography_gist_selectivity,
    JOIN = geography_gist_join_selectivity
);


--
-- Name: &<; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR &< (
    PROCEDURE = geometry_overleft,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = &>,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: &<|; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR &<| (
    PROCEDURE = geometry_overbelow,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = |&>,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: &>; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR &> (
    PROCEDURE = geometry_overright,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = &<,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: <; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR < (
    PROCEDURE = geometry_lt,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = >,
    NEGATOR = >=,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: <; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR < (
    PROCEDURE = geography_lt,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = >,
    NEGATOR = >=,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: <<; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR << (
    PROCEDURE = geometry_left,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = >>,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: <<|; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR <<| (
    PROCEDURE = geometry_below,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = |>>,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: <=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR <= (
    PROCEDURE = geometry_le,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = >=,
    NEGATOR = >,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: <=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR <= (
    PROCEDURE = geography_le,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = >=,
    NEGATOR = >,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: =; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR = (
    PROCEDURE = geometry_eq,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = =,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: =; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR = (
    PROCEDURE = geography_eq,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = =,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: >; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR > (
    PROCEDURE = geometry_gt,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = <,
    NEGATOR = <=,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: >; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR > (
    PROCEDURE = geography_gt,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = <,
    NEGATOR = <=,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: >=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR >= (
    PROCEDURE = geometry_ge,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = <=,
    NEGATOR = <,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: >=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR >= (
    PROCEDURE = geography_ge,
    LEFTARG = geography,
    RIGHTARG = geography,
    COMMUTATOR = <=,
    NEGATOR = <,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: >>; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR >> (
    PROCEDURE = geometry_right,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = <<,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: @; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR @ (
    PROCEDURE = geometry_contained,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = ~,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: |&>; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR |&> (
    PROCEDURE = geometry_overabove,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = &<|,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: |>>; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR |>> (
    PROCEDURE = geometry_above,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = <<|,
    RESTRICT = positionsel,
    JOIN = positionjoinsel
);


--
-- Name: ~; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR ~ (
    PROCEDURE = geometry_contain,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = @,
    RESTRICT = contsel,
    JOIN = contjoinsel
);


--
-- Name: ~=; Type: OPERATOR; Schema: public; Owner: -
--

CREATE OPERATOR ~= (
    PROCEDURE = geometry_samebox,
    LEFTARG = geometry,
    RIGHTARG = geometry,
    COMMUTATOR = ~=,
    RESTRICT = eqsel,
    JOIN = eqjoinsel
);


--
-- Name: btree_geography_ops; Type: OPERATOR CLASS; Schema: public; Owner: -
--

CREATE OPERATOR CLASS btree_geography_ops
    DEFAULT FOR TYPE geography USING btree AS
    OPERATOR 1 <(geography,geography) ,
    OPERATOR 2 <=(geography,geography) ,
    OPERATOR 3 =(geography,geography) ,
    OPERATOR 4 >=(geography,geography) ,
    OPERATOR 5 >(geography,geography) ,
    FUNCTION 1 geography_cmp(geography,geography);


--
-- Name: btree_geometry_ops; Type: OPERATOR CLASS; Schema: public; Owner: -
--

CREATE OPERATOR CLASS btree_geometry_ops
    DEFAULT FOR TYPE geometry USING btree AS
    OPERATOR 1 <(geometry,geometry) ,
    OPERATOR 2 <=(geometry,geometry) ,
    OPERATOR 3 =(geometry,geometry) ,
    OPERATOR 4 >=(geometry,geometry) ,
    OPERATOR 5 >(geometry,geometry) ,
    FUNCTION 1 geometry_cmp(geometry,geometry);


--
-- Name: gist_geography_ops; Type: OPERATOR CLASS; Schema: public; Owner: -
--

CREATE OPERATOR CLASS gist_geography_ops
    DEFAULT FOR TYPE geography USING gist AS
    STORAGE gidx ,
    OPERATOR 3 &&(geography,geography) ,
    FUNCTION 1 geography_gist_consistent(internal,geometry,integer) ,
    FUNCTION 2 geography_gist_union(bytea,internal) ,
    FUNCTION 3 geography_gist_compress(internal) ,
    FUNCTION 4 geography_gist_decompress(internal) ,
    FUNCTION 5 geography_gist_penalty(internal,internal,internal) ,
    FUNCTION 6 geography_gist_picksplit(internal,internal) ,
    FUNCTION 7 geography_gist_same(box2d,box2d,internal);


--
-- Name: gist_geometry_ops; Type: OPERATOR CLASS; Schema: public; Owner: -
--

CREATE OPERATOR CLASS gist_geometry_ops
    DEFAULT FOR TYPE geometry USING gist AS
    STORAGE box2d ,
    OPERATOR 1 <<(geometry,geometry) ,
    OPERATOR 2 &<(geometry,geometry) ,
    OPERATOR 3 &&(geometry,geometry) ,
    OPERATOR 4 &>(geometry,geometry) ,
    OPERATOR 5 >>(geometry,geometry) ,
    OPERATOR 6 ~=(geometry,geometry) ,
    OPERATOR 7 ~(geometry,geometry) ,
    OPERATOR 8 @(geometry,geometry) ,
    OPERATOR 9 &<|(geometry,geometry) ,
    OPERATOR 10 <<|(geometry,geometry) ,
    OPERATOR 11 |>>(geometry,geometry) ,
    OPERATOR 12 |&>(geometry,geometry) ,
    FUNCTION 1 lwgeom_gist_consistent(internal,geometry,integer) ,
    FUNCTION 2 lwgeom_gist_union(bytea,internal) ,
    FUNCTION 3 lwgeom_gist_compress(internal) ,
    FUNCTION 4 lwgeom_gist_decompress(internal) ,
    FUNCTION 5 lwgeom_gist_penalty(internal,internal,internal) ,
    FUNCTION 6 lwgeom_gist_picksplit(internal,internal) ,
    FUNCTION 7 lwgeom_gist_same(box2d,box2d,internal);


SET search_path = pg_catalog;

--
-- Name: CAST (public.box2d AS public.box3d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box2d AS public.box3d) WITH FUNCTION public.box3d(public.box2d) AS IMPLICIT;


--
-- Name: CAST (public.box2d AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box2d AS public.geometry) WITH FUNCTION public.geometry(public.box2d) AS IMPLICIT;


--
-- Name: CAST (public.box3d AS box); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d AS box) WITH FUNCTION public.box(public.box3d) AS IMPLICIT;


--
-- Name: CAST (public.box3d AS public.box2d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d AS public.box2d) WITH FUNCTION public.box2d(public.box3d) AS IMPLICIT;


--
-- Name: CAST (public.box3d AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d AS public.geometry) WITH FUNCTION public.geometry(public.box3d) AS IMPLICIT;


--
-- Name: CAST (public.box3d_extent AS public.box2d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d_extent AS public.box2d) WITH FUNCTION public.box2d(public.box3d_extent) AS IMPLICIT;


--
-- Name: CAST (public.box3d_extent AS public.box3d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d_extent AS public.box3d) WITH FUNCTION public.box3d_extent(public.box3d_extent) AS IMPLICIT;


--
-- Name: CAST (public.box3d_extent AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.box3d_extent AS public.geometry) WITH FUNCTION public.geometry(public.box3d_extent) AS IMPLICIT;


--
-- Name: CAST (bytea AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (bytea AS public.geometry) WITH FUNCTION public.geometry(bytea) AS IMPLICIT;


--
-- Name: CAST (public.chip AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.chip AS public.geometry) WITH FUNCTION public.geometry(public.chip) AS IMPLICIT;


--
-- Name: CAST (public.geography AS public.geography); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geography AS public.geography) WITH FUNCTION public.geography(public.geography, integer, boolean) AS IMPLICIT;


--
-- Name: CAST (public.geography AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geography AS public.geometry) WITH FUNCTION public.geometry(public.geography);


--
-- Name: CAST (public.geometry AS box); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS box) WITH FUNCTION public.box(public.geometry) AS IMPLICIT;


--
-- Name: CAST (public.geometry AS public.box2d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS public.box2d) WITH FUNCTION public.box2d(public.geometry) AS IMPLICIT;


--
-- Name: CAST (public.geometry AS public.box3d); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS public.box3d) WITH FUNCTION public.box3d(public.geometry) AS IMPLICIT;


--
-- Name: CAST (public.geometry AS bytea); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS bytea) WITH FUNCTION public.bytea(public.geometry) AS IMPLICIT;


--
-- Name: CAST (public.geometry AS public.geography); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS public.geography) WITH FUNCTION public.geography(public.geometry) AS IMPLICIT;


--
-- Name: CAST (public.geometry AS text); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (public.geometry AS text) WITH FUNCTION public.text(public.geometry) AS IMPLICIT;


--
-- Name: CAST (text AS public.geometry); Type: CAST; Schema: pg_catalog; Owner: -
--

CREATE CAST (text AS public.geometry) WITH FUNCTION public.geometry(text) AS IMPLICIT;


SET search_path = buzz, pg_catalog;

--
-- Name: destinataire; Type: TABLE; Schema: buzz; Owner: -; Tablespace: 
--

CREATE TABLE destinataire (
    dest_pk integer NOT NULL,
    dest_prenom character varying,
    dest_nom character varying,
    dest_email character varying NOT NULL,
    dest_localite character varying,
    dest_player_fk integer,
    dest_date timestamp without time zone DEFAULT now() NOT NULL,
    dest_langue character(2),
    CONSTRAINT destinataire_dest_langue_check CHECK (((dest_langue = 'NL'::bpchar) OR (dest_langue = 'FR'::bpchar)))
);


--
-- Name: destinataire_dest_pk_seq; Type: SEQUENCE; Schema: buzz; Owner: -
--

CREATE SEQUENCE destinataire_dest_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: destinataire_dest_pk_seq; Type: SEQUENCE OWNED BY; Schema: buzz; Owner: -
--

ALTER SEQUENCE destinataire_dest_pk_seq OWNED BY destinataire.dest_pk;


--
-- Name: gite; Type: TABLE; Schema: buzz; Owner: -; Tablespace: 
--

CREATE TABLE gite (
    gite_pk integer NOT NULL,
    gite_etat character varying DEFAULT 'en attente'::character varying,
    gite_date date DEFAULT now() NOT NULL,
    gite_heb_fk integer NOT NULL,
    CONSTRAINT gite_gite_etat_check CHECK (((((gite_etat)::text = 'en attente'::text) OR ((gite_etat)::text = 'gagné'::text)) OR ((gite_etat)::text = 'en jeu'::text)))
);


--
-- Name: gite_gite_pk_seq; Type: SEQUENCE; Schema: buzz; Owner: -
--

CREATE SEQUENCE gite_gite_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: gite_gite_pk_seq; Type: SEQUENCE OWNED BY; Schema: buzz; Owner: -
--

ALTER SEQUENCE gite_gite_pk_seq OWNED BY gite.gite_pk;


--
-- Name: info_winner; Type: TABLE; Schema: buzz; Owner: -; Tablespace: 
--

CREATE TABLE info_winner (
    infowin_pk integer NOT NULL,
    infowin_nom character varying,
    infowin_prenom character varying,
    infowin_adresse character varying,
    infowin_cp character varying,
    infowin_localite character varying,
    infowin_tel character varying,
    infowin_date timestamp without time zone DEFAULT ('now'::text)::date,
    infowin_langue character varying,
    infowin_email character varying,
    infowin_winner_fk integer
);


--
-- Name: info_winner_infowin_pk_seq; Type: SEQUENCE; Schema: buzz; Owner: -
--

CREATE SEQUENCE info_winner_infowin_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: info_winner_infowin_pk_seq; Type: SEQUENCE OWNED BY; Schema: buzz; Owner: -
--

ALTER SEQUENCE info_winner_infowin_pk_seq OWNED BY info_winner.infowin_pk;


--
-- Name: player; Type: TABLE; Schema: buzz; Owner: -; Tablespace: 
--

CREATE TABLE player (
    player_pk integer NOT NULL,
    player_prenom character varying,
    player_nom character varying,
    player_email character varying NOT NULL,
    player_localite character varying,
    player_score integer DEFAULT 0 NOT NULL,
    player_date timestamp without time zone DEFAULT now() NOT NULL,
    player_langue character(2),
    player_subscribe_ml boolean,
    CONSTRAINT player_player_langue_check CHECK (((player_langue = 'NL'::bpchar) OR (player_langue = 'FR'::bpchar)))
);


--
-- Name: player_player_pk_seq; Type: SEQUENCE; Schema: buzz; Owner: -
--

CREATE SEQUENCE player_player_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: player_player_pk_seq; Type: SEQUENCE OWNED BY; Schema: buzz; Owner: -
--

ALTER SEQUENCE player_player_pk_seq OWNED BY player.player_pk;


--
-- Name: winner; Type: TABLE; Schema: buzz; Owner: -; Tablespace: 
--

CREATE TABLE winner (
    winner_pk integer NOT NULL,
    winner_player_fk integer NOT NULL,
    winner_destinataire_fk integer NOT NULL,
    winner_player_heb_fk integer NOT NULL,
    winner_destinataire_heb_fk integer NOT NULL,
    winner_date timestamp without time zone DEFAULT now() NOT NULL,
    winner_destinataire_pass character varying(8),
    winner_player_pass character varying(8)
);


--
-- Name: winner_winner_pk_seq; Type: SEQUENCE; Schema: buzz; Owner: -
--

CREATE SEQUENCE winner_winner_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: winner_winner_pk_seq; Type: SEQUENCE OWNED BY; Schema: buzz; Owner: -
--

ALTER SEQUENCE winner_winner_pk_seq OWNED BY winner.winner_pk;


SET search_path = londiste, pg_catalog;

--
-- Name: completed; Type: TABLE; Schema: londiste; Owner: -; Tablespace: 
--

CREATE TABLE completed (
    consumer_id text NOT NULL,
    last_tick_id bigint NOT NULL
);


--
-- Name: link; Type: TABLE; Schema: londiste; Owner: -; Tablespace: 
--

CREATE TABLE link (
    source text NOT NULL,
    dest text NOT NULL
);


--
-- Name: provider_seq; Type: TABLE; Schema: londiste; Owner: -; Tablespace: 
--

CREATE TABLE provider_seq (
    nr integer NOT NULL,
    queue_name text NOT NULL,
    seq_name text NOT NULL
);


--
-- Name: provider_seq_nr_seq; Type: SEQUENCE; Schema: londiste; Owner: -
--

CREATE SEQUENCE provider_seq_nr_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: provider_seq_nr_seq; Type: SEQUENCE OWNED BY; Schema: londiste; Owner: -
--

ALTER SEQUENCE provider_seq_nr_seq OWNED BY provider_seq.nr;


--
-- Name: provider_table; Type: TABLE; Schema: londiste; Owner: -; Tablespace: 
--

CREATE TABLE provider_table (
    nr integer NOT NULL,
    queue_name text NOT NULL,
    table_name text NOT NULL,
    trigger_name text
);


--
-- Name: provider_table_nr_seq; Type: SEQUENCE; Schema: londiste; Owner: -
--

CREATE SEQUENCE provider_table_nr_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: provider_table_nr_seq; Type: SEQUENCE OWNED BY; Schema: londiste; Owner: -
--

ALTER SEQUENCE provider_table_nr_seq OWNED BY provider_table.nr;


--
-- Name: subscriber_seq; Type: TABLE; Schema: londiste; Owner: -; Tablespace: 
--

CREATE TABLE subscriber_seq (
    nr integer NOT NULL,
    queue_name text NOT NULL,
    seq_name text NOT NULL
);


--
-- Name: subscriber_seq_nr_seq; Type: SEQUENCE; Schema: londiste; Owner: -
--

CREATE SEQUENCE subscriber_seq_nr_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: subscriber_seq_nr_seq; Type: SEQUENCE OWNED BY; Schema: londiste; Owner: -
--

ALTER SEQUENCE subscriber_seq_nr_seq OWNED BY subscriber_seq.nr;


--
-- Name: subscriber_table_nr_seq; Type: SEQUENCE; Schema: londiste; Owner: -
--

CREATE SEQUENCE subscriber_table_nr_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: subscriber_table_nr_seq; Type: SEQUENCE OWNED BY; Schema: londiste; Owner: -
--

ALTER SEQUENCE subscriber_table_nr_seq OWNED BY subscriber_table.nr;


SET search_path = pgq, pg_catalog;

--
-- Name: batch_id_seq; Type: SEQUENCE; Schema: pgq; Owner: -
--

CREATE SEQUENCE batch_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: consumer; Type: TABLE; Schema: pgq; Owner: -; Tablespace: 
--

CREATE TABLE consumer (
    co_id integer NOT NULL,
    co_name text DEFAULT 'fooz'::text NOT NULL
);


--
-- Name: consumer_co_id_seq; Type: SEQUENCE; Schema: pgq; Owner: -
--

CREATE SEQUENCE consumer_co_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: consumer_co_id_seq; Type: SEQUENCE OWNED BY; Schema: pgq; Owner: -
--

ALTER SEQUENCE consumer_co_id_seq OWNED BY consumer.co_id;


--
-- Name: event_1_id_seq; Type: SEQUENCE; Schema: pgq; Owner: -
--

CREATE SEQUENCE event_1_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: event_1_tick_seq; Type: SEQUENCE; Schema: pgq; Owner: -
--

CREATE SEQUENCE event_1_tick_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: event_2_id_seq; Type: SEQUENCE; Schema: pgq; Owner: -
--

CREATE SEQUENCE event_2_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: event_2_tick_seq; Type: SEQUENCE; Schema: pgq; Owner: -
--

CREATE SEQUENCE event_2_tick_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: event_template; Type: TABLE; Schema: pgq; Owner: -; Tablespace: 
--

CREATE TABLE event_template (
    ev_id bigint NOT NULL,
    ev_time timestamp with time zone NOT NULL,
    ev_txid bigint DEFAULT txid_current() NOT NULL,
    ev_owner integer,
    ev_retry integer,
    ev_type text,
    ev_data text,
    ev_extra1 text,
    ev_extra2 text,
    ev_extra3 text,
    ev_extra4 text
);


--
-- Name: event_3; Type: TABLE; Schema: pgq; Owner: -; Tablespace: 
--

CREATE TABLE event_3 (
)
INHERITS (event_template);


--
-- Name: event_3_0; Type: TABLE; Schema: pgq; Owner: -; Tablespace: 
--

CREATE TABLE event_3_0 (
)
INHERITS (event_3);


--
-- Name: event_3_1; Type: TABLE; Schema: pgq; Owner: -; Tablespace: 
--

CREATE TABLE event_3_1 (
)
INHERITS (event_3);


--
-- Name: event_3_2; Type: TABLE; Schema: pgq; Owner: -; Tablespace: 
--

CREATE TABLE event_3_2 (
)
INHERITS (event_3);


--
-- Name: event_3_id_seq; Type: SEQUENCE; Schema: pgq; Owner: -
--

CREATE SEQUENCE event_3_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: event_3_tick_seq; Type: SEQUENCE; Schema: pgq; Owner: -
--

CREATE SEQUENCE event_3_tick_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: queue; Type: TABLE; Schema: pgq; Owner: -; Tablespace: 
--

CREATE TABLE queue (
    queue_id integer NOT NULL,
    queue_name text NOT NULL,
    queue_ntables integer DEFAULT 3 NOT NULL,
    queue_cur_table integer DEFAULT 0 NOT NULL,
    queue_rotation_period interval DEFAULT '02:00:00'::interval NOT NULL,
    queue_switch_step1 bigint DEFAULT txid_current() NOT NULL,
    queue_switch_step2 bigint DEFAULT txid_current(),
    queue_switch_time timestamp with time zone DEFAULT now() NOT NULL,
    queue_external_ticker boolean DEFAULT false NOT NULL,
    queue_ticker_max_count integer DEFAULT 500 NOT NULL,
    queue_ticker_max_lag interval DEFAULT '00:00:03'::interval NOT NULL,
    queue_ticker_idle_period interval DEFAULT '00:01:00'::interval NOT NULL,
    queue_data_pfx text NOT NULL,
    queue_event_seq text NOT NULL,
    queue_tick_seq text NOT NULL
);


--
-- Name: queue_queue_id_seq; Type: SEQUENCE; Schema: pgq; Owner: -
--

CREATE SEQUENCE queue_queue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: queue_queue_id_seq; Type: SEQUENCE OWNED BY; Schema: pgq; Owner: -
--

ALTER SEQUENCE queue_queue_id_seq OWNED BY queue.queue_id;


--
-- Name: retry_queue; Type: TABLE; Schema: pgq; Owner: -; Tablespace: 
--

CREATE TABLE retry_queue (
    ev_retry_after timestamp with time zone NOT NULL,
    ev_id bigint NOT NULL,
    ev_time timestamp with time zone NOT NULL,
    ev_txid bigint,
    ev_owner integer NOT NULL,
    ev_retry integer,
    ev_type text,
    ev_data text,
    ev_extra1 text,
    ev_extra2 text,
    ev_extra3 text,
    ev_extra4 text
);


--
-- Name: subscription; Type: TABLE; Schema: pgq; Owner: -; Tablespace: 
--

CREATE TABLE subscription (
    sub_id integer NOT NULL,
    sub_queue integer NOT NULL,
    sub_consumer integer NOT NULL,
    sub_last_tick bigint NOT NULL,
    sub_active timestamp with time zone DEFAULT now() NOT NULL,
    sub_batch bigint,
    sub_next_tick bigint
);


--
-- Name: subscription_sub_id_seq; Type: SEQUENCE; Schema: pgq; Owner: -
--

CREATE SEQUENCE subscription_sub_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: subscription_sub_id_seq; Type: SEQUENCE OWNED BY; Schema: pgq; Owner: -
--

ALTER SEQUENCE subscription_sub_id_seq OWNED BY subscription.sub_id;


--
-- Name: tick; Type: TABLE; Schema: pgq; Owner: -; Tablespace: 
--

CREATE TABLE tick (
    tick_queue integer NOT NULL,
    tick_id bigint NOT NULL,
    tick_time timestamp with time zone DEFAULT now() NOT NULL,
    tick_snapshot txid_snapshot DEFAULT txid_current_snapshot() NOT NULL
);


SET search_path = public, pg_catalog;

--
-- Name: account_analytic_account; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE account_analytic_account (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    code character varying(24),
    description text,
    quantity_max double precision,
    contact_id integer,
    currency_id integer,
    date date,
    partner_id integer,
    user_id integer,
    name character varying(128) NOT NULL,
    date_start date,
    company_id integer,
    parent_id integer,
    state character varying NOT NULL,
    type character varying
);


--
-- Name: TABLE account_analytic_account; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE account_analytic_account IS 'Analytic Account';


--
-- Name: COLUMN account_analytic_account.code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.code IS 'Code/Reference';


--
-- Name: COLUMN account_analytic_account.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.description IS 'Description';


--
-- Name: COLUMN account_analytic_account.quantity_max; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.quantity_max IS 'Maximum Time';


--
-- Name: COLUMN account_analytic_account.contact_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.contact_id IS 'Contact';


--
-- Name: COLUMN account_analytic_account.currency_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.currency_id IS 'Currency';


--
-- Name: COLUMN account_analytic_account.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.date IS 'Date End';


--
-- Name: COLUMN account_analytic_account.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.partner_id IS 'Partner';


--
-- Name: COLUMN account_analytic_account.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.user_id IS 'Account Manager';


--
-- Name: COLUMN account_analytic_account.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.name IS 'Account Name';


--
-- Name: COLUMN account_analytic_account.date_start; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.date_start IS 'Date Start';


--
-- Name: COLUMN account_analytic_account.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.company_id IS 'Company';


--
-- Name: COLUMN account_analytic_account.parent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.parent_id IS 'Parent Analytic Account';


--
-- Name: COLUMN account_analytic_account.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.state IS 'State';


--
-- Name: COLUMN account_analytic_account.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_account.type IS 'Account Type';


--
-- Name: account_analytic_account_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE account_analytic_account_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: account_analytic_account_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE account_analytic_account_id_seq OWNED BY account_analytic_account.id;


--
-- Name: account_analytic_line; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE account_analytic_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    amount numeric NOT NULL,
    user_id integer,
    name character varying(256) NOT NULL,
    unit_amount double precision,
    date date NOT NULL,
    company_id integer,
    account_id integer NOT NULL
);


--
-- Name: TABLE account_analytic_line; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE account_analytic_line IS 'Analytic Line';


--
-- Name: COLUMN account_analytic_line.amount; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_line.amount IS 'Amount';


--
-- Name: COLUMN account_analytic_line.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_line.user_id IS 'User';


--
-- Name: COLUMN account_analytic_line.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_line.name IS 'Description';


--
-- Name: COLUMN account_analytic_line.unit_amount; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_line.unit_amount IS 'Quantity';


--
-- Name: COLUMN account_analytic_line.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_line.date IS 'Date';


--
-- Name: COLUMN account_analytic_line.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_line.company_id IS 'Company';


--
-- Name: COLUMN account_analytic_line.account_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN account_analytic_line.account_id IS 'Analytic Account';


--
-- Name: account_analytic_line_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE account_analytic_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: account_analytic_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE account_analytic_line_id_seq OWNED BY account_analytic_line.id;


SET default_with_oids = true;

--
-- Name: alarm_attendee_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE alarm_attendee_rel (
    alarm_id integer NOT NULL,
    attendee_id integer NOT NULL
);


--
-- Name: TABLE alarm_attendee_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE alarm_attendee_rel IS 'RELATION BETWEEN calendar_alarm AND calendar_attendee';


SET default_with_oids = false;

--
-- Name: alembic_version; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE alembic_version (
    version_num character varying(32) NOT NULL
);


--
-- Name: base_action_rule; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE base_action_rule (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    trg_user_id integer,
    model_id integer NOT NULL,
    sequence integer,
    act_remind_partner boolean,
    trg_date_range_type character varying,
    last_run timestamp without time zone,
    active boolean,
    regex_name character varying(128),
    trg_date_range integer,
    act_remind_user boolean,
    act_mail_to_watchers boolean,
    act_reply_to character varying(64),
    name character varying(64) NOT NULL,
    trg_date_type character varying(16),
    trg_state_from character varying(16),
    act_user_id integer,
    server_action_id integer,
    act_state character varying(16),
    act_mail_to_user boolean,
    act_email_from character varying(64),
    act_method character varying(64),
    trg_partner_id integer,
    trg_partner_categ_id integer,
    act_email_cc character varying(250),
    trg_state_to character varying(16),
    act_mail_to_email character varying(128),
    filter_id integer,
    act_mail_body text,
    act_remind_attach boolean,
    act_email_to character varying(64),
    trg_categ_id integer,
    trg_section_id integer,
    regex_history character varying(128),
    act_categ_id integer,
    act_section_id integer,
    act_mail_to_partner boolean,
    trg_max_history integer
);


--
-- Name: TABLE base_action_rule; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE base_action_rule IS 'Action Rules';


--
-- Name: COLUMN base_action_rule.trg_user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.trg_user_id IS 'Responsible';


--
-- Name: COLUMN base_action_rule.model_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.model_id IS 'Object';


--
-- Name: COLUMN base_action_rule.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.sequence IS 'Sequence';


--
-- Name: COLUMN base_action_rule.act_remind_partner; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_remind_partner IS 'Remind Partner';


--
-- Name: COLUMN base_action_rule.trg_date_range_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.trg_date_range_type IS 'Delay type';


--
-- Name: COLUMN base_action_rule.last_run; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.last_run IS 'Last Run';


--
-- Name: COLUMN base_action_rule.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.active IS 'Active';


--
-- Name: COLUMN base_action_rule.regex_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.regex_name IS 'Regex on Resource Name';


--
-- Name: COLUMN base_action_rule.trg_date_range; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.trg_date_range IS 'Delay after trigger date';


--
-- Name: COLUMN base_action_rule.act_remind_user; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_remind_user IS 'Remind Responsible';


--
-- Name: COLUMN base_action_rule.act_mail_to_watchers; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_mail_to_watchers IS 'Mail to Watchers (CC)';


--
-- Name: COLUMN base_action_rule.act_reply_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_reply_to IS 'Reply-To';


--
-- Name: COLUMN base_action_rule.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.name IS 'Rule Name';


--
-- Name: COLUMN base_action_rule.trg_date_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.trg_date_type IS 'Trigger Date';


--
-- Name: COLUMN base_action_rule.trg_state_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.trg_state_from IS 'State';


--
-- Name: COLUMN base_action_rule.act_user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_user_id IS 'Set Responsible to';


--
-- Name: COLUMN base_action_rule.server_action_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.server_action_id IS 'Server Action';


--
-- Name: COLUMN base_action_rule.act_state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_state IS 'Set State to';


--
-- Name: COLUMN base_action_rule.act_mail_to_user; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_mail_to_user IS 'Mail to Responsible';


--
-- Name: COLUMN base_action_rule.act_email_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_email_from IS 'Email From';


--
-- Name: COLUMN base_action_rule.act_method; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_method IS 'Call Object Method';


--
-- Name: COLUMN base_action_rule.trg_partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.trg_partner_id IS 'Partner';


--
-- Name: COLUMN base_action_rule.trg_partner_categ_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.trg_partner_categ_id IS 'Partner Category';


--
-- Name: COLUMN base_action_rule.act_email_cc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_email_cc IS 'Add Watchers (Cc)';


--
-- Name: COLUMN base_action_rule.trg_state_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.trg_state_to IS 'Button Pressed';


--
-- Name: COLUMN base_action_rule.act_mail_to_email; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_mail_to_email IS 'Mail to these Emails';


--
-- Name: COLUMN base_action_rule.filter_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.filter_id IS 'Filter';


--
-- Name: COLUMN base_action_rule.act_mail_body; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_mail_body IS 'Mail body';


--
-- Name: COLUMN base_action_rule.act_remind_attach; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_remind_attach IS 'Remind with Attachment';


--
-- Name: COLUMN base_action_rule.act_email_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_email_to IS 'Email To';


--
-- Name: COLUMN base_action_rule.trg_categ_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.trg_categ_id IS 'Category';


--
-- Name: COLUMN base_action_rule.trg_section_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.trg_section_id IS 'Sales Team';


--
-- Name: COLUMN base_action_rule.regex_history; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.regex_history IS 'Regular Expression on Case History';


--
-- Name: COLUMN base_action_rule.act_categ_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_categ_id IS 'Set Category to';


--
-- Name: COLUMN base_action_rule.act_section_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_section_id IS 'Set Team to';


--
-- Name: COLUMN base_action_rule.act_mail_to_partner; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.act_mail_to_partner IS 'Mail to Partner';


--
-- Name: COLUMN base_action_rule.trg_max_history; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_action_rule.trg_max_history IS 'Maximum Communication History';


--
-- Name: base_action_rule_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE base_action_rule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: base_action_rule_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE base_action_rule_id_seq OWNED BY base_action_rule.id;


--
-- Name: base_calendar_invite_attendee; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE base_calendar_invite_attendee (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    partner_id integer,
    type character varying NOT NULL,
    email character varying(124),
    send_mail boolean
);


--
-- Name: TABLE base_calendar_invite_attendee; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE base_calendar_invite_attendee IS 'Invite Attendees';


--
-- Name: COLUMN base_calendar_invite_attendee.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_calendar_invite_attendee.partner_id IS 'Partner';


--
-- Name: COLUMN base_calendar_invite_attendee.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_calendar_invite_attendee.type IS 'Type';


--
-- Name: COLUMN base_calendar_invite_attendee.email; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_calendar_invite_attendee.email IS 'Email';


--
-- Name: COLUMN base_calendar_invite_attendee.send_mail; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_calendar_invite_attendee.send_mail IS 'Send mail?';


--
-- Name: base_calendar_invite_attendee_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE base_calendar_invite_attendee_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: base_calendar_invite_attendee_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE base_calendar_invite_attendee_id_seq OWNED BY base_calendar_invite_attendee.id;


--
-- Name: base_language_export; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE base_language_export (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    lang character varying,
    name character varying(16),
    format character varying NOT NULL,
    advice text,
    state character varying,
    data bytea
);


--
-- Name: TABLE base_language_export; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE base_language_export IS 'base.language.export';


--
-- Name: COLUMN base_language_export.lang; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_export.lang IS 'Language';


--
-- Name: COLUMN base_language_export.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_export.name IS 'Filename';


--
-- Name: COLUMN base_language_export.format; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_export.format IS 'File Format';


--
-- Name: COLUMN base_language_export.advice; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_export.advice IS 'Advice';


--
-- Name: COLUMN base_language_export.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_export.state IS 'unknown';


--
-- Name: COLUMN base_language_export.data; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_export.data IS 'File';


--
-- Name: base_language_export_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE base_language_export_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: base_language_export_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE base_language_export_id_seq OWNED BY base_language_export.id;


--
-- Name: base_language_import; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE base_language_import (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    code character varying(5) NOT NULL,
    data bytea NOT NULL,
    name character varying(64) NOT NULL,
    overwrite boolean
);


--
-- Name: TABLE base_language_import; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE base_language_import IS 'Language Import';


--
-- Name: COLUMN base_language_import.code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_import.code IS 'Code (eg:en__US)';


--
-- Name: COLUMN base_language_import.data; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_import.data IS 'File';


--
-- Name: COLUMN base_language_import.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_import.name IS 'Language Name';


--
-- Name: COLUMN base_language_import.overwrite; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_import.overwrite IS 'Overwrite Existing Terms';


--
-- Name: base_language_import_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE base_language_import_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: base_language_import_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE base_language_import_id_seq OWNED BY base_language_import.id;


--
-- Name: base_language_install; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE base_language_install (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    lang character varying NOT NULL,
    state character varying,
    overwrite boolean
);


--
-- Name: TABLE base_language_install; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE base_language_install IS 'Install Language';


--
-- Name: COLUMN base_language_install.lang; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_install.lang IS 'Language';


--
-- Name: COLUMN base_language_install.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_install.state IS 'state';


--
-- Name: COLUMN base_language_install.overwrite; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_language_install.overwrite IS 'Overwrite Existing Terms';


--
-- Name: base_language_install_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE base_language_install_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: base_language_install_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE base_language_install_id_seq OWNED BY base_language_install.id;


--
-- Name: base_module_configuration; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE base_module_configuration (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: TABLE base_module_configuration; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE base_module_configuration IS 'base.module.configuration';


--
-- Name: base_module_configuration_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE base_module_configuration_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: base_module_configuration_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE base_module_configuration_id_seq OWNED BY base_module_configuration.id;


--
-- Name: base_module_import; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE base_module_import (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    module_name character varying(128),
    module_file bytea NOT NULL,
    state character varying
);


--
-- Name: TABLE base_module_import; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE base_module_import IS 'Import Module';


--
-- Name: COLUMN base_module_import.module_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_module_import.module_name IS 'Module Name';


--
-- Name: COLUMN base_module_import.module_file; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_module_import.module_file IS 'Module .ZIP file';


--
-- Name: COLUMN base_module_import.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_module_import.state IS 'state';


--
-- Name: base_module_import_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE base_module_import_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: base_module_import_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE base_module_import_id_seq OWNED BY base_module_import.id;


--
-- Name: base_module_update; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE base_module_update (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    add integer,
    state character varying,
    update integer
);


--
-- Name: TABLE base_module_update; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE base_module_update IS 'Update Module';


--
-- Name: COLUMN base_module_update.add; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_module_update.add IS 'Number of modules added';


--
-- Name: COLUMN base_module_update.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_module_update.state IS 'state';


--
-- Name: COLUMN base_module_update.update; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_module_update.update IS 'Number of modules updated';


--
-- Name: base_module_update_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE base_module_update_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: base_module_update_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE base_module_update_id_seq OWNED BY base_module_update.id;


--
-- Name: base_module_upgrade; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE base_module_upgrade (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    module_info text
);


--
-- Name: TABLE base_module_upgrade; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE base_module_upgrade IS 'Module Upgrade';


--
-- Name: COLUMN base_module_upgrade.module_info; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_module_upgrade.module_info IS 'Modules to update';


--
-- Name: base_module_upgrade_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE base_module_upgrade_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: base_module_upgrade_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE base_module_upgrade_id_seq OWNED BY base_module_upgrade.id;


--
-- Name: base_setup_terminology; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE base_setup_terminology (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    partner character varying NOT NULL
);


--
-- Name: TABLE base_setup_terminology; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE base_setup_terminology IS 'base.setup.terminology';


--
-- Name: COLUMN base_setup_terminology.partner; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_setup_terminology.partner IS 'How do you call a Customer';


--
-- Name: base_setup_terminology_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE base_setup_terminology_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: base_setup_terminology_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE base_setup_terminology_id_seq OWNED BY base_setup_terminology.id;


--
-- Name: base_update_translations; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE base_update_translations (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    lang character varying NOT NULL
);


--
-- Name: TABLE base_update_translations; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE base_update_translations IS 'base.update.translations';


--
-- Name: COLUMN base_update_translations.lang; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN base_update_translations.lang IS 'Language';


--
-- Name: base_update_translations_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE base_update_translations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: base_update_translations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE base_update_translations_id_seq OWNED BY base_update_translations.id;


--
-- Name: blockinghistory; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE blockinghistory (
    heb_pk integer NOT NULL,
    block_start timestamp without time zone NOT NULL,
    block_end timestamp without time zone NOT NULL
);


--
-- Name: board_board; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE board_board (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    view_id integer,
    name character varying(64) NOT NULL
);


--
-- Name: TABLE board_board; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE board_board IS 'Board';


--
-- Name: COLUMN board_board.view_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN board_board.view_id IS 'Board View';


--
-- Name: COLUMN board_board.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN board_board.name IS 'Dashboard';


--
-- Name: board_board_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE board_board_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: board_board_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE board_board_id_seq OWNED BY board_board.id;


--
-- Name: board_board_line; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE board_board_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    board_id integer NOT NULL,
    width integer,
    name character varying(64) NOT NULL,
    sequence integer,
    "position" character varying NOT NULL,
    action_id integer NOT NULL,
    height integer
);


--
-- Name: TABLE board_board_line; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE board_board_line IS 'Board Line';


--
-- Name: COLUMN board_board_line.board_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN board_board_line.board_id IS 'Dashboard';


--
-- Name: COLUMN board_board_line.width; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN board_board_line.width IS 'Width';


--
-- Name: COLUMN board_board_line.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN board_board_line.name IS 'Title';


--
-- Name: COLUMN board_board_line.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN board_board_line.sequence IS 'Sequence';


--
-- Name: COLUMN board_board_line."position"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN board_board_line."position" IS 'Position';


--
-- Name: COLUMN board_board_line.action_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN board_board_line.action_id IS 'Action';


--
-- Name: COLUMN board_board_line.height; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN board_board_line.height IS 'Height';


--
-- Name: board_board_line_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE board_board_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: board_board_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE board_board_line_id_seq OWNED BY board_board_line.id;


--
-- Name: board_menu_create; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE board_menu_create (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    menu_name character varying(64) NOT NULL,
    menu_parent_id integer NOT NULL
);


--
-- Name: TABLE board_menu_create; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE board_menu_create IS 'Menu Create';


--
-- Name: COLUMN board_menu_create.menu_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN board_menu_create.menu_name IS 'Menu Name';


--
-- Name: COLUMN board_menu_create.menu_parent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN board_menu_create.menu_parent_id IS 'Parent Menu';


--
-- Name: board_menu_create_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE board_menu_create_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: board_menu_create_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE board_menu_create_id_seq OWNED BY board_menu_create.id;


--
-- Name: calendar_alarm; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE calendar_alarm (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    model_id integer,
    repeat integer,
    description text,
    trigger_occurs character varying NOT NULL,
    duration integer,
    active boolean,
    trigger_related character varying NOT NULL,
    trigger_duration integer NOT NULL,
    user_id integer,
    name character varying(124),
    attach bytea,
    event_end_date timestamp without time zone,
    trigger_interval character varying NOT NULL,
    alarm_id integer,
    state character varying,
    action character varying NOT NULL,
    event_date timestamp without time zone,
    trigger_date timestamp without time zone,
    res_id integer
);


--
-- Name: TABLE calendar_alarm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE calendar_alarm IS 'Event alarm information';


--
-- Name: COLUMN calendar_alarm.model_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.model_id IS 'Model';


--
-- Name: COLUMN calendar_alarm.repeat; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.repeat IS 'Repeat';


--
-- Name: COLUMN calendar_alarm.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.description IS 'Description';


--
-- Name: COLUMN calendar_alarm.trigger_occurs; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.trigger_occurs IS 'Triggers';


--
-- Name: COLUMN calendar_alarm.duration; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.duration IS 'Duration';


--
-- Name: COLUMN calendar_alarm.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.active IS 'Active';


--
-- Name: COLUMN calendar_alarm.trigger_related; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.trigger_related IS 'Related to';


--
-- Name: COLUMN calendar_alarm.trigger_duration; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.trigger_duration IS 'Duration';


--
-- Name: COLUMN calendar_alarm.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.user_id IS 'Owner';


--
-- Name: COLUMN calendar_alarm.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.name IS 'Summary';


--
-- Name: COLUMN calendar_alarm.attach; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.attach IS 'Attachment';


--
-- Name: COLUMN calendar_alarm.event_end_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.event_end_date IS 'Event End Date';


--
-- Name: COLUMN calendar_alarm.trigger_interval; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.trigger_interval IS 'Interval';


--
-- Name: COLUMN calendar_alarm.alarm_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.alarm_id IS 'Basic Alarm';


--
-- Name: COLUMN calendar_alarm.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.state IS 'State';


--
-- Name: COLUMN calendar_alarm.action; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.action IS 'Action';


--
-- Name: COLUMN calendar_alarm.event_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.event_date IS 'Event Date';


--
-- Name: COLUMN calendar_alarm.trigger_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.trigger_date IS 'Trigger Date';


--
-- Name: COLUMN calendar_alarm.res_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_alarm.res_id IS 'Resource ID';


--
-- Name: calendar_alarm_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE calendar_alarm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: calendar_alarm_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE calendar_alarm_id_seq OWNED BY calendar_alarm.id;


--
-- Name: calendar_attendee; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE calendar_attendee (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    cn character varying(124),
    partner_address_id integer,
    cutype character varying,
    availability character varying,
    user_id integer,
    language character varying,
    delegated_from character varying(124),
    sent_by character varying(124),
    member character varying(124),
    delegated_to character varying(124),
    state character varying,
    role character varying,
    ref character varying(128),
    email character varying(124),
    dir character varying(124),
    rsvp boolean
);


--
-- Name: TABLE calendar_attendee; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE calendar_attendee IS 'Attendee information';


--
-- Name: COLUMN calendar_attendee.cn; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.cn IS 'Common name';


--
-- Name: COLUMN calendar_attendee.partner_address_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.partner_address_id IS 'Contact';


--
-- Name: COLUMN calendar_attendee.cutype; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.cutype IS 'Invite Type';


--
-- Name: COLUMN calendar_attendee.availability; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.availability IS 'Free/Busy';


--
-- Name: COLUMN calendar_attendee.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.user_id IS 'User';


--
-- Name: COLUMN calendar_attendee.language; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.language IS 'Language';


--
-- Name: COLUMN calendar_attendee.delegated_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.delegated_from IS 'Delegated From';


--
-- Name: COLUMN calendar_attendee.sent_by; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.sent_by IS 'Sent By';


--
-- Name: COLUMN calendar_attendee.member; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.member IS 'Member';


--
-- Name: COLUMN calendar_attendee.delegated_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.delegated_to IS 'Delegated To';


--
-- Name: COLUMN calendar_attendee.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.state IS 'State';


--
-- Name: COLUMN calendar_attendee.role; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.role IS 'Role';


--
-- Name: COLUMN calendar_attendee.ref; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.ref IS 'Event Ref';


--
-- Name: COLUMN calendar_attendee.email; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.email IS 'Email';


--
-- Name: COLUMN calendar_attendee.dir; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.dir IS 'URI Reference';


--
-- Name: COLUMN calendar_attendee.rsvp; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_attendee.rsvp IS 'Required Reply?';


SET default_with_oids = true;

--
-- Name: calendar_attendee_child_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE calendar_attendee_child_rel (
    attendee_id integer NOT NULL,
    child_id integer NOT NULL
);


--
-- Name: TABLE calendar_attendee_child_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE calendar_attendee_child_rel IS 'RELATION BETWEEN calendar_attendee AND calendar_attendee';


--
-- Name: calendar_attendee_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE calendar_attendee_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: calendar_attendee_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE calendar_attendee_id_seq OWNED BY calendar_attendee.id;


--
-- Name: calendar_attendee_parent_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE calendar_attendee_parent_rel (
    attendee_id integer NOT NULL,
    parent_id integer NOT NULL
);


--
-- Name: TABLE calendar_attendee_parent_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE calendar_attendee_parent_rel IS 'RELATION BETWEEN calendar_attendee AND calendar_attendee';


SET default_with_oids = false;

--
-- Name: calendar_event; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE calendar_event (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    allday boolean,
    sequence integer,
    we boolean,
    base_calendar_alarm_id integer,
    rrule character varying(124),
    duration double precision,
    organizer character varying(256),
    month_list integer,
    user_id integer,
    vtimezone character varying(64),
    tu boolean,
    recurrency boolean,
    week_list character varying,
    day integer,
    recurrent_uid integer,
    state character varying,
    base_calendar_url character varying(264),
    location character varying(264),
    th boolean,
    exrule character varying(352),
    su boolean,
    exdate text,
    fr boolean,
    description text,
    end_date date,
    class character varying,
    byday character varying,
    date timestamp without time zone,
    active boolean,
    show_as character varying,
    count integer,
    end_type character varying,
    name character varying(64),
    date_deadline timestamp without time zone,
    mo boolean,
    "interval" integer,
    recurrent_id timestamp without time zone,
    alarm_id integer,
    organizer_id integer,
    sa boolean,
    rrule_type character varying,
    select1 character varying
);


--
-- Name: TABLE calendar_event; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE calendar_event IS 'Calendar Event';


--
-- Name: COLUMN calendar_event.allday; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.allday IS 'All Day';


--
-- Name: COLUMN calendar_event.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.sequence IS 'Sequence';


--
-- Name: COLUMN calendar_event.we; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.we IS 'Wed';


--
-- Name: COLUMN calendar_event.base_calendar_alarm_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.base_calendar_alarm_id IS 'Alarm';


--
-- Name: COLUMN calendar_event.rrule; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.rrule IS 'Recurrent Rule';


--
-- Name: COLUMN calendar_event.duration; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.duration IS 'Duration';


--
-- Name: COLUMN calendar_event.organizer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.organizer IS 'Organizer';


--
-- Name: COLUMN calendar_event.month_list; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.month_list IS 'Month';


--
-- Name: COLUMN calendar_event.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.user_id IS 'Responsible';


--
-- Name: COLUMN calendar_event.vtimezone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.vtimezone IS 'Timezone';


--
-- Name: COLUMN calendar_event.tu; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.tu IS 'Tue';


--
-- Name: COLUMN calendar_event.recurrency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.recurrency IS 'Recurrent';


--
-- Name: COLUMN calendar_event.week_list; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.week_list IS 'Weekday';


--
-- Name: COLUMN calendar_event.day; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.day IS 'Date of month';


--
-- Name: COLUMN calendar_event.recurrent_uid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.recurrent_uid IS 'Recurrent ID';


--
-- Name: COLUMN calendar_event.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.state IS 'State';


--
-- Name: COLUMN calendar_event.base_calendar_url; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.base_calendar_url IS 'Caldav URL';


--
-- Name: COLUMN calendar_event.location; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.location IS 'Location';


--
-- Name: COLUMN calendar_event.th; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.th IS 'Thu';


--
-- Name: COLUMN calendar_event.exrule; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.exrule IS 'Exception Rule';


--
-- Name: COLUMN calendar_event.su; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.su IS 'Sun';


--
-- Name: COLUMN calendar_event.exdate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.exdate IS 'Exception Date/Times';


--
-- Name: COLUMN calendar_event.fr; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.fr IS 'Fri';


--
-- Name: COLUMN calendar_event.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.description IS 'Description';


--
-- Name: COLUMN calendar_event.end_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.end_date IS 'Repeat Until';


--
-- Name: COLUMN calendar_event.class; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.class IS 'Mark as';


--
-- Name: COLUMN calendar_event.byday; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.byday IS 'By day';


--
-- Name: COLUMN calendar_event.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.date IS 'Date';


--
-- Name: COLUMN calendar_event.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.active IS 'Active';


--
-- Name: COLUMN calendar_event.show_as; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.show_as IS 'Show as';


--
-- Name: COLUMN calendar_event.count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.count IS 'Repeat';


--
-- Name: COLUMN calendar_event.end_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.end_type IS 'Recurrence termination';


--
-- Name: COLUMN calendar_event.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.name IS 'Description';


--
-- Name: COLUMN calendar_event.date_deadline; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.date_deadline IS 'Deadline';


--
-- Name: COLUMN calendar_event.mo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.mo IS 'Mon';


--
-- Name: COLUMN calendar_event."interval"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event."interval" IS 'Repeat every';


--
-- Name: COLUMN calendar_event.recurrent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.recurrent_id IS 'Recurrent ID date';


--
-- Name: COLUMN calendar_event.alarm_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.alarm_id IS 'Alarm';


--
-- Name: COLUMN calendar_event.organizer_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.organizer_id IS 'Organizer';


--
-- Name: COLUMN calendar_event.sa; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.sa IS 'Sat';


--
-- Name: COLUMN calendar_event.rrule_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.rrule_type IS 'Recurrency';


--
-- Name: COLUMN calendar_event.select1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_event.select1 IS 'Option';


--
-- Name: calendar_event_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE calendar_event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: calendar_event_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE calendar_event_id_seq OWNED BY calendar_event.id;


--
-- Name: calendar_todo; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE calendar_todo (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    allday boolean,
    sequence integer,
    we boolean,
    base_calendar_alarm_id integer,
    rrule character varying(124),
    duration integer,
    organizer character varying(256),
    month_list integer,
    user_id integer,
    vtimezone character varying(64),
    tu boolean,
    recurrency boolean,
    week_list character varying,
    day integer,
    recurrent_uid integer,
    state character varying,
    base_calendar_url character varying(264),
    show_as character varying,
    location character varying(264),
    th boolean,
    exrule character varying(352),
    exdate text,
    fr boolean,
    description text,
    end_date date,
    byday character varying,
    date timestamp without time zone,
    active boolean,
    class character varying,
    count integer,
    end_type character varying,
    name character varying(64),
    date_deadline timestamp without time zone,
    mo boolean,
    "interval" integer,
    su boolean,
    alarm_id integer,
    recurrent_id timestamp without time zone,
    organizer_id integer,
    sa boolean,
    rrule_type character varying,
    select1 character varying
);


--
-- Name: TABLE calendar_todo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE calendar_todo IS 'Calendar Task';


--
-- Name: COLUMN calendar_todo.allday; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.allday IS 'All Day';


--
-- Name: COLUMN calendar_todo.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.sequence IS 'Sequence';


--
-- Name: COLUMN calendar_todo.we; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.we IS 'Wed';


--
-- Name: COLUMN calendar_todo.base_calendar_alarm_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.base_calendar_alarm_id IS 'Alarm';


--
-- Name: COLUMN calendar_todo.rrule; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.rrule IS 'Recurrent Rule';


--
-- Name: COLUMN calendar_todo.duration; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.duration IS 'Duration';


--
-- Name: COLUMN calendar_todo.organizer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.organizer IS 'Organizer';


--
-- Name: COLUMN calendar_todo.month_list; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.month_list IS 'Month';


--
-- Name: COLUMN calendar_todo.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.user_id IS 'Responsible';


--
-- Name: COLUMN calendar_todo.vtimezone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.vtimezone IS 'Timezone';


--
-- Name: COLUMN calendar_todo.tu; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.tu IS 'Tue';


--
-- Name: COLUMN calendar_todo.recurrency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.recurrency IS 'Recurrent';


--
-- Name: COLUMN calendar_todo.week_list; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.week_list IS 'Weekday';


--
-- Name: COLUMN calendar_todo.day; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.day IS 'Date of month';


--
-- Name: COLUMN calendar_todo.recurrent_uid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.recurrent_uid IS 'Recurrent ID';


--
-- Name: COLUMN calendar_todo.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.state IS 'State';


--
-- Name: COLUMN calendar_todo.base_calendar_url; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.base_calendar_url IS 'Caldav URL';


--
-- Name: COLUMN calendar_todo.show_as; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.show_as IS 'Show as';


--
-- Name: COLUMN calendar_todo.location; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.location IS 'Location';


--
-- Name: COLUMN calendar_todo.th; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.th IS 'Thu';


--
-- Name: COLUMN calendar_todo.exrule; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.exrule IS 'Exception Rule';


--
-- Name: COLUMN calendar_todo.exdate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.exdate IS 'Exception Date/Times';


--
-- Name: COLUMN calendar_todo.fr; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.fr IS 'Fri';


--
-- Name: COLUMN calendar_todo.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.description IS 'Description';


--
-- Name: COLUMN calendar_todo.end_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.end_date IS 'Repeat Until';


--
-- Name: COLUMN calendar_todo.byday; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.byday IS 'By day';


--
-- Name: COLUMN calendar_todo.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.date IS 'Duration';


--
-- Name: COLUMN calendar_todo.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.active IS 'Active';


--
-- Name: COLUMN calendar_todo.class; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.class IS 'Mark as';


--
-- Name: COLUMN calendar_todo.count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.count IS 'Repeat';


--
-- Name: COLUMN calendar_todo.end_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.end_type IS 'Recurrence termination';


--
-- Name: COLUMN calendar_todo.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.name IS 'Description';


--
-- Name: COLUMN calendar_todo.date_deadline; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.date_deadline IS 'Deadline';


--
-- Name: COLUMN calendar_todo.mo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.mo IS 'Mon';


--
-- Name: COLUMN calendar_todo."interval"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo."interval" IS 'Repeat every';


--
-- Name: COLUMN calendar_todo.su; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.su IS 'Sun';


--
-- Name: COLUMN calendar_todo.alarm_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.alarm_id IS 'Alarm';


--
-- Name: COLUMN calendar_todo.recurrent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.recurrent_id IS 'Recurrent ID date';


--
-- Name: COLUMN calendar_todo.organizer_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.organizer_id IS 'Organizer';


--
-- Name: COLUMN calendar_todo.sa; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.sa IS 'Sat';


--
-- Name: COLUMN calendar_todo.rrule_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.rrule_type IS 'Recurrency';


--
-- Name: COLUMN calendar_todo.select1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN calendar_todo.select1 IS 'Option';


--
-- Name: calendar_todo_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE calendar_todo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: calendar_todo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE calendar_todo_id_seq OWNED BY calendar_todo.id;


SET default_with_oids = true;

--
-- Name: cgt_class_reco; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE cgt_class_reco (
    cgt_pk integer NOT NULL,
    cgt_code_reco character varying
);


--
-- Name: cgt_class_reco_cgt_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE cgt_class_reco_cgt_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: cgt_class_reco_cgt_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE cgt_class_reco_cgt_pk_seq OWNED BY cgt_class_reco.cgt_pk;


--
-- Name: charge; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE charge (
    cha_pk integer NOT NULL,
    cha_type_fr character varying,
    cha_type_en character varying,
    cha_type_nl character varying,
    cha_type_de character varying,
    cha_type_it character varying
);


--
-- Name: charge_cha_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE charge_cha_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: charge_cha_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE charge_cha_pk_seq OWNED BY charge.cha_pk;


--
-- Name: civilite; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE civilite (
    civ_pk integer NOT NULL,
    civ_titre character varying
);


--
-- Name: civilite_civ_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE civilite_civ_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: civilite_civ_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE civilite_civ_pk_seq OWNED BY civilite.civ_pk;


--
-- Name: commande; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE commande (
    com_pk integer NOT NULL,
    com_numero character varying,
    com_produit character varying,
    com_quantite integer DEFAULT 0,
    com_prix_unitaire double precision DEFAULT 0,
    com_frais_port double precision DEFAULT 0,
    com_montant_cheque double precision DEFAULT 0,
    com_prix_total double precision DEFAULT 0,
    com_devise character varying,
    com_nom character varying,
    com_prenom character varying,
    com_adresse character varying,
    com_cp character varying,
    com_localite character varying,
    com_pays character varying,
    com_email character varying,
    com_langue character varying,
    com_nom_destinataire character varying,
    com_prenom_destinataire character varying,
    com_nom_societe character varying,
    com_num_tva character varying,
    com_facturation character varying DEFAULT 'non'::character varying,
    com_mode_paiement character varying,
    com_date_commande timestamp without time zone DEFAULT ('now'::text)::timestamp(6) with time zone NOT NULL,
    com_date_validation timestamp without time zone DEFAULT ('now'::text)::timestamp(6) with time zone NOT NULL,
    com_date_envoi character varying,
    com_etat character varying DEFAULT 'attente'::character varying
);


--
-- Name: commande_com_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE commande_com_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: commande_com_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE commande_com_pk_seq OWNED BY commande.com_pk;


--
-- Name: commune; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE commune (
    com_pk integer NOT NULL,
    com_nom character varying,
    com_cp character varying,
    com_ins character varying,
    com_reg_fk integer,
    com_prov_fk integer,
    com_mais_fk integer,
    com_id character varying
);


--
-- Name: commune_com_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE commune_com_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: commune_com_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE commune_com_pk_seq OWNED BY commune.com_pk;


SET default_with_oids = false;

--
-- Name: crm_add_note; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_add_note (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    body text NOT NULL,
    state character varying NOT NULL
);


--
-- Name: TABLE crm_add_note; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_add_note IS 'Add Internal Note';


--
-- Name: COLUMN crm_add_note.body; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_add_note.body IS 'Note Body';


--
-- Name: COLUMN crm_add_note.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_add_note.state IS 'Set New State To';


--
-- Name: crm_add_note_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_add_note_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_add_note_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_add_note_id_seq OWNED BY crm_add_note.id;


--
-- Name: crm_case_categ; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_case_categ (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64) NOT NULL,
    object_id integer,
    section_id integer
);


--
-- Name: TABLE crm_case_categ; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_case_categ IS 'Category of Case';


--
-- Name: COLUMN crm_case_categ.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_categ.name IS 'Name';


--
-- Name: COLUMN crm_case_categ.object_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_categ.object_id IS 'Object Name';


--
-- Name: COLUMN crm_case_categ.section_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_categ.section_id IS 'Sales Team';


--
-- Name: crm_case_categ_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_case_categ_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_case_categ_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_case_categ_id_seq OWNED BY crm_case_categ.id;


--
-- Name: crm_case_channel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_case_channel (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    active boolean,
    name character varying(64) NOT NULL
);


--
-- Name: TABLE crm_case_channel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_case_channel IS 'Channels';


--
-- Name: COLUMN crm_case_channel.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_channel.active IS 'Active';


--
-- Name: COLUMN crm_case_channel.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_channel.name IS 'Channel Name';


--
-- Name: crm_case_channel_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_case_channel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_case_channel_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_case_channel_id_seq OWNED BY crm_case_channel.id;


--
-- Name: crm_case_resource_type; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_case_resource_type (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64) NOT NULL,
    section_id integer
);


--
-- Name: TABLE crm_case_resource_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_case_resource_type IS 'Campaign';


--
-- Name: COLUMN crm_case_resource_type.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_resource_type.name IS 'Campaign Name';


--
-- Name: COLUMN crm_case_resource_type.section_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_resource_type.section_id IS 'Sales Team';


--
-- Name: crm_case_resource_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_case_resource_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_case_resource_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_case_resource_type_id_seq OWNED BY crm_case_resource_type.id;


--
-- Name: crm_case_section; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_case_section (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    working_hours numeric,
    name character varying(64) NOT NULL,
    user_id integer,
    change_responsible boolean,
    note text,
    parent_id integer,
    code character varying(8),
    complete_name character varying(256),
    reply_to character varying(64),
    active boolean,
    allow_unlink boolean,
    resource_calendar_id integer
);


--
-- Name: TABLE crm_case_section; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_case_section IS 'Sales Teams';


--
-- Name: COLUMN crm_case_section.working_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_section.working_hours IS 'Working Hours';


--
-- Name: COLUMN crm_case_section.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_section.name IS 'Sales Team';


--
-- Name: COLUMN crm_case_section.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_section.user_id IS 'Team Leader';


--
-- Name: COLUMN crm_case_section.change_responsible; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_section.change_responsible IS 'Reassign Escalated';


--
-- Name: COLUMN crm_case_section.note; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_section.note IS 'Description';


--
-- Name: COLUMN crm_case_section.parent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_section.parent_id IS 'Parent Team';


--
-- Name: COLUMN crm_case_section.code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_section.code IS 'Code';


--
-- Name: COLUMN crm_case_section.complete_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_section.complete_name IS 'unknown';


--
-- Name: COLUMN crm_case_section.reply_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_section.reply_to IS 'Reply-To';


--
-- Name: COLUMN crm_case_section.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_section.active IS 'Active';


--
-- Name: COLUMN crm_case_section.allow_unlink; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_section.allow_unlink IS 'Allow Delete';


--
-- Name: COLUMN crm_case_section.resource_calendar_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_section.resource_calendar_id IS 'Working Time';


--
-- Name: crm_case_section_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_case_section_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_case_section_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_case_section_id_seq OWNED BY crm_case_section.id;


--
-- Name: crm_case_stage; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_case_stage (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    case_default boolean,
    requirements text,
    name character varying(64) NOT NULL,
    probability double precision NOT NULL,
    sequence integer,
    on_change boolean
);


--
-- Name: TABLE crm_case_stage; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_case_stage IS 'Stage of case';


--
-- Name: COLUMN crm_case_stage.case_default; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_stage.case_default IS 'Common to All Teams';


--
-- Name: COLUMN crm_case_stage.requirements; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_stage.requirements IS 'Requirements';


--
-- Name: COLUMN crm_case_stage.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_stage.name IS 'Stage Name';


--
-- Name: COLUMN crm_case_stage.probability; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_stage.probability IS 'Probability (%)';


--
-- Name: COLUMN crm_case_stage.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_stage.sequence IS 'Sequence';


--
-- Name: COLUMN crm_case_stage.on_change; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_case_stage.on_change IS 'Change Probability Automatically';


--
-- Name: crm_case_stage_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_case_stage_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_case_stage_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_case_stage_id_seq OWNED BY crm_case_stage.id;


--
-- Name: crm_lead; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_lead (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    date_closed timestamp without time zone,
    probability double precision,
    type_id integer,
    color integer,
    partner_address_id integer,
    date_action_last timestamp without time zone,
    day_close numeric,
    day_open numeric,
    contact_name character varying(64),
    partner_id integer,
    date_action_next timestamp without time zone,
    city character varying(128),
    user_id integer,
    zip character varying(24),
    title integer,
    partner_name character varying(64),
    planned_revenue double precision,
    country_id integer,
    company_id integer,
    priority character varying,
    state character varying(16),
    email_cc text,
    type character varying,
    email character varying(240),
    function character varying(128),
    fax character varying(64),
    optin boolean,
    description text,
    date_open timestamp without time zone,
    street2 character varying(128),
    ref2 character varying(128),
    section_id integer,
    title_action character varying(64),
    phone character varying(64),
    active boolean,
    date_action date,
    categ_id integer,
    stage_id integer,
    name character varying(64),
    date_deadline date,
    optout boolean,
    mobile character varying(64),
    ref character varying(128),
    birthdate character varying(64),
    channel_id integer,
    street character varying(128),
    state_id integer,
    email_from character varying(128),
    referred character varying(64)
);


--
-- Name: TABLE crm_lead; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_lead IS 'crm.lead';


--
-- Name: COLUMN crm_lead.date_closed; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.date_closed IS 'Closed';


--
-- Name: COLUMN crm_lead.probability; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.probability IS 'Probability (%)';


--
-- Name: COLUMN crm_lead.type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.type_id IS 'Campaign';


--
-- Name: COLUMN crm_lead.color; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.color IS 'Color Index';


--
-- Name: COLUMN crm_lead.partner_address_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.partner_address_id IS 'Partner Contact';


--
-- Name: COLUMN crm_lead.date_action_last; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.date_action_last IS 'Last Action';


--
-- Name: COLUMN crm_lead.day_close; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.day_close IS 'Days to Close';


--
-- Name: COLUMN crm_lead.day_open; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.day_open IS 'Days to Open';


--
-- Name: COLUMN crm_lead.contact_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.contact_name IS 'Contact Name';


--
-- Name: COLUMN crm_lead.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.partner_id IS 'Partner';


--
-- Name: COLUMN crm_lead.date_action_next; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.date_action_next IS 'Next Action';


--
-- Name: COLUMN crm_lead.city; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.city IS 'City';


--
-- Name: COLUMN crm_lead.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.user_id IS 'Salesman';


--
-- Name: COLUMN crm_lead.zip; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.zip IS 'Zip';


--
-- Name: COLUMN crm_lead.title; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.title IS 'Title';


--
-- Name: COLUMN crm_lead.partner_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.partner_name IS 'Customer Name';


--
-- Name: COLUMN crm_lead.planned_revenue; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.planned_revenue IS 'Expected Revenue';


--
-- Name: COLUMN crm_lead.country_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.country_id IS 'Country';


--
-- Name: COLUMN crm_lead.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.company_id IS 'Company';


--
-- Name: COLUMN crm_lead.priority; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.priority IS 'Priority';


--
-- Name: COLUMN crm_lead.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.state IS 'State';


--
-- Name: COLUMN crm_lead.email_cc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.email_cc IS 'Global CC';


--
-- Name: COLUMN crm_lead.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.type IS 'Type';


--
-- Name: COLUMN crm_lead.email; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.email IS 'E-Mail';


--
-- Name: COLUMN crm_lead.function; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.function IS 'Function';


--
-- Name: COLUMN crm_lead.fax; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.fax IS 'Fax';


--
-- Name: COLUMN crm_lead.optin; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.optin IS 'Opt-In';


--
-- Name: COLUMN crm_lead.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.description IS 'Notes';


--
-- Name: COLUMN crm_lead.date_open; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.date_open IS 'Opened';


--
-- Name: COLUMN crm_lead.street2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.street2 IS 'Street2';


--
-- Name: COLUMN crm_lead.ref2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.ref2 IS 'Reference 2';


--
-- Name: COLUMN crm_lead.section_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_lead.title_action; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.title_action IS 'Next Action';


--
-- Name: COLUMN crm_lead.phone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.phone IS 'Phone';


--
-- Name: COLUMN crm_lead.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.active IS 'Active';


--
-- Name: COLUMN crm_lead.date_action; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.date_action IS 'Next Action Date';


--
-- Name: COLUMN crm_lead.categ_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.categ_id IS 'Category';


--
-- Name: COLUMN crm_lead.stage_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.stage_id IS 'Stage';


--
-- Name: COLUMN crm_lead.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.name IS 'Name';


--
-- Name: COLUMN crm_lead.date_deadline; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.date_deadline IS 'Expected Closing';


--
-- Name: COLUMN crm_lead.optout; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.optout IS 'Opt-Out';


--
-- Name: COLUMN crm_lead.mobile; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.mobile IS 'Mobile';


--
-- Name: COLUMN crm_lead.ref; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.ref IS 'Reference';


--
-- Name: COLUMN crm_lead.birthdate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.birthdate IS 'Birthdate';


--
-- Name: COLUMN crm_lead.channel_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.channel_id IS 'Channel';


--
-- Name: COLUMN crm_lead.street; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.street IS 'Street';


--
-- Name: COLUMN crm_lead.state_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.state_id IS 'Fed. State';


--
-- Name: COLUMN crm_lead.email_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.email_from IS 'Email';


--
-- Name: COLUMN crm_lead.referred; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead.referred IS 'Referred By';


--
-- Name: crm_lead2opportunity_partner; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_lead2opportunity_partner (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    action character varying NOT NULL,
    partner_id integer,
    name character varying NOT NULL
);


--
-- Name: TABLE crm_lead2opportunity_partner; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_lead2opportunity_partner IS 'Lead To Opportunity Partner';


--
-- Name: COLUMN crm_lead2opportunity_partner.action; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead2opportunity_partner.action IS 'Related Partner';


--
-- Name: COLUMN crm_lead2opportunity_partner.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead2opportunity_partner.partner_id IS 'Partner';


--
-- Name: COLUMN crm_lead2opportunity_partner.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead2opportunity_partner.name IS 'Conversion Action';


--
-- Name: crm_lead2opportunity_partner_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_lead2opportunity_partner_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_lead2opportunity_partner_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_lead2opportunity_partner_id_seq OWNED BY crm_lead2opportunity_partner.id;


--
-- Name: crm_lead2opportunity_partner_mass; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_lead2opportunity_partner_mass (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying NOT NULL,
    action character varying NOT NULL,
    partner_id integer,
    section_id integer
);


--
-- Name: TABLE crm_lead2opportunity_partner_mass; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_lead2opportunity_partner_mass IS 'Mass Lead To Opportunity Partner';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.name IS 'Conversion Action';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.action; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.action IS 'Related Partner';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.partner_id IS 'Partner';


--
-- Name: COLUMN crm_lead2opportunity_partner_mass.section_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead2opportunity_partner_mass.section_id IS 'Sales Team';


--
-- Name: crm_lead2opportunity_partner_mass_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_lead2opportunity_partner_mass_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_lead2opportunity_partner_mass_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_lead2opportunity_partner_mass_id_seq OWNED BY crm_lead2opportunity_partner_mass.id;


SET default_with_oids = true;

--
-- Name: crm_lead2opportunity_partner_mass_res_users_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_lead2opportunity_partner_mass_res_users_rel (
    crm_lead2opportunity_partner_mass_id integer NOT NULL,
    res_users_id integer NOT NULL
);


--
-- Name: TABLE crm_lead2opportunity_partner_mass_res_users_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_lead2opportunity_partner_mass_res_users_rel IS 'RELATION BETWEEN crm_lead2opportunity_partner_mass AND res_users';


SET default_with_oids = false;

--
-- Name: crm_lead2partner; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_lead2partner (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    action character varying NOT NULL,
    partner_id integer
);


--
-- Name: TABLE crm_lead2partner; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_lead2partner IS 'Lead to Partner';


--
-- Name: COLUMN crm_lead2partner.action; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead2partner.action IS 'Action';


--
-- Name: COLUMN crm_lead2partner.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_lead2partner.partner_id IS 'Partner';


--
-- Name: crm_lead2partner_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_lead2partner_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_lead2partner_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_lead2partner_id_seq OWNED BY crm_lead2partner.id;


SET default_with_oids = true;

--
-- Name: crm_lead_crm_lead2opportunity_partner_mass_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_lead_crm_lead2opportunity_partner_mass_rel (
    crm_lead2opportunity_partner_mass_id integer NOT NULL,
    crm_lead_id integer NOT NULL
);


--
-- Name: TABLE crm_lead_crm_lead2opportunity_partner_mass_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_lead_crm_lead2opportunity_partner_mass_rel IS 'RELATION BETWEEN crm_lead2opportunity_partner_mass AND crm_lead';


--
-- Name: crm_lead_crm_lead2opportunity_partner_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_lead_crm_lead2opportunity_partner_rel (
    crm_lead2opportunity_partner_id integer NOT NULL,
    crm_lead_id integer NOT NULL
);


--
-- Name: TABLE crm_lead_crm_lead2opportunity_partner_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_lead_crm_lead2opportunity_partner_rel IS 'RELATION BETWEEN crm_lead2opportunity_partner AND crm_lead';


--
-- Name: crm_lead_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_lead_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_lead_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_lead_id_seq OWNED BY crm_lead.id;


SET default_with_oids = false;

--
-- Name: mail_message; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE mail_message (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    body_text text,
    email_bcc character varying(256),
    auto_delete boolean,
    body_html text,
    mail_server_id integer,
    email_to character varying(256),
    "references" text,
    email_from character varying(128),
    date timestamp without time zone,
    partner_id integer,
    subject character varying(512) NOT NULL,
    user_id integer,
    headers text,
    message_id character varying(256),
    subtype character varying(32),
    state character varying,
    reply_to character varying(256),
    email_cc character varying(256),
    model character varying(128),
    res_id integer,
    original bytea,
    fetchmail_server_id integer
);


--
-- Name: TABLE mail_message; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE mail_message IS 'Email Message';


--
-- Name: COLUMN mail_message.body_text; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.body_text IS 'Text contents';


--
-- Name: COLUMN mail_message.email_bcc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.email_bcc IS 'Bcc';


--
-- Name: COLUMN mail_message.auto_delete; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.auto_delete IS 'Auto Delete';


--
-- Name: COLUMN mail_message.body_html; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.body_html IS 'Rich-text contents';


--
-- Name: COLUMN mail_message.mail_server_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.mail_server_id IS 'Outgoing mail server';


--
-- Name: COLUMN mail_message.email_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.email_to IS 'To';


--
-- Name: COLUMN mail_message."references"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message."references" IS 'References';


--
-- Name: COLUMN mail_message.email_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.email_from IS 'From';


--
-- Name: COLUMN mail_message.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.date IS 'Date';


--
-- Name: COLUMN mail_message.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.partner_id IS 'Related partner';


--
-- Name: COLUMN mail_message.subject; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.subject IS 'Subject';


--
-- Name: COLUMN mail_message.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.user_id IS 'Related user';


--
-- Name: COLUMN mail_message.headers; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.headers IS 'Message headers';


--
-- Name: COLUMN mail_message.message_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.message_id IS 'Message-Id';


--
-- Name: COLUMN mail_message.subtype; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.subtype IS 'Message type';


--
-- Name: COLUMN mail_message.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.state IS 'State';


--
-- Name: COLUMN mail_message.reply_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.reply_to IS 'Reply-To';


--
-- Name: COLUMN mail_message.email_cc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.email_cc IS 'Cc';


--
-- Name: COLUMN mail_message.model; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.model IS 'Related Document model';


--
-- Name: COLUMN mail_message.res_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.res_id IS 'Related Document ID';


--
-- Name: COLUMN mail_message.original; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.original IS 'Original';


--
-- Name: COLUMN mail_message.fetchmail_server_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message.fetchmail_server_id IS 'Inbound Mail Server';


--
-- Name: crm_lead_report; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW crm_lead_report AS
    SELECT c.id, to_char((c.date_deadline)::timestamp with time zone, 'YYYY'::text) AS deadline_year, to_char((c.date_deadline)::timestamp with time zone, 'MM'::text) AS deadline_month, to_char((c.date_deadline)::timestamp with time zone, 'YYYY-MM-DD'::text) AS deadline_day, to_char(c.create_date, 'YYYY'::text) AS creation_year, to_char(c.create_date, 'MM'::text) AS creation_month, to_char(c.create_date, 'YYYY-MM-DD'::text) AS creation_day, to_char(c.date_open, 'YYYY-MM-DD'::text) AS opening_date, to_char(c.date_closed, 'YYYY-mm-dd'::text) AS date_closed, c.state, c.user_id, c.probability, c.stage_id, c.type, c.company_id, c.priority, c.section_id, c.channel_id, c.type_id, c.categ_id, c.partner_id, c.country_id, c.planned_revenue, (c.planned_revenue * (c.probability / (100)::double precision)) AS probable_revenue, 1 AS nbr, (SELECT count(mail_message.id) AS count FROM mail_message WHERE ((((mail_message.model)::text = 'crm.lead'::text) AND (mail_message.res_id = c.id)) AND (mail_message.email_from IS NOT NULL))) AS email, date_trunc('day'::text, c.create_date) AS create_date, (date_part('epoch'::text, (c.date_closed - c.create_date)) / ((3600 * 24))::double precision) AS delay_close, abs((date_part('epoch'::text, ((c.date_deadline)::timestamp without time zone - c.date_closed)) / ((3600 * 24))::double precision)) AS delay_expected, (date_part('epoch'::text, (c.date_open - c.create_date)) / ((3600 * 24))::double precision) AS delay_open FROM crm_lead c WHERE (c.active = true);


--
-- Name: crm_meeting; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_meeting (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    date_closed timestamp without time zone,
    allday boolean,
    sequence integer,
    partner_address_id integer,
    date_action_last timestamp without time zone,
    we boolean,
    base_calendar_alarm_id integer,
    rrule character varying(124),
    duration double precision,
    organizer character varying(256),
    partner_id integer,
    date_action_next timestamp without time zone,
    month_list integer,
    user_id integer,
    vtimezone character varying(64),
    tu boolean,
    recurrency boolean,
    week_list character varying,
    recurrent_uid integer,
    state character varying(16),
    base_calendar_url character varying(264),
    show_as character varying,
    location character varying(264),
    th boolean,
    exrule character varying(352),
    active boolean,
    day integer,
    exdate text,
    fr boolean,
    description text,
    end_date date,
    section_id integer,
    date timestamp without time zone,
    byday character varying,
    categ_id integer,
    class character varying,
    opportunity_id integer,
    count integer,
    end_type character varying,
    name character varying(124) NOT NULL,
    date_deadline timestamp without time zone,
    mo boolean,
    "interval" integer,
    su boolean,
    rrule_type character varying,
    alarm_id integer,
    recurrent_id timestamp without time zone,
    phonecall_id integer,
    organizer_id integer,
    sa boolean,
    email_from character varying(128),
    select1 character varying
);


--
-- Name: TABLE crm_meeting; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_meeting IS 'Meeting';


--
-- Name: COLUMN crm_meeting.date_closed; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.date_closed IS 'Closed';


--
-- Name: COLUMN crm_meeting.allday; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.allday IS 'All Day';


--
-- Name: COLUMN crm_meeting.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.sequence IS 'Sequence';


--
-- Name: COLUMN crm_meeting.partner_address_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.partner_address_id IS 'Partner Contact';


--
-- Name: COLUMN crm_meeting.date_action_last; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.date_action_last IS 'Last Action';


--
-- Name: COLUMN crm_meeting.we; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.we IS 'Wed';


--
-- Name: COLUMN crm_meeting.base_calendar_alarm_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.base_calendar_alarm_id IS 'Alarm';


--
-- Name: COLUMN crm_meeting.rrule; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.rrule IS 'Recurrent Rule';


--
-- Name: COLUMN crm_meeting.duration; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.duration IS 'Duration';


--
-- Name: COLUMN crm_meeting.organizer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.organizer IS 'Organizer';


--
-- Name: COLUMN crm_meeting.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.partner_id IS 'Partner';


--
-- Name: COLUMN crm_meeting.date_action_next; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.date_action_next IS 'Next Action';


--
-- Name: COLUMN crm_meeting.month_list; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.month_list IS 'Month';


--
-- Name: COLUMN crm_meeting.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.user_id IS 'Responsible';


--
-- Name: COLUMN crm_meeting.vtimezone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.vtimezone IS 'Timezone';


--
-- Name: COLUMN crm_meeting.tu; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.tu IS 'Tue';


--
-- Name: COLUMN crm_meeting.recurrency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.recurrency IS 'Recurrent';


--
-- Name: COLUMN crm_meeting.week_list; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.week_list IS 'Weekday';


--
-- Name: COLUMN crm_meeting.recurrent_uid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.recurrent_uid IS 'Recurrent ID';


--
-- Name: COLUMN crm_meeting.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.state IS 'State';


--
-- Name: COLUMN crm_meeting.base_calendar_url; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.base_calendar_url IS 'Caldav URL';


--
-- Name: COLUMN crm_meeting.show_as; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.show_as IS 'Show as';


--
-- Name: COLUMN crm_meeting.location; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.location IS 'Location';


--
-- Name: COLUMN crm_meeting.th; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.th IS 'Thu';


--
-- Name: COLUMN crm_meeting.exrule; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.exrule IS 'Exception Rule';


--
-- Name: COLUMN crm_meeting.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.active IS 'Active';


--
-- Name: COLUMN crm_meeting.day; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.day IS 'Date of month';


--
-- Name: COLUMN crm_meeting.exdate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.exdate IS 'Exception Date/Times';


--
-- Name: COLUMN crm_meeting.fr; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.fr IS 'Fri';


--
-- Name: COLUMN crm_meeting.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.description IS 'Description';


--
-- Name: COLUMN crm_meeting.end_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.end_date IS 'Repeat Until';


--
-- Name: COLUMN crm_meeting.section_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_meeting.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.date IS 'Date';


--
-- Name: COLUMN crm_meeting.byday; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.byday IS 'By day';


--
-- Name: COLUMN crm_meeting.categ_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.categ_id IS 'Meeting Type';


--
-- Name: COLUMN crm_meeting.class; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.class IS 'Mark as';


--
-- Name: COLUMN crm_meeting.opportunity_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.opportunity_id IS 'Opportunity';


--
-- Name: COLUMN crm_meeting.count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.count IS 'Repeat';


--
-- Name: COLUMN crm_meeting.end_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.end_type IS 'Recurrence termination';


--
-- Name: COLUMN crm_meeting.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.name IS 'Summary';


--
-- Name: COLUMN crm_meeting.date_deadline; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.date_deadline IS 'Deadline';


--
-- Name: COLUMN crm_meeting.mo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.mo IS 'Mon';


--
-- Name: COLUMN crm_meeting."interval"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting."interval" IS 'Repeat every';


--
-- Name: COLUMN crm_meeting.su; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.su IS 'Sun';


--
-- Name: COLUMN crm_meeting.rrule_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.rrule_type IS 'Recurrency';


--
-- Name: COLUMN crm_meeting.alarm_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.alarm_id IS 'Alarm';


--
-- Name: COLUMN crm_meeting.recurrent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.recurrent_id IS 'Recurrent ID date';


--
-- Name: COLUMN crm_meeting.phonecall_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.phonecall_id IS 'Phonecall';


--
-- Name: COLUMN crm_meeting.organizer_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.organizer_id IS 'Organizer';


--
-- Name: COLUMN crm_meeting.sa; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.sa IS 'Sat';


--
-- Name: COLUMN crm_meeting.email_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.email_from IS 'Email';


--
-- Name: COLUMN crm_meeting.select1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_meeting.select1 IS 'Option';


--
-- Name: crm_meeting_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_meeting_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_meeting_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_meeting_id_seq OWNED BY crm_meeting.id;


--
-- Name: crm_merge_opportunity; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_merge_opportunity (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: TABLE crm_merge_opportunity; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_merge_opportunity IS 'Merge two Opportunities';


--
-- Name: crm_merge_opportunity_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_merge_opportunity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_merge_opportunity_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_merge_opportunity_id_seq OWNED BY crm_merge_opportunity.id;


--
-- Name: crm_opportunity2phonecall; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_opportunity2phonecall (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    user_id integer,
    name character varying(64) NOT NULL,
    categ_id integer,
    section_id integer,
    note text,
    phone character varying(64),
    date timestamp without time zone,
    contact_name character varying(64),
    partner_id integer,
    action character varying NOT NULL
);


--
-- Name: TABLE crm_opportunity2phonecall; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_opportunity2phonecall IS 'Opportunity to Phonecall';


--
-- Name: COLUMN crm_opportunity2phonecall.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_opportunity2phonecall.user_id IS 'Assign To';


--
-- Name: COLUMN crm_opportunity2phonecall.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_opportunity2phonecall.name IS 'Call summary';


--
-- Name: COLUMN crm_opportunity2phonecall.categ_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_opportunity2phonecall.categ_id IS 'Category';


--
-- Name: COLUMN crm_opportunity2phonecall.section_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_opportunity2phonecall.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_opportunity2phonecall.note; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_opportunity2phonecall.note IS 'Note';


--
-- Name: COLUMN crm_opportunity2phonecall.phone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_opportunity2phonecall.phone IS 'Phone';


--
-- Name: COLUMN crm_opportunity2phonecall.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_opportunity2phonecall.date IS 'Date';


--
-- Name: COLUMN crm_opportunity2phonecall.contact_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_opportunity2phonecall.contact_name IS 'Contact';


--
-- Name: COLUMN crm_opportunity2phonecall.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_opportunity2phonecall.partner_id IS 'Partner';


--
-- Name: COLUMN crm_opportunity2phonecall.action; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_opportunity2phonecall.action IS 'Action';


--
-- Name: crm_opportunity2phonecall_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_opportunity2phonecall_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_opportunity2phonecall_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_opportunity2phonecall_id_seq OWNED BY crm_opportunity2phonecall.id;


--
-- Name: crm_partner2opportunity; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_partner2opportunity (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    planned_revenue numeric,
    partner_id integer,
    name character varying(64) NOT NULL,
    probability numeric
);


--
-- Name: TABLE crm_partner2opportunity; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_partner2opportunity IS 'Partner To Opportunity';


--
-- Name: COLUMN crm_partner2opportunity.planned_revenue; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_partner2opportunity.planned_revenue IS 'Expected Revenue';


--
-- Name: COLUMN crm_partner2opportunity.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_partner2opportunity.partner_id IS 'Partner';


--
-- Name: COLUMN crm_partner2opportunity.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_partner2opportunity.name IS 'Opportunity Name';


--
-- Name: COLUMN crm_partner2opportunity.probability; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_partner2opportunity.probability IS 'Success Probability';


--
-- Name: crm_partner2opportunity_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_partner2opportunity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_partner2opportunity_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_partner2opportunity_id_seq OWNED BY crm_partner2opportunity.id;


--
-- Name: crm_phonecall; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_phonecall (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    date_closed timestamp without time zone,
    description text,
    partner_address_id integer,
    date_action_last timestamp without time zone,
    section_id integer,
    duration double precision,
    partner_mobile character varying(32),
    email_from character varying(128),
    date timestamp without time zone,
    partner_id integer,
    partner_phone character varying(32),
    date_action_next timestamp without time zone,
    user_id integer,
    name character varying(64) NOT NULL,
    date_open timestamp without time zone,
    categ_id integer,
    company_id integer,
    priority character varying,
    state character varying(16),
    opportunity_id integer,
    active boolean
);


--
-- Name: TABLE crm_phonecall; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_phonecall IS 'crm.phonecall';


--
-- Name: COLUMN crm_phonecall.date_closed; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.date_closed IS 'Closed';


--
-- Name: COLUMN crm_phonecall.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.description IS 'Description';


--
-- Name: COLUMN crm_phonecall.partner_address_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.partner_address_id IS 'Partner Contact';


--
-- Name: COLUMN crm_phonecall.date_action_last; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.date_action_last IS 'Last Action';


--
-- Name: COLUMN crm_phonecall.section_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_phonecall.duration; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.duration IS 'Duration';


--
-- Name: COLUMN crm_phonecall.partner_mobile; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.partner_mobile IS 'Mobile';


--
-- Name: COLUMN crm_phonecall.email_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.email_from IS 'Email';


--
-- Name: COLUMN crm_phonecall.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.date IS 'Date';


--
-- Name: COLUMN crm_phonecall.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.partner_id IS 'Partner';


--
-- Name: COLUMN crm_phonecall.partner_phone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.partner_phone IS 'Phone';


--
-- Name: COLUMN crm_phonecall.date_action_next; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.date_action_next IS 'Next Action';


--
-- Name: COLUMN crm_phonecall.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.user_id IS 'Responsible';


--
-- Name: COLUMN crm_phonecall.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.name IS 'Call Summary';


--
-- Name: COLUMN crm_phonecall.date_open; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.date_open IS 'Opened';


--
-- Name: COLUMN crm_phonecall.categ_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.categ_id IS 'Category';


--
-- Name: COLUMN crm_phonecall.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.company_id IS 'Company';


--
-- Name: COLUMN crm_phonecall.priority; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.priority IS 'Priority';


--
-- Name: COLUMN crm_phonecall.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.state IS 'State';


--
-- Name: COLUMN crm_phonecall.opportunity_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.opportunity_id IS 'Lead/Opportunity';


--
-- Name: COLUMN crm_phonecall.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall.active IS 'Active';


--
-- Name: crm_phonecall2opportunity; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_phonecall2opportunity (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    planned_revenue numeric,
    partner_id integer,
    name character varying(64) NOT NULL,
    probability numeric
);


--
-- Name: TABLE crm_phonecall2opportunity; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_phonecall2opportunity IS 'Phonecall To Opportunity';


--
-- Name: COLUMN crm_phonecall2opportunity.planned_revenue; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2opportunity.planned_revenue IS 'Expected Revenue';


--
-- Name: COLUMN crm_phonecall2opportunity.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2opportunity.partner_id IS 'Partner';


--
-- Name: COLUMN crm_phonecall2opportunity.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2opportunity.name IS 'Opportunity Name';


--
-- Name: COLUMN crm_phonecall2opportunity.probability; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2opportunity.probability IS 'Success Probability';


--
-- Name: crm_phonecall2opportunity_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_phonecall2opportunity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_phonecall2opportunity_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_phonecall2opportunity_id_seq OWNED BY crm_phonecall2opportunity.id;


--
-- Name: crm_phonecall2partner; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_phonecall2partner (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    action character varying NOT NULL,
    partner_id integer
);


--
-- Name: TABLE crm_phonecall2partner; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_phonecall2partner IS 'Phonecall to Partner';


--
-- Name: COLUMN crm_phonecall2partner.action; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2partner.action IS 'Action';


--
-- Name: COLUMN crm_phonecall2partner.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2partner.partner_id IS 'Partner';


--
-- Name: crm_phonecall2partner_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_phonecall2partner_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_phonecall2partner_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_phonecall2partner_id_seq OWNED BY crm_phonecall2partner.id;


--
-- Name: crm_phonecall2phonecall; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_phonecall2phonecall (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    user_id integer,
    name character varying(64) NOT NULL,
    categ_id integer,
    section_id integer,
    note text,
    phone character varying(64),
    date timestamp without time zone,
    action character varying NOT NULL,
    contact_name character varying(64),
    partner_id integer
);


--
-- Name: TABLE crm_phonecall2phonecall; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_phonecall2phonecall IS 'Phonecall To Phonecall';


--
-- Name: COLUMN crm_phonecall2phonecall.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2phonecall.user_id IS 'Assign To';


--
-- Name: COLUMN crm_phonecall2phonecall.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2phonecall.name IS 'Call summary';


--
-- Name: COLUMN crm_phonecall2phonecall.categ_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2phonecall.categ_id IS 'Category';


--
-- Name: COLUMN crm_phonecall2phonecall.section_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2phonecall.section_id IS 'Sales Team';


--
-- Name: COLUMN crm_phonecall2phonecall.note; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2phonecall.note IS 'Note';


--
-- Name: COLUMN crm_phonecall2phonecall.phone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2phonecall.phone IS 'Phone';


--
-- Name: COLUMN crm_phonecall2phonecall.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2phonecall.date IS 'Date';


--
-- Name: COLUMN crm_phonecall2phonecall.action; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2phonecall.action IS 'Action';


--
-- Name: COLUMN crm_phonecall2phonecall.contact_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2phonecall.contact_name IS 'Contact';


--
-- Name: COLUMN crm_phonecall2phonecall.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_phonecall2phonecall.partner_id IS 'Partner';


--
-- Name: crm_phonecall2phonecall_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_phonecall2phonecall_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_phonecall2phonecall_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_phonecall2phonecall_id_seq OWNED BY crm_phonecall2phonecall.id;


--
-- Name: crm_phonecall_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_phonecall_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_phonecall_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_phonecall_id_seq OWNED BY crm_phonecall.id;


--
-- Name: crm_phonecall_report; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW crm_phonecall_report AS
    SELECT c.id, to_char(c.date, 'YYYY'::text) AS name, to_char(c.date, 'MM'::text) AS month, to_char(c.date, 'YYYY-MM-DD'::text) AS day, to_char(c.create_date, 'YYYY-MM-DD'::text) AS creation_date, to_char(c.date_open, 'YYYY-MM-DD'::text) AS opening_date, to_char(c.date_closed, 'YYYY-mm-dd'::text) AS date_closed, c.state, c.user_id, c.section_id, c.categ_id, c.partner_id, c.duration, c.company_id, c.priority, 1 AS nbr, date_trunc('day'::text, c.create_date) AS create_date, (date_part('epoch'::text, (c.date_closed - c.create_date)) / ((3600 * 24))::double precision) AS delay_close, (date_part('epoch'::text, (c.date_open - c.create_date)) / ((3600 * 24))::double precision) AS delay_open FROM crm_phonecall c;


--
-- Name: crm_segmentation; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_segmentation (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    description text,
    som_interval_max integer,
    categ_id integer NOT NULL,
    exclusif boolean,
    som_interval integer,
    state character varying,
    sales_purchase_active boolean,
    som_interval_default double precision,
    partner_id integer,
    som_interval_decrease double precision,
    name character varying(64) NOT NULL
);


--
-- Name: TABLE crm_segmentation; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_segmentation IS 'Partner Segmentation';


--
-- Name: COLUMN crm_segmentation.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation.description IS 'Description';


--
-- Name: COLUMN crm_segmentation.som_interval_max; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation.som_interval_max IS 'Max Interval';


--
-- Name: COLUMN crm_segmentation.categ_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation.categ_id IS 'Partner Category';


--
-- Name: COLUMN crm_segmentation.exclusif; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation.exclusif IS 'Exclusive';


--
-- Name: COLUMN crm_segmentation.som_interval; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation.som_interval IS 'Days per Periode';


--
-- Name: COLUMN crm_segmentation.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation.state IS 'Execution Status';


--
-- Name: COLUMN crm_segmentation.sales_purchase_active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation.sales_purchase_active IS 'Use The Sales Purchase Rules';


--
-- Name: COLUMN crm_segmentation.som_interval_default; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation.som_interval_default IS 'Default (0=None)';


--
-- Name: COLUMN crm_segmentation.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation.partner_id IS 'Max Partner ID processed';


--
-- Name: COLUMN crm_segmentation.som_interval_decrease; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation.som_interval_decrease IS 'Decrease (0>1)';


--
-- Name: COLUMN crm_segmentation.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation.name IS 'Name';


--
-- Name: crm_segmentation_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_segmentation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_segmentation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_segmentation_id_seq OWNED BY crm_segmentation.id;


--
-- Name: crm_segmentation_line; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE crm_segmentation_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    expr_name character varying(64) NOT NULL,
    name character varying(64) NOT NULL,
    expr_value double precision NOT NULL,
    operator character varying NOT NULL,
    segmentation_id integer,
    expr_operator character varying NOT NULL
);


--
-- Name: TABLE crm_segmentation_line; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE crm_segmentation_line IS 'Segmentation line';


--
-- Name: COLUMN crm_segmentation_line.expr_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation_line.expr_name IS 'Control Variable';


--
-- Name: COLUMN crm_segmentation_line.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation_line.name IS 'Rule Name';


--
-- Name: COLUMN crm_segmentation_line.expr_value; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation_line.expr_value IS 'Value';


--
-- Name: COLUMN crm_segmentation_line.operator; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation_line.operator IS 'Mandatory / Optional';


--
-- Name: COLUMN crm_segmentation_line.segmentation_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation_line.segmentation_id IS 'Segmentation';


--
-- Name: COLUMN crm_segmentation_line.expr_operator; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN crm_segmentation_line.expr_operator IS 'Operator';


--
-- Name: crm_segmentation_line_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE crm_segmentation_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: crm_segmentation_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE crm_segmentation_line_id_seq OWNED BY crm_segmentation_line.id;


--
-- Name: decimal_precision; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE decimal_precision (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    digits integer NOT NULL,
    name character varying(50) NOT NULL
);


--
-- Name: TABLE decimal_precision; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE decimal_precision IS 'decimal.precision';


--
-- Name: COLUMN decimal_precision.digits; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN decimal_precision.digits IS 'Digits';


--
-- Name: COLUMN decimal_precision.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN decimal_precision.name IS 'Usage';


--
-- Name: decimal_precision_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE decimal_precision_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: decimal_precision_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE decimal_precision_id_seq OWNED BY decimal_precision.id;


SET default_with_oids = true;

--
-- Name: email_message_send_attachment_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE email_message_send_attachment_rel (
    wizard_id integer NOT NULL,
    attachment_id integer NOT NULL
);


--
-- Name: TABLE email_message_send_attachment_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE email_message_send_attachment_rel IS 'RELATION BETWEEN mail_compose_message AND ir_attachment';


--
-- Name: event_attendee_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE event_attendee_rel (
    event_id integer NOT NULL,
    attendee_id integer NOT NULL
);


--
-- Name: TABLE event_attendee_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE event_attendee_rel IS 'RELATION BETWEEN calendar_event AND calendar_attendee';


SET default_with_oids = false;

--
-- Name: fetchmail_server; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE fetchmail_server (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    active boolean,
    "user" character varying(256),
    date timestamp without time zone,
    configuration text,
    port integer,
    password character varying(1024),
    name character varying(256) NOT NULL,
    script character varying(64),
    is_ssl boolean,
    object_id integer NOT NULL,
    server character varying(256),
    priority integer,
    attach boolean,
    state character varying,
    type character varying NOT NULL,
    original boolean,
    action_id integer
);


--
-- Name: TABLE fetchmail_server; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE fetchmail_server IS 'POP/IMAP Server';


--
-- Name: COLUMN fetchmail_server.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.active IS 'Active';


--
-- Name: COLUMN fetchmail_server."user"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server."user" IS 'Username';


--
-- Name: COLUMN fetchmail_server.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.date IS 'Last Fetch Date';


--
-- Name: COLUMN fetchmail_server.configuration; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.configuration IS 'Configuration';


--
-- Name: COLUMN fetchmail_server.port; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.port IS 'Port';


--
-- Name: COLUMN fetchmail_server.password; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.password IS 'Password';


--
-- Name: COLUMN fetchmail_server.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.name IS 'Name';


--
-- Name: COLUMN fetchmail_server.script; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.script IS 'Script';


--
-- Name: COLUMN fetchmail_server.is_ssl; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.is_ssl IS 'SSL/TLS';


--
-- Name: COLUMN fetchmail_server.object_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.object_id IS 'Create a New Record';


--
-- Name: COLUMN fetchmail_server.server; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.server IS 'Server Name';


--
-- Name: COLUMN fetchmail_server.priority; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.priority IS 'Server Priority';


--
-- Name: COLUMN fetchmail_server.attach; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.attach IS 'Keep Attachments';


--
-- Name: COLUMN fetchmail_server.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.state IS 'State';


--
-- Name: COLUMN fetchmail_server.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.type IS 'Server Type';


--
-- Name: COLUMN fetchmail_server.original; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.original IS 'Keep Original';


--
-- Name: COLUMN fetchmail_server.action_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN fetchmail_server.action_id IS 'Server Action';


--
-- Name: fetchmail_server_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE fetchmail_server_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: fetchmail_server_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE fetchmail_server_id_seq OWNED BY fetchmail_server.id;


--
-- Name: geography_columns; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW geography_columns AS
    SELECT current_database() AS f_table_catalog, n.nspname AS f_table_schema, c.relname AS f_table_name, a.attname AS f_geography_column, geography_typmod_dims(a.atttypmod) AS coord_dimension, geography_typmod_srid(a.atttypmod) AS srid, geography_typmod_type(a.atttypmod) AS type FROM pg_class c, pg_attribute a, pg_type t, pg_namespace n WHERE ((((((t.typname = 'geography'::name) AND (a.attisdropped = false)) AND (a.atttypid = t.oid)) AND (a.attrelid = c.oid)) AND (c.relnamespace = n.oid)) AND (NOT pg_is_other_temp_schema(c.relnamespace)));


SET default_with_oids = true;

--
-- Name: geometry_columns; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE geometry_columns (
    f_table_catalog character varying(256) NOT NULL,
    f_table_schema character varying(256) NOT NULL,
    f_table_name character varying(256) NOT NULL,
    f_geometry_column character varying(256) NOT NULL,
    coord_dimension integer NOT NULL,
    srid integer NOT NULL,
    type character varying(30) NOT NULL
);


--
-- Name: gite_label; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE gite_label (
    git_lab_pk integer NOT NULL,
    git_lab_type character varying
);


--
-- Name: gite_label_git_lab_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE gite_label_git_lab_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: gite_label_git_lab_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE gite_label_git_lab_pk_seq OWNED BY gite_label.git_lab_pk;


--
-- Name: gite_theme; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE gite_theme (
    git_them_pk integer NOT NULL,
    git_them_type character varying
);


--
-- Name: gite_theme_git_them_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE gite_theme_git_them_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: gite_theme_git_them_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE gite_theme_git_them_pk_seq OWNED BY gite_theme.git_them_pk;


--
-- Name: gw_callcenter; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE gw_callcenter (
    gwc_pk integer NOT NULL,
    gwc_nom_heb character varying,
    gwc_nom_contact character varying,
    gwc_prenom_contact character varying,
    gwc_adresse_heb character varying,
    gwc_cp_heb character varying,
    gwc_commune_heb character varying,
    gwc_localite_heb character varying,
    gwc_tel character varying,
    gwc_fax character varying,
    gwc_gsm character varying,
    gwc_type_heb character varying,
    gwc_nbre_heb character varying
);


--
-- Name: gw_callcenter_gwc_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE gw_callcenter_gwc_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: gw_callcenter_gwc_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE gw_callcenter_gwc_pk_seq OWNED BY gw_callcenter.gwc_pk;


--
-- Name: heb_blockhistory_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE heb_blockhistory_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


SET default_with_oids = false;

--
-- Name: heb_blocking_history; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE heb_blocking_history (
    heb_blockhistory_id integer NOT NULL,
    heb_blockhistory_blocked_dte date NOT NULL,
    heb_blockhistory_activated_dte date,
    heb_blockhistory_heb_pk integer NOT NULL,
    heb_blockhistory_days integer
);


--
-- Name: heb_tab_hote; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE heb_tab_hote (
    hebhot_heb_fk integer,
    hebhot_tabho_fk integer
);


--
-- Name: heb_tab_hote_maj; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE heb_tab_hote_maj (
    hebhot_maj_heb_fk integer,
    hebhot_maj_tabho_fk integer
);


SET default_with_oids = true;

--
-- Name: heb_theme_label; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE heb_theme_label (
    htl_pk integer NOT NULL,
    htl_heb_fk integer,
    htl_label_fk integer,
    htl_theme_fk integer
);


--
-- Name: heb_theme_label_htl_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE heb_theme_label_htl_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: heb_theme_label_htl_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE heb_theme_label_htl_pk_seq OWNED BY heb_theme_label.htl_pk;


--
-- Name: hebergement; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE hebergement (
    heb_pk integer NOT NULL,
    heb_code_gdw character varying,
    heb_nom character varying,
    heb_url character varying,
    heb_adresse character varying,
    heb_localite character varying,
    heb_code_cgt character varying,
    heb_cgt_cap_min integer DEFAULT 0,
    heb_cgt_cap_max integer DEFAULT 0,
    heb_cgt_nbre_chmbre integer DEFAULT 0,
    heb_etat character varying DEFAULT '1'::character varying,
    heb_site_public character varying,
    heb_groupe character varying,
    heb_gdw character varying,
    heb_nbre_epis character varying,
    heb_tarif_we_bs character varying,
    heb_tarif_we_ms character varying,
    heb_tarif_we_hs character varying,
    heb_tarif_sem_bs character varying,
    heb_tarif_sem_ms character varying,
    heb_tarif_sem_hs character varying,
    heb_tarif_garantie character varying,
    heb_tarif_divers character varying,
    heb_descriptif_fr character varying,
    heb_descriptif_uk character varying,
    heb_descriptif_nl character varying,
    heb_descriptif_de character varying,
    heb_descriptif_it character varying,
    heb_pointfort_fr character varying,
    heb_pointfort_uk character varying,
    heb_pointfort_nl character varying,
    heb_pointfort_de character varying,
    heb_pointfort_it character varying,
    heb_equipement_fr character varying,
    heb_equipement_uk character varying,
    heb_equipement_nl character varying,
    heb_equipement_de character varying,
    heb_equipement_it character varying,
    heb_photo character varying,
    heb_com_fk integer DEFAULT 0,
    heb_cgt_fk integer DEFAULT 0,
    heb_typeheb_fk integer DEFAULT 0,
    heb_pro_fk integer DEFAULT 0,
    heb_theme_fk integer DEFAULT 0,
    heb_label_fk integer DEFAULT 0,
    heb_tenis_distance character varying DEFAULT (-1),
    heb_nautisme_distance character varying,
    heb_sky_distance character varying,
    heb_rando_distance character varying,
    heb_piscine_distance character varying,
    heb_peche_distance character varying,
    heb_equitation_distance character varying,
    heb_velo_distance character varying,
    heb_vtt_distance character varying,
    heb_ravel_distance character varying,
    heb_taxe_montant character varying,
    heb_forfait_montant character varying,
    heb_tarif_we_3n character varying,
    heb_tarif_we_4n character varying,
    heb_tarif_semaine_fin_annee character varying,
    heb_lit_1p character varying,
    heb_lit_2p character varying,
    heb_lit_sup character varying,
    heb_lit_enf character varying,
    heb_distribution_fr character varying,
    heb_distribution_nl character varying,
    heb_distribution_it character varying,
    heb_distribution_uk character varying,
    heb_distribution_de character varying,
    heb_gare_distance character varying,
    heb_restaurant_distance character varying,
    heb_commerce_distance character varying,
    heb_tarif_chmbr_avec_dej_1p character varying,
    heb_tarif_chmbr_avec_dej_2p character varying,
    heb_tarif_chmbr_avec_dej_3p character varying,
    heb_tarif_chmbr_sans_dej_1p character varying,
    heb_tarif_chmbr_sans_dej_2p character varying,
    heb_tarif_chmbr_sans_dej_3p character varying,
    heb_tarif_chmbr_dej_1p character varying,
    heb_tarif_chmbr_dej_2p character varying,
    heb_tarif_chmbr_dej_3p character varying,
    heb_tarif_chmbr_table_hote_1p character varying,
    heb_tarif_chmbr_table_hote_2p character varying,
    heb_tarif_chmbr_table_hote_3p character varying,
    heb_tarif_chmbr_autre_1p character varying,
    heb_tarif_chmbr_autre_2p character varying,
    heb_tarif_chmbr_autre_3p character varying,
    heb_coordonnee character varying,
    heb_charge_fk integer,
    heb_gps_long double precision,
    heb_gps_lat double precision,
    heb_maison_tourisme_fk integer,
    heb_id character varying,
    heb_ecr_date_ouverture character varying,
    heb_ecr_remarque character varying DEFAULT '-'::character varying,
    heb_seminaire_vert_fr character varying,
    heb_seminaire_vert_nl character varying,
    heb_seminaire_vert_uk character varying,
    heb_seminaire_vert_de character varying,
    heb_seminaire_vert_it character varying,
    heb_calendrier_proprio character varying DEFAULT 'non actif'::character varying,
    heb_maj_info_etat character varying DEFAULT 'confirmé'::character varying,
    heb_calendrier_proprio_date_maj date,
    heb_date_creation timestamp without time zone,
    heb_date_modification timestamp without time zone DEFAULT now() NOT NULL,
    heb_employe_modification character varying,
    heb_employe_creation character varying,
    heb_location geometry,
    heb_groupement_pk integer,
    heb_tarif_charge character varying,
    heb_desactivation_alloch boolean DEFAULT false
);


SET default_with_oids = false;

--
-- Name: hebergement_app; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE hebergement_app (
    heb_app_pk integer NOT NULL,
    heb_app_sort_order integer,
    heb_app_heb_fk integer
);


--
-- Name: hebergement_app_heb_app_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE hebergement_app_heb_app_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: hebergement_app_heb_app_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE hebergement_app_heb_app_pk_seq OWNED BY hebergement_app.heb_app_pk;


--
-- Name: hebergement_heb_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE hebergement_heb_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: hebergement_heb_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE hebergement_heb_pk_seq OWNED BY hebergement.heb_pk;


--
-- Name: hebergement_maj; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE hebergement_maj (
    heb_maj_pk integer NOT NULL,
    heb_maj_hebpk integer,
    heb_maj_nom character varying,
    heb_maj_adresse character varying,
    heb_maj_localite character varying,
    heb_maj_tarif_we_bs character varying,
    heb_maj_tarif_we_ms character varying,
    heb_maj_tarif_we_hs character varying,
    heb_maj_tarif_sem_bs character varying,
    heb_maj_tarif_sem_ms character varying,
    heb_maj_tarif_sem_hs character varying,
    heb_maj_tarif_garantie character varying,
    heb_maj_tarif_divers character varying,
    heb_maj_descriptif_fr character varying,
    heb_maj_pointfort_fr character varying,
    heb_maj_taxe_montant character varying,
    heb_maj_forfait_montant character varying,
    heb_maj_tarif_we_3n character varying,
    heb_maj_tarif_we_4n character varying,
    heb_maj_tarif_semaine_fin_annee character varying,
    heb_maj_lit_1p character varying,
    heb_maj_lit_2p character varying,
    heb_maj_lit_sup character varying,
    heb_maj_lit_enf character varying,
    heb_maj_distribution_fr character varying,
    heb_maj_tarif_chmbr_avec_dej_1p character varying,
    heb_maj_tarif_chmbr_avec_dej_2p character varying,
    heb_maj_tarif_chmbr_avec_dej_3p character varying,
    heb_maj_tarif_chmbr_sans_dej_1p character varying,
    heb_maj_tarif_chmbr_sans_dej_2p character varying,
    heb_maj_tarif_chmbr_sans_dej_3p character varying,
    heb_maj_tarif_chmbr_table_hote_1p character varying,
    heb_maj_tarif_chmbr_table_hote_2p character varying,
    heb_maj_tarif_chmbr_table_hote_3p character varying,
    heb_maj_tarif_chmbr_autre_1p character varying,
    heb_maj_tarif_chmbr_autre_2p character varying,
    heb_maj_tarif_chmbr_autre_3p character varying,
    heb_maj_date_crea timestamp without time zone DEFAULT now() NOT NULL,
    heb_maj_charge_fk integer
);


--
-- Name: hebergement_maj_heb_maj_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE hebergement_maj_heb_maj_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: hebergement_maj_heb_maj_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE hebergement_maj_heb_maj_pk_seq OWNED BY hebergement_maj.heb_maj_pk;


SET default_with_oids = true;

--
-- Name: hebergement_tempo; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE hebergement_tempo (
    heb_pk integer NOT NULL,
    heb_code_gdw character varying,
    heb_nom character varying,
    heb_adresse character varying,
    heb_localite character varying,
    heb_code_cgt character varying,
    heb_cgt_cap_min integer DEFAULT 0,
    heb_cgt_cap_max integer DEFAULT 0,
    heb_cgt_nbre_chmbre integer DEFAULT 0,
    heb_cgt_forma character varying DEFAULT '0'::character varying,
    heb_cgt_forma_date character varying,
    heb_cgt_formp character varying DEFAULT '0'::character varying,
    heb_cgt_formp_date character varying,
    heb_code_bs character varying,
    heb_bs_centr_reserv character varying DEFAULT '0'::character varying,
    heb_bs_inscript_gdw character varying DEFAULT '0'::character varying,
    heb_panneau_date_envoi character varying,
    heb_date_retour_conv character varying,
    heb_etat character varying,
    heb_site_public character varying,
    heb_lien_site_prop character varying,
    heb_guide character varying,
    heb_groupe character varying,
    heb_gdw character varying,
    heb_nbre_epis character varying,
    heb_tenis character varying,
    heb_nautisme character varying,
    heb_sky character varying,
    heb_rando character varying,
    heb_piscine character varying,
    heb_peche character varying,
    heb_equitation character varying,
    heb_velo character varying,
    heb_vtt character varying,
    heb_ravel character varying,
    heb_animal character varying,
    heb_chmbre_tarif character varying,
    heb_chmbre_divers character varying,
    heb_tarif_we_bs character varying,
    heb_tarif_we_ms character varying,
    heb_tarif_we_hs character varying,
    heb_tarif_sem_bs character varying,
    heb_tarif_sem_ms character varying,
    heb_tarif_sem_hs character varying,
    heb_tarif_garantie character varying,
    heb_tarif_charge character varying,
    heb_tarif_divers character varying,
    heb_descriptif_fr character varying,
    heb_descriptif_uk character varying,
    heb_descriptif_nl character varying,
    heb_descriptif_de character varying,
    heb_descriptif_it character varying,
    heb_pointfort_fr character varying,
    heb_pointfort_uk character varying,
    heb_pointfort_nl character varying,
    heb_pointfort_de character varying,
    heb_pointfort_it character varying,
    heb_equipement_fr character varying,
    heb_equipement_uk character varying,
    heb_equipement_nl character varying,
    heb_equipement_de character varying,
    heb_equipement_it character varying,
    heb_comment_by_proprio character varying,
    heb_comment_date character varying,
    heb_choix_contact character varying,
    heb_photo character varying,
    heb_com_fk integer DEFAULT 0,
    heb_cgt_fk integer DEFAULT 0,
    heb_typeheb_fk integer DEFAULT 0,
    heb_pro_fk integer DEFAULT 0,
    heb_theme_fk integer DEFAULT 0,
    heb_label_fk integer DEFAULT 0
);


--
-- Name: hebergement_tempo_heb_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE hebergement_tempo_heb_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: hebergement_tempo_heb_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE hebergement_tempo_heb_pk_seq OWNED BY hebergement_tempo.heb_pk;


SET default_with_oids = false;

--
-- Name: hebergement_video; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE hebergement_video (
    heb_vid_pk integer NOT NULL,
    heb_vid_url character varying,
    heb_vid_date date,
    heb_vid_heb_fk integer
);


--
-- Name: hebergement_video_heb_vid_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE hebergement_video_heb_vid_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: hebergement_video_heb_vid_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE hebergement_video_heb_vid_pk_seq OWNED BY hebergement_video.heb_vid_pk;


--
-- Name: link_hebergement_metadata; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE link_hebergement_metadata (
    link_met_pk integer NOT NULL,
    heb_fk integer NOT NULL,
    metadata_fk integer NOT NULL,
    link_met_value boolean
);


--
-- Name: hebergement_view; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW hebergement_view AS
    SELECT hebergement.heb_pk, hebergement.heb_code_gdw, hebergement.heb_nom, hebergement.heb_adresse, hebergement.heb_localite, hebergement.heb_code_cgt, hebergement.heb_cgt_cap_min, hebergement.heb_cgt_cap_max, hebergement.heb_cgt_nbre_chmbre, hebergement.heb_etat, hebergement.heb_site_public, hebergement.heb_groupe, hebergement.heb_gdw, hebergement.heb_nbre_epis, hebergement.heb_tarif_we_bs, hebergement.heb_tarif_we_ms, hebergement.heb_tarif_we_hs, hebergement.heb_tarif_sem_bs, hebergement.heb_tarif_sem_ms, hebergement.heb_tarif_sem_hs, hebergement.heb_tarif_garantie, hebergement.heb_tarif_divers, hebergement.heb_descriptif_fr, hebergement.heb_descriptif_uk, hebergement.heb_descriptif_nl, hebergement.heb_descriptif_de, hebergement.heb_descriptif_it, hebergement.heb_pointfort_fr, hebergement.heb_pointfort_uk, hebergement.heb_pointfort_nl, hebergement.heb_pointfort_de, hebergement.heb_pointfort_it, hebergement.heb_equipement_fr, hebergement.heb_equipement_uk, hebergement.heb_equipement_nl, hebergement.heb_equipement_de, hebergement.heb_equipement_it, hebergement.heb_photo, hebergement.heb_com_fk, hebergement.heb_cgt_fk, hebergement.heb_typeheb_fk, hebergement.heb_pro_fk, hebergement.heb_theme_fk, hebergement.heb_label_fk, hebergement.heb_tenis_distance, hebergement.heb_nautisme_distance, hebergement.heb_sky_distance, hebergement.heb_rando_distance, hebergement.heb_piscine_distance, hebergement.heb_peche_distance, hebergement.heb_equitation_distance, hebergement.heb_velo_distance, hebergement.heb_vtt_distance, hebergement.heb_ravel_distance, hebergement.heb_taxe_montant, hebergement.heb_forfait_montant, hebergement.heb_tarif_we_3n, hebergement.heb_tarif_we_4n, hebergement.heb_tarif_semaine_fin_annee, hebergement.heb_lit_1p, hebergement.heb_lit_2p, hebergement.heb_lit_sup, hebergement.heb_lit_enf, hebergement.heb_distribution_fr, hebergement.heb_distribution_nl, hebergement.heb_distribution_it, hebergement.heb_distribution_uk, hebergement.heb_distribution_de, hebergement.heb_gare_distance, hebergement.heb_restaurant_distance, hebergement.heb_commerce_distance, hebergement.heb_tarif_chmbr_avec_dej_1p, hebergement.heb_tarif_chmbr_avec_dej_2p, hebergement.heb_tarif_chmbr_avec_dej_3p, hebergement.heb_tarif_chmbr_sans_dej_1p, hebergement.heb_tarif_chmbr_sans_dej_2p, hebergement.heb_tarif_chmbr_sans_dej_3p, hebergement.heb_tarif_chmbr_dej_1p, hebergement.heb_tarif_chmbr_dej_2p, hebergement.heb_tarif_chmbr_dej_3p, hebergement.heb_tarif_chmbr_table_hote_1p, hebergement.heb_tarif_chmbr_table_hote_2p, hebergement.heb_tarif_chmbr_table_hote_3p, hebergement.heb_tarif_chmbr_autre_1p, hebergement.heb_tarif_chmbr_autre_2p, hebergement.heb_tarif_chmbr_autre_3p, hebergement.heb_coordonnee, hebergement.heb_charge_fk, hebergement.heb_gps_long, hebergement.heb_gps_lat, hebergement.heb_maison_tourisme_fk, hebergement.heb_id, hebergement.heb_ecr_date_ouverture, hebergement.heb_ecr_remarque, hebergement.heb_seminaire_vert_fr, hebergement.heb_seminaire_vert_nl, hebergement.heb_seminaire_vert_uk, hebergement.heb_seminaire_vert_de, hebergement.heb_seminaire_vert_it, hebergement.heb_calendrier_proprio, hebergement.heb_maj_info_etat, hebergement.heb_calendrier_proprio_date_maj, hebergement.heb_date_creation, hebergement.heb_date_modification, hebergement.heb_employe_modification, hebergement.heb_employe_creation, hebergement.heb_location, hebergement.heb_groupement_pk, hebergement.heb_tarif_charge, hebergement.heb_desactivation_alloch, CASE heb_tenis.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_tenis, CASE heb_nautisme.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_nautisme, CASE heb_sky.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_sky, CASE heb_rando.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_rando, CASE heb_piscine.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_piscine, CASE heb_peche.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_peche, CASE heb_equitation.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_equitation, CASE heb_velo.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_velo, CASE heb_vtt.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_vtt, CASE heb_ravel.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_ravel, CASE heb_animal.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_animal, CASE heb_fumeur.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_fumeur, CASE heb_confort_tv.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_tv, CASE heb_confort_feu_ouvert.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_feu_ouvert, CASE heb_confort_lave_vaiselle.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_lave_vaiselle, CASE heb_confort_micro_onde.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_micro_onde, CASE heb_confort_lave_linge.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_lave_linge, CASE heb_confort_seche_linge.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_seche_linge, CASE heb_confort_internet.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_internet, CASE heb_confort_terrasse.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_terrasse, CASE heb_confort_jardin.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_jardin, CASE heb_confort_sauna.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_sauna, CASE heb_confort_jacuzzi.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_jacuzzi, CASE heb_seminaire_vert.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_seminaire_vert, CASE heb_gid_bebe_tendresse.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_gid_bebe_tendresse, CASE heb_gid_access_tous.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_gid_access_tous, CASE heb_gid_antiallergique.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_gid_antiallergique, CASE heb_gid_beau_jardin.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_gid_beau_jardin, CASE heb_gid_eco_gite.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_gid_eco_gite, CASE heb_gid_activite_nature.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_gid_activite_nature, CASE heb_gid_panda.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_gid_panda, CASE heb_gid_theme_equestre.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_gid_theme_equestre, CASE heb_gid_peche.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_gid_peche, CASE heb_gid_patrimoine.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_gid_patrimoine, CASE heb_confort_congelateur.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_congelateur, CASE heb_commerce.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_commerce, CASE heb_restaurant.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_restaurant, CASE heb_gare.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_gare, CASE heb_confort_projecteur.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_projecteur, CASE heb_confort_flipchart.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_flipchart, CASE heb_confort_ecran.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_confort_ecran, CASE heb_tabhot_gourmand.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_tabhot_gourmand, CASE heb_tabhot_repas_familial.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_tabhot_repas_familial, CASE heb_tabhot_gastronomique.link_met_value WHEN true THEN 'oui'::text ELSE 'non'::text END AS heb_tabhot_gastronomique FROM ((((((((((((((((((((((((((((((((((((((((((((hebergement LEFT JOIN link_hebergement_metadata heb_tenis ON (((heb_tenis.heb_fk = hebergement.heb_pk) AND (heb_tenis.metadata_fk = 1)))) LEFT JOIN link_hebergement_metadata heb_nautisme ON (((heb_nautisme.heb_fk = hebergement.heb_pk) AND (heb_nautisme.metadata_fk = 2)))) LEFT JOIN link_hebergement_metadata heb_sky ON (((heb_sky.heb_fk = hebergement.heb_pk) AND (heb_sky.metadata_fk = 3)))) LEFT JOIN link_hebergement_metadata heb_rando ON (((heb_rando.heb_fk = hebergement.heb_pk) AND (heb_rando.metadata_fk = 4)))) LEFT JOIN link_hebergement_metadata heb_piscine ON (((heb_piscine.heb_fk = hebergement.heb_pk) AND (heb_piscine.metadata_fk = 5)))) LEFT JOIN link_hebergement_metadata heb_peche ON (((heb_peche.heb_fk = hebergement.heb_pk) AND (heb_peche.metadata_fk = 6)))) LEFT JOIN link_hebergement_metadata heb_equitation ON (((heb_equitation.heb_fk = hebergement.heb_pk) AND (heb_equitation.metadata_fk = 7)))) LEFT JOIN link_hebergement_metadata heb_velo ON (((heb_velo.heb_fk = hebergement.heb_pk) AND (heb_velo.metadata_fk = 8)))) LEFT JOIN link_hebergement_metadata heb_vtt ON (((heb_vtt.heb_fk = hebergement.heb_pk) AND (heb_vtt.metadata_fk = 9)))) LEFT JOIN link_hebergement_metadata heb_ravel ON (((heb_ravel.heb_fk = hebergement.heb_pk) AND (heb_ravel.metadata_fk = 10)))) LEFT JOIN link_hebergement_metadata heb_animal ON (((heb_animal.heb_fk = hebergement.heb_pk) AND (heb_animal.metadata_fk = 11)))) LEFT JOIN link_hebergement_metadata heb_fumeur ON (((heb_fumeur.heb_fk = hebergement.heb_pk) AND (heb_fumeur.metadata_fk = 12)))) LEFT JOIN link_hebergement_metadata heb_confort_tv ON (((heb_confort_tv.heb_fk = hebergement.heb_pk) AND (heb_confort_tv.metadata_fk = 13)))) LEFT JOIN link_hebergement_metadata heb_confort_feu_ouvert ON (((heb_confort_feu_ouvert.heb_fk = hebergement.heb_pk) AND (heb_confort_feu_ouvert.metadata_fk = 14)))) LEFT JOIN link_hebergement_metadata heb_confort_lave_vaiselle ON (((heb_confort_lave_vaiselle.heb_fk = hebergement.heb_pk) AND (heb_confort_lave_vaiselle.metadata_fk = 15)))) LEFT JOIN link_hebergement_metadata heb_confort_micro_onde ON (((heb_confort_micro_onde.heb_fk = hebergement.heb_pk) AND (heb_confort_micro_onde.metadata_fk = 16)))) LEFT JOIN link_hebergement_metadata heb_confort_lave_linge ON (((heb_confort_lave_linge.heb_fk = hebergement.heb_pk) AND (heb_confort_lave_linge.metadata_fk = 17)))) LEFT JOIN link_hebergement_metadata heb_confort_seche_linge ON (((heb_confort_seche_linge.heb_fk = hebergement.heb_pk) AND (heb_confort_seche_linge.metadata_fk = 18)))) LEFT JOIN link_hebergement_metadata heb_confort_internet ON (((heb_confort_internet.heb_fk = hebergement.heb_pk) AND (heb_confort_internet.metadata_fk = 19)))) LEFT JOIN link_hebergement_metadata heb_confort_terrasse ON (((heb_confort_terrasse.heb_fk = hebergement.heb_pk) AND (heb_confort_terrasse.metadata_fk = 20)))) LEFT JOIN link_hebergement_metadata heb_confort_jardin ON (((heb_confort_jardin.heb_fk = hebergement.heb_pk) AND (heb_confort_jardin.metadata_fk = 21)))) LEFT JOIN link_hebergement_metadata heb_confort_sauna ON (((heb_confort_sauna.heb_fk = hebergement.heb_pk) AND (heb_confort_sauna.metadata_fk = 22)))) LEFT JOIN link_hebergement_metadata heb_confort_jacuzzi ON (((heb_confort_jacuzzi.heb_fk = hebergement.heb_pk) AND (heb_confort_jacuzzi.metadata_fk = 23)))) LEFT JOIN link_hebergement_metadata heb_seminaire_vert ON (((heb_seminaire_vert.heb_fk = hebergement.heb_pk) AND (heb_seminaire_vert.metadata_fk = 24)))) LEFT JOIN link_hebergement_metadata heb_gid_bebe_tendresse ON (((heb_gid_bebe_tendresse.heb_fk = hebergement.heb_pk) AND (heb_gid_bebe_tendresse.metadata_fk = 25)))) LEFT JOIN link_hebergement_metadata heb_gid_access_tous ON (((heb_gid_access_tous.heb_fk = hebergement.heb_pk) AND (heb_gid_access_tous.metadata_fk = 26)))) LEFT JOIN link_hebergement_metadata heb_gid_antiallergique ON (((heb_gid_antiallergique.heb_fk = hebergement.heb_pk) AND (heb_gid_antiallergique.metadata_fk = 27)))) LEFT JOIN link_hebergement_metadata heb_gid_beau_jardin ON (((heb_gid_beau_jardin.heb_fk = hebergement.heb_pk) AND (heb_gid_beau_jardin.metadata_fk = 28)))) LEFT JOIN link_hebergement_metadata heb_gid_eco_gite ON (((heb_gid_eco_gite.heb_fk = hebergement.heb_pk) AND (heb_gid_eco_gite.metadata_fk = 29)))) LEFT JOIN link_hebergement_metadata heb_gid_activite_nature ON (((heb_gid_activite_nature.heb_fk = hebergement.heb_pk) AND (heb_gid_activite_nature.metadata_fk = 30)))) LEFT JOIN link_hebergement_metadata heb_gid_panda ON (((heb_gid_panda.heb_fk = hebergement.heb_pk) AND (heb_gid_panda.metadata_fk = 31)))) LEFT JOIN link_hebergement_metadata heb_gid_theme_equestre ON (((heb_gid_theme_equestre.heb_fk = hebergement.heb_pk) AND (heb_gid_theme_equestre.metadata_fk = 32)))) LEFT JOIN link_hebergement_metadata heb_gid_peche ON (((heb_gid_peche.heb_fk = hebergement.heb_pk) AND (heb_gid_peche.metadata_fk = 33)))) LEFT JOIN link_hebergement_metadata heb_gid_patrimoine ON (((heb_gid_patrimoine.heb_fk = hebergement.heb_pk) AND (heb_gid_patrimoine.metadata_fk = 34)))) LEFT JOIN link_hebergement_metadata heb_confort_congelateur ON (((heb_confort_congelateur.heb_fk = hebergement.heb_pk) AND (heb_confort_congelateur.metadata_fk = 35)))) LEFT JOIN link_hebergement_metadata heb_commerce ON (((heb_commerce.heb_fk = hebergement.heb_pk) AND (heb_commerce.metadata_fk = 36)))) LEFT JOIN link_hebergement_metadata heb_restaurant ON (((heb_restaurant.heb_fk = hebergement.heb_pk) AND (heb_restaurant.metadata_fk = 37)))) LEFT JOIN link_hebergement_metadata heb_gare ON (((heb_gare.heb_fk = hebergement.heb_pk) AND (heb_gare.metadata_fk = 38)))) LEFT JOIN link_hebergement_metadata heb_confort_projecteur ON (((heb_confort_projecteur.heb_fk = hebergement.heb_pk) AND (heb_confort_projecteur.metadata_fk = 39)))) LEFT JOIN link_hebergement_metadata heb_confort_flipchart ON (((heb_confort_flipchart.heb_fk = hebergement.heb_pk) AND (heb_confort_flipchart.metadata_fk = 40)))) LEFT JOIN link_hebergement_metadata heb_confort_ecran ON (((heb_confort_ecran.heb_fk = hebergement.heb_pk) AND (heb_confort_ecran.metadata_fk = 41)))) LEFT JOIN link_hebergement_metadata heb_tabhot_gourmand ON (((heb_tabhot_gourmand.heb_fk = hebergement.heb_pk) AND (heb_tabhot_gourmand.metadata_fk = 42)))) LEFT JOIN link_hebergement_metadata heb_tabhot_repas_familial ON (((heb_tabhot_repas_familial.heb_fk = hebergement.heb_pk) AND (heb_tabhot_repas_familial.metadata_fk = 43)))) LEFT JOIN link_hebergement_metadata heb_tabhot_gastronomique ON (((heb_tabhot_gastronomique.heb_fk = hebergement.heb_pk) AND (heb_tabhot_gastronomique.metadata_fk = 44))));


SET default_with_oids = true;

--
-- Name: info_pratique; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE info_pratique (
    infoprat_pk integer NOT NULL,
    infoprat_nom character varying,
    infoprat_adresse character varying,
    infoprat_url character varying,
    infoprat_gps_long double precision DEFAULT 0.0,
    infoprat_gps_lat double precision DEFAULT 0.0,
    infoprat_commune_fk integer,
    infoprat_type_infoprat_fk integer,
    infoprat_localite character varying,
    infoprat_location geometry
);


--
-- Name: info_pratique_infoprat_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE info_pratique_infoprat_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: info_pratique_infoprat_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE info_pratique_infoprat_pk_seq OWNED BY info_pratique.infoprat_pk;


--
-- Name: info_touristique; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE info_touristique (
    infotour_pk integer NOT NULL,
    infotour_nom character varying,
    infotour_adresse character varying,
    infotour_url character varying,
    infotour_gps_long double precision DEFAULT 0.0,
    infotour_gps_lat double precision DEFAULT 0.0,
    infotour_commune_fk integer,
    infotour_type_infotour_fk integer,
    infotour_localite character varying,
    infotour_location geometry
);


--
-- Name: info_touristique_infotour_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE info_touristique_infotour_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: info_touristique_infotour_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE info_touristique_infotour_pk_seq OWNED BY info_touristique.infotour_pk;


--
-- Name: invite_contact_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE invite_contact_rel (
    invite_id integer NOT NULL,
    contact_id integer NOT NULL
);


--
-- Name: TABLE invite_contact_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE invite_contact_rel IS 'RELATION BETWEEN base_calendar_invite_attendee AND res_partner_address';


--
-- Name: invite_user_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE invite_user_rel (
    invite_id integer NOT NULL,
    user_id integer NOT NULL
);


--
-- Name: TABLE invite_user_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE invite_user_rel IS 'RELATION BETWEEN base_calendar_invite_attendee AND res_users';


SET default_with_oids = false;

--
-- Name: ir_actions; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_actions (
    id integer NOT NULL,
    name character varying(64) DEFAULT ''::character varying NOT NULL,
    type character varying(32) DEFAULT 'window'::character varying NOT NULL,
    usage character varying(32) DEFAULT NULL::character varying,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: ir_act_client; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_act_client (
    params_store bytea,
    tag character varying(64) NOT NULL
)
INHERITS (ir_actions);


--
-- Name: COLUMN ir_act_client.params_store; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_client.params_store IS 'Params storage';


--
-- Name: COLUMN ir_act_client.tag; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_client.tag IS 'Client action tag';


--
-- Name: ir_act_report_custom; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_act_report_custom (
    report_id integer
)
INHERITS (ir_actions);


--
-- Name: ir_act_report_xml; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_act_report_xml (
    model character varying(64) NOT NULL,
    report_name character varying(64) NOT NULL,
    report_xsl character varying(256),
    report_xml character varying(256),
    auto boolean DEFAULT true,
    report_rml_content_data bytea,
    header boolean,
    report_type character varying(32) NOT NULL,
    report_file character varying(256),
    multi boolean,
    report_rml character varying(256),
    attachment character varying(128),
    report_sxw_content_data bytea,
    attachment_use boolean
)
INHERITS (ir_actions);


--
-- Name: COLUMN ir_act_report_xml.report_rml_content_data; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_report_xml.report_rml_content_data IS 'RML content';


--
-- Name: COLUMN ir_act_report_xml.header; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_report_xml.header IS 'Add RML header';


--
-- Name: COLUMN ir_act_report_xml.report_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_report_xml.report_type IS 'Report Type';


--
-- Name: COLUMN ir_act_report_xml.report_file; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_report_xml.report_file IS 'Report file';


--
-- Name: COLUMN ir_act_report_xml.multi; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_report_xml.multi IS 'On multiple doc.';


--
-- Name: COLUMN ir_act_report_xml.report_rml; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_report_xml.report_rml IS 'Main report file path';


--
-- Name: COLUMN ir_act_report_xml.attachment; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_report_xml.attachment IS 'Save As Attachment Prefix';


--
-- Name: COLUMN ir_act_report_xml.report_sxw_content_data; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_report_xml.report_sxw_content_data IS 'SXW content';


--
-- Name: COLUMN ir_act_report_xml.attachment_use; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_report_xml.attachment_use IS 'Reload from Attachment';


--
-- Name: ir_act_server; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_act_server (
    model_id integer NOT NULL,
    code text,
    sequence integer,
    copy_object character varying(256),
    write_id character varying(256),
    srcmodel_id integer,
    message text,
    trigger_name character varying(128),
    condition character varying(256) NOT NULL,
    subject character varying(1024),
    loop_action integer,
    trigger_obj_id integer,
    mobile character varying(512),
    expression character varying(512),
    sms character varying(160),
    wkf_model_id integer,
    state character varying(32) NOT NULL,
    record_id integer,
    email character varying(512),
    action_id integer
)
INHERITS (ir_actions);


--
-- Name: COLUMN ir_act_server.model_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.model_id IS 'Object';


--
-- Name: COLUMN ir_act_server.code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.code IS 'Python Code';


--
-- Name: COLUMN ir_act_server.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.sequence IS 'Sequence';


--
-- Name: COLUMN ir_act_server.copy_object; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.copy_object IS 'Copy Of';


--
-- Name: COLUMN ir_act_server.write_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.write_id IS 'Write Id';


--
-- Name: COLUMN ir_act_server.srcmodel_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.srcmodel_id IS 'Model';


--
-- Name: COLUMN ir_act_server.message; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.message IS 'Message';


--
-- Name: COLUMN ir_act_server.trigger_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.trigger_name IS 'Trigger Signal';


--
-- Name: COLUMN ir_act_server.condition; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.condition IS 'Condition';


--
-- Name: COLUMN ir_act_server.subject; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.subject IS 'Subject';


--
-- Name: COLUMN ir_act_server.loop_action; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.loop_action IS 'Loop Action';


--
-- Name: COLUMN ir_act_server.trigger_obj_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.trigger_obj_id IS 'Relation Field';


--
-- Name: COLUMN ir_act_server.mobile; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.mobile IS 'Mobile No';


--
-- Name: COLUMN ir_act_server.expression; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.expression IS 'Loop Expression';


--
-- Name: COLUMN ir_act_server.sms; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.sms IS 'SMS';


--
-- Name: COLUMN ir_act_server.wkf_model_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.wkf_model_id IS 'Target Object';


--
-- Name: COLUMN ir_act_server.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.state IS 'Action Type';


--
-- Name: COLUMN ir_act_server.record_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.record_id IS 'Create Id';


--
-- Name: COLUMN ir_act_server.email; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.email IS 'Email Address';


--
-- Name: COLUMN ir_act_server.action_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_server.action_id IS 'Client Action';


--
-- Name: ir_act_url; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_act_url (
    url text NOT NULL,
    target character varying(64) NOT NULL
)
INHERITS (ir_actions);


--
-- Name: ir_act_window; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_act_window (
    view_id integer,
    res_model character varying(64) NOT NULL,
    view_type character varying(16) NOT NULL,
    domain character varying(250),
    help text,
    search_view_id integer,
    auto_refresh integer,
    view_mode character varying(250) NOT NULL,
    multi boolean,
    target character varying,
    auto_search boolean,
    filter boolean,
    src_model character varying(64),
    "limit" integer,
    context character varying(250) NOT NULL
)
INHERITS (ir_actions);


--
-- Name: COLUMN ir_act_window.help; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window.help IS 'Action description';


--
-- Name: COLUMN ir_act_window.search_view_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window.search_view_id IS 'Search View Ref.';


--
-- Name: COLUMN ir_act_window.auto_refresh; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window.auto_refresh IS 'Auto-Refresh';


--
-- Name: COLUMN ir_act_window.view_mode; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window.view_mode IS 'View Mode';


--
-- Name: COLUMN ir_act_window.multi; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window.multi IS 'Action on Multiple Doc.';


--
-- Name: COLUMN ir_act_window.target; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window.target IS 'Target Window';


--
-- Name: COLUMN ir_act_window.auto_search; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window.auto_search IS 'Auto Search';


--
-- Name: COLUMN ir_act_window.filter; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window.filter IS 'Filter';


--
-- Name: COLUMN ir_act_window.src_model; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window.src_model IS 'Source Object';


--
-- Name: COLUMN ir_act_window."limit"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window."limit" IS 'Limit';


--
-- Name: COLUMN ir_act_window.context; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window.context IS 'Context Value';


SET default_with_oids = true;

--
-- Name: ir_act_window_group_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_act_window_group_rel (
    act_id integer NOT NULL,
    gid integer NOT NULL
);


--
-- Name: TABLE ir_act_window_group_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_act_window_group_rel IS 'RELATION BETWEEN ir_act_window AND res_groups';


SET default_with_oids = false;

--
-- Name: ir_act_window_view; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_act_window_view (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    act_window_id integer,
    multi boolean,
    view_mode character varying NOT NULL,
    view_id integer,
    sequence integer
);


--
-- Name: TABLE ir_act_window_view; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_act_window_view IS 'ir.actions.act_window.view';


--
-- Name: COLUMN ir_act_window_view.act_window_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window_view.act_window_id IS 'Action';


--
-- Name: COLUMN ir_act_window_view.multi; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window_view.multi IS 'On Multiple Doc.';


--
-- Name: COLUMN ir_act_window_view.view_mode; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window_view.view_mode IS 'View Type';


--
-- Name: COLUMN ir_act_window_view.view_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window_view.view_id IS 'View';


--
-- Name: COLUMN ir_act_window_view.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_window_view.sequence IS 'Sequence';


--
-- Name: ir_act_window_view_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_act_window_view_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_act_window_view_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_act_window_view_id_seq OWNED BY ir_act_window_view.id;


--
-- Name: ir_act_wizard; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_act_wizard (
    wiz_name character varying(64) NOT NULL,
    multi boolean,
    model character varying(64)
)
INHERITS (ir_actions);


--
-- Name: COLUMN ir_act_wizard.multi; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_wizard.multi IS 'Action on Multiple Doc.';


--
-- Name: COLUMN ir_act_wizard.model; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_act_wizard.model IS 'Object';


--
-- Name: ir_actions_configuration_wizard; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_actions_configuration_wizard (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    note text
);


--
-- Name: TABLE ir_actions_configuration_wizard; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_actions_configuration_wizard IS 'ir.actions.configuration.wizard';


--
-- Name: COLUMN ir_actions_configuration_wizard.note; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_actions_configuration_wizard.note IS 'Next Wizard';


--
-- Name: ir_actions_configuration_wizard_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_actions_configuration_wizard_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_actions_configuration_wizard_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_actions_configuration_wizard_id_seq OWNED BY ir_actions_configuration_wizard.id;


--
-- Name: ir_actions_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_actions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_actions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_actions_id_seq OWNED BY ir_actions.id;


--
-- Name: ir_actions_todo; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_actions_todo (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64),
    sequence integer,
    note text,
    state character varying NOT NULL,
    category_id integer,
    type character varying NOT NULL,
    action_id integer NOT NULL
);


--
-- Name: TABLE ir_actions_todo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_actions_todo IS 'Configuration Wizards';


--
-- Name: COLUMN ir_actions_todo.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_actions_todo.name IS 'Name';


--
-- Name: COLUMN ir_actions_todo.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_actions_todo.sequence IS 'Sequence';


--
-- Name: COLUMN ir_actions_todo.note; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_actions_todo.note IS 'Text';


--
-- Name: COLUMN ir_actions_todo.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_actions_todo.state IS 'State';


--
-- Name: COLUMN ir_actions_todo.category_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_actions_todo.category_id IS 'Category';


--
-- Name: COLUMN ir_actions_todo.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_actions_todo.type IS 'Type';


--
-- Name: COLUMN ir_actions_todo.action_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_actions_todo.action_id IS 'Action';


--
-- Name: ir_actions_todo_category; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_actions_todo_category (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64) NOT NULL,
    sequence integer
);


--
-- Name: TABLE ir_actions_todo_category; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_actions_todo_category IS 'Configuration Wizard Category';


--
-- Name: COLUMN ir_actions_todo_category.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_actions_todo_category.name IS 'Name';


--
-- Name: COLUMN ir_actions_todo_category.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_actions_todo_category.sequence IS 'Sequence';


--
-- Name: ir_actions_todo_category_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_actions_todo_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_actions_todo_category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_actions_todo_category_id_seq OWNED BY ir_actions_todo_category.id;


--
-- Name: ir_actions_todo_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_actions_todo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_actions_todo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_actions_todo_id_seq OWNED BY ir_actions_todo.id;


--
-- Name: ir_attachment; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_attachment (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    description text,
    url character varying(512),
    res_model character varying(64),
    company_id integer,
    res_name character varying(128),
    datas_fname character varying(256),
    type character varying NOT NULL,
    res_id integer,
    datas bytea,
    name character varying(256) NOT NULL
);


--
-- Name: TABLE ir_attachment; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_attachment IS 'ir.attachment';


--
-- Name: COLUMN ir_attachment.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_attachment.description IS 'Description';


--
-- Name: COLUMN ir_attachment.url; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_attachment.url IS 'Url';


--
-- Name: COLUMN ir_attachment.res_model; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_attachment.res_model IS 'Resource Object';


--
-- Name: COLUMN ir_attachment.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_attachment.company_id IS 'Company';


--
-- Name: COLUMN ir_attachment.res_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_attachment.res_name IS 'Resource Name';


--
-- Name: COLUMN ir_attachment.datas_fname; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_attachment.datas_fname IS 'Filename';


--
-- Name: COLUMN ir_attachment.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_attachment.type IS 'Type';


--
-- Name: COLUMN ir_attachment.res_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_attachment.res_id IS 'Resource ID';


--
-- Name: COLUMN ir_attachment.datas; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_attachment.datas IS 'Data';


--
-- Name: COLUMN ir_attachment.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_attachment.name IS 'Attachment Name';


--
-- Name: ir_attachment_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_attachment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_attachment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_attachment_id_seq OWNED BY ir_attachment.id;


--
-- Name: ir_config_parameter; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_config_parameter (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    key character varying(256) NOT NULL,
    value text NOT NULL
);


--
-- Name: TABLE ir_config_parameter; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_config_parameter IS 'ir.config_parameter';


--
-- Name: COLUMN ir_config_parameter.key; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_config_parameter.key IS 'Key';


--
-- Name: COLUMN ir_config_parameter.value; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_config_parameter.value IS 'Value';


--
-- Name: ir_config_parameter_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_config_parameter_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_config_parameter_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_config_parameter_id_seq OWNED BY ir_config_parameter.id;


--
-- Name: ir_cron; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_cron (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    function character varying(64),
    interval_type character varying,
    user_id integer NOT NULL,
    name character varying(60) NOT NULL,
    args text,
    numbercall integer,
    nextcall timestamp without time zone NOT NULL,
    priority integer,
    doall boolean,
    active boolean,
    interval_number integer,
    model character varying(64)
);


--
-- Name: TABLE ir_cron; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_cron IS 'ir.cron';


--
-- Name: COLUMN ir_cron.function; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_cron.function IS 'Method';


--
-- Name: COLUMN ir_cron.interval_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_cron.interval_type IS 'Interval Unit';


--
-- Name: COLUMN ir_cron.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_cron.user_id IS 'User';


--
-- Name: COLUMN ir_cron.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_cron.name IS 'Name';


--
-- Name: COLUMN ir_cron.args; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_cron.args IS 'Arguments';


--
-- Name: COLUMN ir_cron.numbercall; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_cron.numbercall IS 'Number of Calls';


--
-- Name: COLUMN ir_cron.nextcall; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_cron.nextcall IS 'Next Execution Date';


--
-- Name: COLUMN ir_cron.priority; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_cron.priority IS 'Priority';


--
-- Name: COLUMN ir_cron.doall; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_cron.doall IS 'Repeat Missed';


--
-- Name: COLUMN ir_cron.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_cron.active IS 'Active';


--
-- Name: COLUMN ir_cron.interval_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_cron.interval_number IS 'Interval Number';


--
-- Name: COLUMN ir_cron.model; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_cron.model IS 'Object';


--
-- Name: ir_cron_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_cron_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_cron_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_cron_id_seq OWNED BY ir_cron.id;


--
-- Name: ir_default; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_default (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    uid integer,
    ref_table character varying(64),
    company_id integer,
    value character varying(64),
    ref_id integer,
    field_tbl character varying(64),
    field_name character varying(64),
    page character varying(64)
);


--
-- Name: TABLE ir_default; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_default IS 'ir.default';


--
-- Name: COLUMN ir_default.uid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_default.uid IS 'Users';


--
-- Name: COLUMN ir_default.ref_table; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_default.ref_table IS 'Table Ref.';


--
-- Name: COLUMN ir_default.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_default.company_id IS 'Company';


--
-- Name: COLUMN ir_default.value; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_default.value IS 'Default Value';


--
-- Name: COLUMN ir_default.ref_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_default.ref_id IS 'ID Ref.';


--
-- Name: COLUMN ir_default.field_tbl; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_default.field_tbl IS 'Object';


--
-- Name: COLUMN ir_default.field_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_default.field_name IS 'Object Field';


--
-- Name: COLUMN ir_default.page; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_default.page IS 'View';


--
-- Name: ir_default_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_default_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_default_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_default_id_seq OWNED BY ir_default.id;


--
-- Name: ir_exports; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_exports (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    resource character varying(128),
    name character varying(128)
);


--
-- Name: TABLE ir_exports; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_exports IS 'ir.exports';


--
-- Name: COLUMN ir_exports.resource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_exports.resource IS 'Resource';


--
-- Name: COLUMN ir_exports.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_exports.name IS 'Export Name';


--
-- Name: ir_exports_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_exports_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_exports_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_exports_id_seq OWNED BY ir_exports.id;


--
-- Name: ir_exports_line; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_exports_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    export_id integer,
    name character varying(64)
);


--
-- Name: TABLE ir_exports_line; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_exports_line IS 'ir.exports.line';


--
-- Name: COLUMN ir_exports_line.export_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_exports_line.export_id IS 'Export';


--
-- Name: COLUMN ir_exports_line.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_exports_line.name IS 'Field Name';


--
-- Name: ir_exports_line_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_exports_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_exports_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_exports_line_id_seq OWNED BY ir_exports_line.id;


--
-- Name: ir_filters; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_filters (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    model_id character varying(64) NOT NULL,
    domain text NOT NULL,
    user_id integer,
    name character varying(64) NOT NULL,
    context text NOT NULL
);


--
-- Name: TABLE ir_filters; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_filters IS 'Filters';


--
-- Name: COLUMN ir_filters.model_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_filters.model_id IS 'Object';


--
-- Name: COLUMN ir_filters.domain; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_filters.domain IS 'Domain Value';


--
-- Name: COLUMN ir_filters.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_filters.user_id IS 'User';


--
-- Name: COLUMN ir_filters.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_filters.name IS 'Filter Name';


--
-- Name: COLUMN ir_filters.context; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_filters.context IS 'Context Value';


--
-- Name: ir_filters_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_filters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_filters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_filters_id_seq OWNED BY ir_filters.id;


--
-- Name: ir_mail_server; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_mail_server (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64) NOT NULL,
    sequence integer,
    smtp_port integer NOT NULL,
    smtp_host character varying(128) NOT NULL,
    smtp_user character varying(64),
    smtp_pass character varying(64),
    smtp_debug boolean,
    smtp_encryption character varying NOT NULL
);


--
-- Name: TABLE ir_mail_server; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_mail_server IS 'ir.mail_server';


--
-- Name: COLUMN ir_mail_server.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_mail_server.name IS 'Description';


--
-- Name: COLUMN ir_mail_server.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_mail_server.sequence IS 'Priority';


--
-- Name: COLUMN ir_mail_server.smtp_port; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_mail_server.smtp_port IS 'SMTP Port';


--
-- Name: COLUMN ir_mail_server.smtp_host; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_mail_server.smtp_host IS 'SMTP Server';


--
-- Name: COLUMN ir_mail_server.smtp_user; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_mail_server.smtp_user IS 'Username';


--
-- Name: COLUMN ir_mail_server.smtp_pass; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_mail_server.smtp_pass IS 'Password';


--
-- Name: COLUMN ir_mail_server.smtp_debug; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_mail_server.smtp_debug IS 'Debugging';


--
-- Name: COLUMN ir_mail_server.smtp_encryption; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_mail_server.smtp_encryption IS 'Connection Security';


--
-- Name: ir_mail_server_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_mail_server_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_mail_server_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_mail_server_id_seq OWNED BY ir_mail_server.id;


--
-- Name: ir_model; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_model (
    id integer NOT NULL,
    model character varying(64) DEFAULT ''::character varying NOT NULL,
    name character varying(64) NOT NULL,
    state character varying(16),
    info text,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: ir_model_access; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_model_access (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    model_id integer NOT NULL,
    perm_read boolean,
    name character varying(64) NOT NULL,
    perm_unlink boolean,
    perm_write boolean,
    perm_create boolean,
    group_id integer
);


--
-- Name: TABLE ir_model_access; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_model_access IS 'ir.model.access';


--
-- Name: COLUMN ir_model_access.model_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_access.model_id IS 'Object';


--
-- Name: COLUMN ir_model_access.perm_read; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_access.perm_read IS 'Read Access';


--
-- Name: COLUMN ir_model_access.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_access.name IS 'Name';


--
-- Name: COLUMN ir_model_access.perm_unlink; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_access.perm_unlink IS 'Delete Access';


--
-- Name: COLUMN ir_model_access.perm_write; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_access.perm_write IS 'Write Access';


--
-- Name: COLUMN ir_model_access.perm_create; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_access.perm_create IS 'Create Access';


--
-- Name: COLUMN ir_model_access.group_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_access.group_id IS 'Group';


--
-- Name: ir_model_access_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_model_access_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_model_access_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_model_access_id_seq OWNED BY ir_model_access.id;


--
-- Name: ir_model_data; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_model_data (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    noupdate boolean,
    name character varying(128) NOT NULL,
    date_init timestamp without time zone,
    date_update timestamp without time zone,
    module character varying(64) NOT NULL,
    model character varying(64) NOT NULL,
    res_id integer
);


--
-- Name: ir_model_data_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_model_data_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_model_data_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_model_data_id_seq OWNED BY ir_model_data.id;


--
-- Name: ir_model_fields; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_model_fields (
    id integer NOT NULL,
    model character varying(64) DEFAULT ''::character varying NOT NULL,
    model_id integer NOT NULL,
    name character varying(64) DEFAULT ''::character varying NOT NULL,
    relation character varying(64),
    select_level character varying(4) NOT NULL,
    field_description character varying(256) NOT NULL,
    ttype character varying(64) NOT NULL,
    state character varying(64) DEFAULT 'base'::character varying NOT NULL,
    view_load boolean,
    relate boolean DEFAULT false,
    relation_field character varying(128),
    translate boolean DEFAULT false,
    serialization_field_id integer,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    size integer,
    domain character varying(256),
    selection character varying(128),
    on_delete character varying,
    selectable boolean,
    required boolean,
    readonly boolean,
    complete_name character varying(64),
    CONSTRAINT ir_model_fields_size_gt_zero CHECK ((size > 0))
);


--
-- Name: COLUMN ir_model_fields.size; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_fields.size IS 'Size';


--
-- Name: COLUMN ir_model_fields.domain; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_fields.domain IS 'Domain';


--
-- Name: COLUMN ir_model_fields.selection; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_fields.selection IS 'Selection Options';


--
-- Name: COLUMN ir_model_fields.on_delete; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_fields.on_delete IS 'On delete';


--
-- Name: COLUMN ir_model_fields.selectable; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_fields.selectable IS 'Selectable';


--
-- Name: COLUMN ir_model_fields.required; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_fields.required IS 'Required';


--
-- Name: COLUMN ir_model_fields.readonly; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_fields.readonly IS 'Readonly';


--
-- Name: COLUMN ir_model_fields.complete_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_model_fields.complete_name IS 'Complete Name';


SET default_with_oids = true;

--
-- Name: ir_model_fields_group_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_model_fields_group_rel (
    field_id integer NOT NULL,
    group_id integer NOT NULL
);


--
-- Name: TABLE ir_model_fields_group_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_model_fields_group_rel IS 'RELATION BETWEEN ir_model_fields AND res_groups';


--
-- Name: ir_model_fields_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_model_fields_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_model_fields_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_model_fields_id_seq OWNED BY ir_model_fields.id;


--
-- Name: ir_model_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_model_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_model_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_model_id_seq OWNED BY ir_model.id;


SET default_with_oids = false;

--
-- Name: ir_module_category; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_module_category (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    parent_id integer,
    name character varying(128) NOT NULL,
    sequence integer,
    visible boolean,
    description text
);


--
-- Name: COLUMN ir_module_category.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_module_category.sequence IS 'Sequence';


--
-- Name: COLUMN ir_module_category.visible; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_module_category.visible IS 'Visible';


--
-- Name: COLUMN ir_module_category.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_module_category.description IS 'Description';


--
-- Name: ir_module_category_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_module_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_module_category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_module_category_id_seq OWNED BY ir_module_category.id;


--
-- Name: ir_module_module; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_module_module (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    website character varying(256),
    name character varying(128) NOT NULL,
    author character varying(128),
    url character varying(128),
    state character varying(16),
    latest_version character varying(64),
    shortdesc character varying(256),
    complexity character varying(32),
    category_id integer,
    certificate character varying(64),
    description text,
    application boolean DEFAULT false,
    demo boolean DEFAULT false,
    web boolean DEFAULT false,
    license character varying(32),
    sequence integer DEFAULT 100,
    auto_install boolean DEFAULT false,
    menus_by_module text,
    maintainer character varying(128),
    contributors text,
    views_by_module text,
    icon character varying(128),
    reports_by_module text,
    published_version character varying(64)
);


--
-- Name: COLUMN ir_module_module.menus_by_module; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_module_module.menus_by_module IS 'Menus';


--
-- Name: COLUMN ir_module_module.maintainer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_module_module.maintainer IS 'Maintainer';


--
-- Name: COLUMN ir_module_module.contributors; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_module_module.contributors IS 'Contributors';


--
-- Name: COLUMN ir_module_module.views_by_module; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_module_module.views_by_module IS 'Views';


--
-- Name: COLUMN ir_module_module.reports_by_module; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_module_module.reports_by_module IS 'Reports';


--
-- Name: COLUMN ir_module_module.published_version; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_module_module.published_version IS 'Published Version';


--
-- Name: ir_module_module_dependency; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_module_module_dependency (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(128),
    version_pattern character varying(128) DEFAULT NULL::character varying,
    module_id integer
);


--
-- Name: ir_module_module_dependency_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_module_module_dependency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_module_module_dependency_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_module_module_dependency_id_seq OWNED BY ir_module_module_dependency.id;


--
-- Name: ir_module_module_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_module_module_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_module_module_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_module_module_id_seq OWNED BY ir_module_module.id;


--
-- Name: ir_property; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_property (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    value_text text,
    value_float double precision,
    name character varying(128),
    value_integer bigint,
    type character varying NOT NULL,
    company_id integer,
    fields_id integer NOT NULL,
    value_datetime timestamp without time zone,
    value_binary bytea,
    value_reference character varying(128),
    res_id character varying(128)
);


--
-- Name: TABLE ir_property; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_property IS 'ir.property';


--
-- Name: COLUMN ir_property.value_text; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_property.value_text IS 'Value';


--
-- Name: COLUMN ir_property.value_float; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_property.value_float IS 'Value';


--
-- Name: COLUMN ir_property.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_property.name IS 'Name';


--
-- Name: COLUMN ir_property.value_integer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_property.value_integer IS 'Value';


--
-- Name: COLUMN ir_property.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_property.type IS 'Type';


--
-- Name: COLUMN ir_property.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_property.company_id IS 'Company';


--
-- Name: COLUMN ir_property.fields_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_property.fields_id IS 'Field';


--
-- Name: COLUMN ir_property.value_datetime; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_property.value_datetime IS 'Value';


--
-- Name: COLUMN ir_property.value_binary; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_property.value_binary IS 'Value';


--
-- Name: COLUMN ir_property.value_reference; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_property.value_reference IS 'Value';


--
-- Name: COLUMN ir_property.res_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_property.res_id IS 'Resource';


--
-- Name: ir_property_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_property_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_property_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_property_id_seq OWNED BY ir_property.id;


--
-- Name: ir_rule; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_rule (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    model_id integer NOT NULL,
    domain_force text,
    name character varying(128),
    global boolean,
    perm_unlink boolean,
    perm_write boolean,
    perm_read boolean,
    perm_create boolean,
    CONSTRAINT ir_rule_no_access_rights CHECK (((((perm_read <> false) OR (perm_write <> false)) OR (perm_create <> false)) OR (perm_unlink <> false)))
);


--
-- Name: TABLE ir_rule; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_rule IS 'ir.rule';


--
-- Name: COLUMN ir_rule.model_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_rule.model_id IS 'Object';


--
-- Name: COLUMN ir_rule.domain_force; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_rule.domain_force IS 'Domain';


--
-- Name: COLUMN ir_rule.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_rule.name IS 'Name';


--
-- Name: COLUMN ir_rule.global; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_rule.global IS 'Global';


--
-- Name: COLUMN ir_rule.perm_unlink; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_rule.perm_unlink IS 'Apply For Delete';


--
-- Name: COLUMN ir_rule.perm_write; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_rule.perm_write IS 'Apply For Write';


--
-- Name: COLUMN ir_rule.perm_read; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_rule.perm_read IS 'Apply For Read';


--
-- Name: COLUMN ir_rule.perm_create; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_rule.perm_create IS 'Apply For Create';


--
-- Name: ir_rule_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_rule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_rule_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_rule_id_seq OWNED BY ir_rule.id;


--
-- Name: ir_sequence; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_sequence (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    code character varying(64),
    name character varying(64) NOT NULL,
    number_next integer NOT NULL,
    implementation character varying NOT NULL,
    company_id integer,
    padding integer NOT NULL,
    number_increment integer NOT NULL,
    prefix character varying(64),
    active boolean,
    suffix character varying(64)
);


--
-- Name: TABLE ir_sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_sequence IS 'ir.sequence';


--
-- Name: COLUMN ir_sequence.code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_sequence.code IS 'Code';


--
-- Name: COLUMN ir_sequence.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_sequence.name IS 'Name';


--
-- Name: COLUMN ir_sequence.number_next; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_sequence.number_next IS 'Next Number';


--
-- Name: COLUMN ir_sequence.implementation; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_sequence.implementation IS 'Implementation';


--
-- Name: COLUMN ir_sequence.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_sequence.company_id IS 'Company';


--
-- Name: COLUMN ir_sequence.padding; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_sequence.padding IS 'Number Padding';


--
-- Name: COLUMN ir_sequence.number_increment; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_sequence.number_increment IS 'Increment Number';


--
-- Name: COLUMN ir_sequence.prefix; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_sequence.prefix IS 'Prefix';


--
-- Name: COLUMN ir_sequence.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_sequence.active IS 'Active';


--
-- Name: COLUMN ir_sequence.suffix; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_sequence.suffix IS 'Suffix';


--
-- Name: ir_sequence_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_sequence_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_sequence_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_sequence_id_seq OWNED BY ir_sequence.id;


--
-- Name: ir_sequence_type; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_sequence_type (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    code character varying(32) NOT NULL,
    name character varying(64) NOT NULL
);


--
-- Name: TABLE ir_sequence_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_sequence_type IS 'ir.sequence.type';


--
-- Name: COLUMN ir_sequence_type.code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_sequence_type.code IS 'Code';


--
-- Name: COLUMN ir_sequence_type.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_sequence_type.name IS 'Name';


--
-- Name: ir_sequence_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_sequence_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_sequence_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_sequence_type_id_seq OWNED BY ir_sequence_type.id;


--
-- Name: ir_server_object_lines; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_server_object_lines (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    server_id integer,
    type character varying(32) NOT NULL,
    value text NOT NULL,
    col1 integer NOT NULL
);


--
-- Name: TABLE ir_server_object_lines; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_server_object_lines IS 'ir.server.object.lines';


--
-- Name: COLUMN ir_server_object_lines.server_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_server_object_lines.server_id IS 'Object Mapping';


--
-- Name: COLUMN ir_server_object_lines.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_server_object_lines.type IS 'Type';


--
-- Name: COLUMN ir_server_object_lines.value; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_server_object_lines.value IS 'Value';


--
-- Name: COLUMN ir_server_object_lines.col1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_server_object_lines.col1 IS 'Destination';


--
-- Name: ir_server_object_lines_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_server_object_lines_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_server_object_lines_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_server_object_lines_id_seq OWNED BY ir_server_object_lines.id;


--
-- Name: ir_translation; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_translation (
    id integer NOT NULL,
    lang character varying(16),
    src text,
    name character varying(128) NOT NULL,
    type character varying(16),
    res_id integer,
    value text
);


--
-- Name: TABLE ir_translation; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_translation IS 'ir.translation';


--
-- Name: COLUMN ir_translation.lang; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_translation.lang IS 'Language';


--
-- Name: COLUMN ir_translation.src; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_translation.src IS 'Source';


--
-- Name: COLUMN ir_translation.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_translation.name IS 'Field Name';


--
-- Name: COLUMN ir_translation.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_translation.type IS 'Type';


--
-- Name: COLUMN ir_translation.res_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_translation.res_id IS 'Resource ID';


--
-- Name: COLUMN ir_translation.value; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_translation.value IS 'Translation Value';


--
-- Name: ir_translation_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_translation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_translation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_translation_id_seq OWNED BY ir_translation.id;


--
-- Name: ir_ui_menu; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_ui_menu (
    id integer NOT NULL,
    parent_id integer,
    name character varying(64) DEFAULT ''::character varying NOT NULL,
    icon character varying(64) DEFAULT ''::character varying,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    web_icon_data bytea,
    web_icon character varying(128),
    sequence integer,
    web_icon_hover character varying(128),
    web_icon_hover_data bytea
);


--
-- Name: COLUMN ir_ui_menu.web_icon_data; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_menu.web_icon_data IS 'Web Icon Image';


--
-- Name: COLUMN ir_ui_menu.web_icon; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_menu.web_icon IS 'Web Icon File';


--
-- Name: COLUMN ir_ui_menu.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_menu.sequence IS 'Sequence';


--
-- Name: COLUMN ir_ui_menu.web_icon_hover; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_menu.web_icon_hover IS 'Web Icon File (hover)';


--
-- Name: COLUMN ir_ui_menu.web_icon_hover_data; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_menu.web_icon_hover_data IS 'Web Icon Image (hover)';


SET default_with_oids = true;

--
-- Name: ir_ui_menu_group_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_ui_menu_group_rel (
    menu_id integer NOT NULL,
    gid integer NOT NULL
);


--
-- Name: TABLE ir_ui_menu_group_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_ui_menu_group_rel IS 'RELATION BETWEEN ir_ui_menu AND res_groups';


--
-- Name: ir_ui_menu_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_ui_menu_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_ui_menu_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_ui_menu_id_seq OWNED BY ir_ui_menu.id;


SET default_with_oids = false;

--
-- Name: ir_ui_view; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_ui_view (
    id integer NOT NULL,
    name character varying(64) DEFAULT ''::character varying NOT NULL,
    model character varying(64) DEFAULT ''::character varying NOT NULL,
    type character varying(64) DEFAULT 'form'::character varying NOT NULL,
    arch text NOT NULL,
    field_parent character varying(64),
    priority integer DEFAULT 5 NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    inherit_id integer
);


--
-- Name: COLUMN ir_ui_view.inherit_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_view.inherit_id IS 'Inherited View';


--
-- Name: ir_ui_view_custom; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_ui_view_custom (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    user_id integer NOT NULL,
    arch text NOT NULL,
    ref_id integer NOT NULL
);


--
-- Name: TABLE ir_ui_view_custom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_ui_view_custom IS 'ir.ui.view.custom';


--
-- Name: COLUMN ir_ui_view_custom.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_view_custom.user_id IS 'User';


--
-- Name: COLUMN ir_ui_view_custom.arch; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_view_custom.arch IS 'View Architecture';


--
-- Name: COLUMN ir_ui_view_custom.ref_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_view_custom.ref_id IS 'Original View';


--
-- Name: ir_ui_view_custom_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_ui_view_custom_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_ui_view_custom_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_ui_view_custom_id_seq OWNED BY ir_ui_view_custom.id;


--
-- Name: ir_ui_view_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_ui_view_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_ui_view_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_ui_view_id_seq OWNED BY ir_ui_view.id;


--
-- Name: ir_ui_view_sc; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_ui_view_sc (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    user_id integer NOT NULL,
    res_id integer,
    resource character varying(64) NOT NULL,
    name character varying(64),
    sequence integer
);


--
-- Name: TABLE ir_ui_view_sc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_ui_view_sc IS 'ir.ui.view_sc';


--
-- Name: COLUMN ir_ui_view_sc.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_view_sc.user_id IS 'User Ref.';


--
-- Name: COLUMN ir_ui_view_sc.res_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_view_sc.res_id IS 'Resource Ref.';


--
-- Name: COLUMN ir_ui_view_sc.resource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_view_sc.resource IS 'Resource Name';


--
-- Name: COLUMN ir_ui_view_sc.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_view_sc.name IS 'Shortcut Name';


--
-- Name: COLUMN ir_ui_view_sc.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_ui_view_sc.sequence IS 'Sequence';


--
-- Name: ir_ui_view_sc_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_ui_view_sc_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_ui_view_sc_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_ui_view_sc_id_seq OWNED BY ir_ui_view_sc.id;


--
-- Name: ir_values; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_values (
    id integer NOT NULL,
    name character varying(128) NOT NULL,
    key character varying(128) NOT NULL,
    key2 character varying(256),
    model character varying(128) NOT NULL,
    value text,
    meta text,
    res_id integer,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    model_id integer,
    user_id integer,
    company_id integer,
    action_id integer
);


--
-- Name: COLUMN ir_values.model_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_values.model_id IS 'Model (change only)';


--
-- Name: COLUMN ir_values.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_values.user_id IS 'User';


--
-- Name: COLUMN ir_values.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_values.company_id IS 'Company';


--
-- Name: COLUMN ir_values.action_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN ir_values.action_id IS 'Action (change only)';


--
-- Name: ir_values_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_values_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_values_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_values_id_seq OWNED BY ir_values.id;


--
-- Name: ir_wizard_screen; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE ir_wizard_screen (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: TABLE ir_wizard_screen; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE ir_wizard_screen IS 'ir.wizard.screen';


--
-- Name: ir_wizard_screen_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE ir_wizard_screen_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ir_wizard_screen_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE ir_wizard_screen_id_seq OWNED BY ir_wizard_screen.id;


--
-- Name: link_hebergement_epis; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE link_hebergement_epis (
    heb_pk integer NOT NULL,
    heb_nombre_epis integer NOT NULL
);


--
-- Name: link_hebergement_epis_heb_nombre_epis_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE link_hebergement_epis_heb_nombre_epis_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: link_hebergement_epis_heb_nombre_epis_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE link_hebergement_epis_heb_nombre_epis_seq OWNED BY link_hebergement_epis.heb_nombre_epis;


--
-- Name: link_hebergement_metadata_link_met_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE link_hebergement_metadata_link_met_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: link_hebergement_metadata_link_met_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE link_hebergement_metadata_link_met_pk_seq OWNED BY link_hebergement_metadata.link_met_pk;


--
-- Name: link_hebergement_metadata_update; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE link_hebergement_metadata_update (
    pk integer NOT NULL,
    link_met_fk integer NOT NULL,
    metadata_fk integer NOT NULL,
    link_met_value boolean,
    update_date timestamp without time zone
);


--
-- Name: link_hebergement_metadata_update_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE link_hebergement_metadata_update_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: link_hebergement_metadata_update_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE link_hebergement_metadata_update_pk_seq OWNED BY link_hebergement_metadata_update.pk;


--
-- Name: log; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE log (
    log_pk integer NOT NULL,
    log_date timestamp without time zone NOT NULL,
    log_path character varying NOT NULL,
    log_hebid character varying NOT NULL,
    log_hebpk integer,
    log_host character varying,
    log_agent character varying,
    log_website character varying
);


--
-- Name: log_log_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE log_log_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: mail_compose_message; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE mail_compose_message (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    body_text text,
    email_bcc character varying(256),
    auto_delete boolean,
    body_html text,
    email_to character varying(256),
    email_cc character varying(256),
    date timestamp without time zone,
    subject character varying(512) NOT NULL,
    subtype character varying(32),
    message_id character varying(256),
    headers text,
    filter_id integer,
    reply_to character varying(256),
    "references" text,
    model character varying(128),
    res_id integer,
    email_from character varying(128)
);


--
-- Name: TABLE mail_compose_message; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE mail_compose_message IS 'E-mail composition wizard';


--
-- Name: COLUMN mail_compose_message.body_text; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.body_text IS 'Text contents';


--
-- Name: COLUMN mail_compose_message.email_bcc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.email_bcc IS 'Bcc';


--
-- Name: COLUMN mail_compose_message.auto_delete; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.auto_delete IS 'Auto Delete';


--
-- Name: COLUMN mail_compose_message.body_html; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.body_html IS 'Rich-text contents';


--
-- Name: COLUMN mail_compose_message.email_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.email_to IS 'To';


--
-- Name: COLUMN mail_compose_message.email_cc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.email_cc IS 'Cc';


--
-- Name: COLUMN mail_compose_message.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.date IS 'Date';


--
-- Name: COLUMN mail_compose_message.subject; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.subject IS 'Subject';


--
-- Name: COLUMN mail_compose_message.subtype; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.subtype IS 'Message type';


--
-- Name: COLUMN mail_compose_message.message_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.message_id IS 'Message-Id';


--
-- Name: COLUMN mail_compose_message.headers; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.headers IS 'Message headers';


--
-- Name: COLUMN mail_compose_message.filter_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.filter_id IS 'Filters';


--
-- Name: COLUMN mail_compose_message.reply_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.reply_to IS 'Reply-To';


--
-- Name: COLUMN mail_compose_message."references"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message."references" IS 'References';


--
-- Name: COLUMN mail_compose_message.model; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.model IS 'Related Document model';


--
-- Name: COLUMN mail_compose_message.res_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.res_id IS 'Related Document ID';


--
-- Name: COLUMN mail_compose_message.email_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_compose_message.email_from IS 'From';


--
-- Name: mail_compose_message_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE mail_compose_message_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: mail_compose_message_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE mail_compose_message_id_seq OWNED BY mail_compose_message.id;


--
-- Name: mail_message_common; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE mail_message_common (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    body_text text,
    email_bcc character varying(256),
    body_html text,
    message_id character varying(256),
    headers text,
    subtype character varying(32),
    email_to character varying(256),
    reply_to character varying(256),
    email_cc character varying(256),
    date timestamp without time zone,
    "references" text,
    model character varying(128),
    res_id integer,
    email_from character varying(128),
    subject character varying(512) NOT NULL
);


--
-- Name: TABLE mail_message_common; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE mail_message_common IS 'mail.message.common';


--
-- Name: COLUMN mail_message_common.body_text; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.body_text IS 'Text contents';


--
-- Name: COLUMN mail_message_common.email_bcc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.email_bcc IS 'Bcc';


--
-- Name: COLUMN mail_message_common.body_html; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.body_html IS 'Rich-text contents';


--
-- Name: COLUMN mail_message_common.message_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.message_id IS 'Message-Id';


--
-- Name: COLUMN mail_message_common.headers; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.headers IS 'Message headers';


--
-- Name: COLUMN mail_message_common.subtype; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.subtype IS 'Message type';


--
-- Name: COLUMN mail_message_common.email_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.email_to IS 'To';


--
-- Name: COLUMN mail_message_common.reply_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.reply_to IS 'Reply-To';


--
-- Name: COLUMN mail_message_common.email_cc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.email_cc IS 'Cc';


--
-- Name: COLUMN mail_message_common.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.date IS 'Date';


--
-- Name: COLUMN mail_message_common."references"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common."references" IS 'References';


--
-- Name: COLUMN mail_message_common.model; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.model IS 'Related Document model';


--
-- Name: COLUMN mail_message_common.res_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.res_id IS 'Related Document ID';


--
-- Name: COLUMN mail_message_common.email_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.email_from IS 'From';


--
-- Name: COLUMN mail_message_common.subject; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN mail_message_common.subject IS 'Subject';


--
-- Name: mail_message_common_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE mail_message_common_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: mail_message_common_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE mail_message_common_id_seq OWNED BY mail_message_common.id;


--
-- Name: mail_message_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE mail_message_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: mail_message_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE mail_message_id_seq OWNED BY mail_message.id;


--
-- Name: mail_thread; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE mail_thread (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: TABLE mail_thread; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE mail_thread IS 'Email Thread';


--
-- Name: mail_thread_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE mail_thread_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: mail_thread_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE mail_thread_id_seq OWNED BY mail_thread.id;


--
-- Name: maintenance_contract; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE maintenance_contract (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: TABLE maintenance_contract; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE maintenance_contract IS 'maintenance.contract';


--
-- Name: maintenance_contract_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE maintenance_contract_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: maintenance_contract_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE maintenance_contract_id_seq OWNED BY maintenance_contract.id;


SET default_with_oids = true;

--
-- Name: maison_tourisme; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE maison_tourisme (
    mais_pk integer NOT NULL,
    mais_nom character varying,
    mais_url character varying,
    mais_code character varying,
    mais_gps_long double precision DEFAULT 0.0,
    mais_gps_lat double precision DEFAULT 0.0,
    mais_id character varying,
    mais_location geometry
);


--
-- Name: maison_tourisme_mais_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE maison_tourisme_mais_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: maison_tourisme_mais_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE maison_tourisme_mais_pk_seq OWNED BY maison_tourisme.mais_pk;


SET default_with_oids = false;

--
-- Name: map_blacklist; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE map_blacklist (
    blacklist_pk integer NOT NULL,
    blacklist_id character varying NOT NULL,
    blacklist_name character varying NOT NULL,
    blacklist_description character varying NOT NULL,
    blacklist_provider_pk character varying NOT NULL
);


--
-- Name: map_blacklist_blacklist_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE map_blacklist_blacklist_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: map_blacklist_blacklist_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE map_blacklist_blacklist_pk_seq OWNED BY map_blacklist.blacklist_pk;


--
-- Name: map_external_data; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE map_external_data (
    ext_data_pk integer NOT NULL,
    ext_data_id character varying NOT NULL,
    ext_data_title character varying NOT NULL,
    ext_data_type character varying,
    ext_data_date_begin timestamp without time zone,
    ext_data_date_end timestamp without time zone,
    ext_data_picture_url character varying,
    ext_data_latitude double precision NOT NULL,
    ext_data_longitude double precision NOT NULL,
    ext_data_url character varying NOT NULL,
    ext_data_provider_pk character varying NOT NULL,
    ext_data_location geometry
);


--
-- Name: map_external_data_ext_data_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE map_external_data_ext_data_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: map_external_data_ext_data_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE map_external_data_ext_data_pk_seq OWNED BY map_external_data.ext_data_pk;


--
-- Name: map_provider; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE map_provider (
    provider_pk character varying NOT NULL
);


SET default_with_oids = true;

--
-- Name: meeting_attendee_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE meeting_attendee_rel (
    event_id integer NOT NULL,
    attendee_id integer NOT NULL
);


--
-- Name: TABLE meeting_attendee_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE meeting_attendee_rel IS 'RELATION BETWEEN crm_meeting AND calendar_attendee';


--
-- Name: merge_opportunity_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE merge_opportunity_rel (
    merge_id integer NOT NULL,
    opportunity_id integer NOT NULL
);


--
-- Name: TABLE merge_opportunity_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE merge_opportunity_rel IS 'RELATION BETWEEN crm_merge_opportunity AND crm_lead';


--
-- Name: message_attachment_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE message_attachment_rel (
    message_id integer NOT NULL,
    attachment_id integer NOT NULL
);


--
-- Name: TABLE message_attachment_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE message_attachment_rel IS 'RELATION BETWEEN mail_message AND ir_attachment';


SET default_with_oids = false;

--
-- Name: metadata; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE metadata (
    met_pk integer NOT NULL,
    met_id character varying NOT NULL,
    met_titre_fr character varying NOT NULL,
    met_titre_en character varying NOT NULL,
    met_titre_nl character varying NOT NULL,
    met_titre_it character varying NOT NULL,
    met_titre_de character varying NOT NULL,
    met_filterable boolean,
    metadata_type_id character varying NOT NULL,
    met_editable boolean
);


--
-- Name: metadata_met_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE metadata_met_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: metadata_met_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE metadata_met_pk_seq OWNED BY metadata.met_pk;


--
-- Name: metadata_type; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE metadata_type (
    met_typ_id character varying NOT NULL,
    met_typ_titre character varying NOT NULL,
    met_typ_sort_ord integer
);


--
-- Name: migrade_application_installer_modules; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE migrade_application_installer_modules (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    quickbooks_ippids boolean,
    sync_google_contact boolean,
    import_saleforce boolean,
    import_sugarcrm boolean
);


--
-- Name: TABLE migrade_application_installer_modules; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE migrade_application_installer_modules IS 'migrade.application.installer.modules';


--
-- Name: COLUMN migrade_application_installer_modules.quickbooks_ippids; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN migrade_application_installer_modules.quickbooks_ippids IS 'Quickbooks Ippids';


--
-- Name: COLUMN migrade_application_installer_modules.sync_google_contact; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN migrade_application_installer_modules.sync_google_contact IS 'Sync Google Contact';


--
-- Name: COLUMN migrade_application_installer_modules.import_saleforce; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN migrade_application_installer_modules.import_saleforce IS 'Import Saleforce';


--
-- Name: COLUMN migrade_application_installer_modules.import_sugarcrm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN migrade_application_installer_modules.import_sugarcrm IS 'Import Sugarcrm';


--
-- Name: migrade_application_installer_modules_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE migrade_application_installer_modules_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: migrade_application_installer_modules_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE migrade_application_installer_modules_id_seq OWNED BY migrade_application_installer_modules.id;


--
-- Name: multi_company_default; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE multi_company_default (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(256) NOT NULL,
    sequence integer,
    expression character varying(256) NOT NULL,
    company_dest_id integer NOT NULL,
    field_id integer,
    company_id integer NOT NULL,
    object_id integer NOT NULL
);


--
-- Name: TABLE multi_company_default; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE multi_company_default IS 'Default multi company';


--
-- Name: COLUMN multi_company_default.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN multi_company_default.name IS 'Name';


--
-- Name: COLUMN multi_company_default.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN multi_company_default.sequence IS 'Sequence';


--
-- Name: COLUMN multi_company_default.expression; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN multi_company_default.expression IS 'Expression';


--
-- Name: COLUMN multi_company_default.company_dest_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN multi_company_default.company_dest_id IS 'Default Company';


--
-- Name: COLUMN multi_company_default.field_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN multi_company_default.field_id IS 'Field';


--
-- Name: COLUMN multi_company_default.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN multi_company_default.company_id IS 'Main Company';


--
-- Name: COLUMN multi_company_default.object_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN multi_company_default.object_id IS 'Object';


--
-- Name: multi_company_default_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE multi_company_default_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: multi_company_default_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE multi_company_default_id_seq OWNED BY multi_company_default.id;


--
-- Name: myseq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE myseq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: osv_memory_autovacuum; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE osv_memory_autovacuum (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: TABLE osv_memory_autovacuum; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE osv_memory_autovacuum IS 'osv_memory.autovacuum';


--
-- Name: osv_memory_autovacuum_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE osv_memory_autovacuum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: osv_memory_autovacuum_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE osv_memory_autovacuum_id_seq OWNED BY osv_memory_autovacuum.id;


SET default_with_oids = true;

--
-- Name: parametre; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE parametre (
    param_num_commande integer DEFAULT 0,
    param_num_gdw integer DEFAULT 0
);


SET default_with_oids = false;

--
-- Name: partner_clear_ids; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE partner_clear_ids (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: TABLE partner_clear_ids; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE partner_clear_ids IS 'Clear IDs';


--
-- Name: partner_clear_ids_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE partner_clear_ids_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: partner_clear_ids_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE partner_clear_ids_id_seq OWNED BY partner_clear_ids.id;


--
-- Name: partner_massmail_wizard; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE partner_massmail_wizard (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    text text NOT NULL,
    email_from character varying(256) NOT NULL,
    subject character varying(256) NOT NULL
);


--
-- Name: TABLE partner_massmail_wizard; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE partner_massmail_wizard IS 'Mass Mailing';


--
-- Name: COLUMN partner_massmail_wizard.text; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN partner_massmail_wizard.text IS 'Message';


--
-- Name: COLUMN partner_massmail_wizard.email_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN partner_massmail_wizard.email_from IS 'Sender''s email';


--
-- Name: COLUMN partner_massmail_wizard.subject; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN partner_massmail_wizard.subject IS 'Subject';


--
-- Name: partner_massmail_wizard_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE partner_massmail_wizard_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: partner_massmail_wizard_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE partner_massmail_wizard_id_seq OWNED BY partner_massmail_wizard.id;


--
-- Name: partner_sms_send; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE partner_sms_send (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    text text NOT NULL,
    password character varying(256) NOT NULL,
    mobile_to character varying(256) NOT NULL,
    "user" character varying(256) NOT NULL,
    app_id character varying(256) NOT NULL
);


--
-- Name: TABLE partner_sms_send; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE partner_sms_send IS 'Send SMS';


--
-- Name: COLUMN partner_sms_send.text; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN partner_sms_send.text IS 'SMS Message';


--
-- Name: COLUMN partner_sms_send.password; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN partner_sms_send.password IS 'Password';


--
-- Name: COLUMN partner_sms_send.mobile_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN partner_sms_send.mobile_to IS 'To';


--
-- Name: COLUMN partner_sms_send."user"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN partner_sms_send."user" IS 'Login';


--
-- Name: COLUMN partner_sms_send.app_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN partner_sms_send.app_id IS 'API ID';


--
-- Name: partner_sms_send_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE partner_sms_send_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: partner_sms_send_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE partner_sms_send_id_seq OWNED BY partner_sms_send.id;


--
-- Name: partner_wizard_ean_check; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE partner_wizard_ean_check (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: TABLE partner_wizard_ean_check; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE partner_wizard_ean_check IS 'Ean Check';


--
-- Name: partner_wizard_ean_check_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE partner_wizard_ean_check_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: partner_wizard_ean_check_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE partner_wizard_ean_check_id_seq OWNED BY partner_wizard_ean_check.id;


--
-- Name: pgbench_accounts; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE pgbench_accounts (
    aid integer NOT NULL,
    bid integer,
    abalance integer,
    filler character(84)
)
WITH (fillfactor=100);


--
-- Name: pgbench_branches; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE pgbench_branches (
    bid integer NOT NULL,
    bbalance integer,
    filler character(88)
)
WITH (fillfactor=100);


--
-- Name: pgbench_history; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE pgbench_history (
    tid integer,
    bid integer,
    aid integer,
    delta integer,
    mtime timestamp without time zone,
    filler character(22)
);


--
-- Name: pgbench_tellers; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE pgbench_tellers (
    tid integer NOT NULL,
    bid integer,
    tbalance integer,
    filler character(84)
)
WITH (fillfactor=100);


--
-- Name: pricelist_partnerinfo; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE pricelist_partnerinfo (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    min_quantity double precision NOT NULL,
    price numeric NOT NULL,
    suppinfo_id integer NOT NULL,
    name character varying(64)
);


--
-- Name: TABLE pricelist_partnerinfo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE pricelist_partnerinfo IS 'pricelist.partnerinfo';


--
-- Name: COLUMN pricelist_partnerinfo.min_quantity; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pricelist_partnerinfo.min_quantity IS 'Quantity';


--
-- Name: COLUMN pricelist_partnerinfo.price; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pricelist_partnerinfo.price IS 'Unit Price';


--
-- Name: COLUMN pricelist_partnerinfo.suppinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pricelist_partnerinfo.suppinfo_id IS 'Partner Information';


--
-- Name: COLUMN pricelist_partnerinfo.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN pricelist_partnerinfo.name IS 'Description';


--
-- Name: pricelist_partnerinfo_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE pricelist_partnerinfo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: pricelist_partnerinfo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE pricelist_partnerinfo_id_seq OWNED BY pricelist_partnerinfo.id;


--
-- Name: process_condition; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE process_condition (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    model_id integer,
    node_id integer NOT NULL,
    model_states character varying(128) NOT NULL,
    name character varying(30) NOT NULL
);


--
-- Name: TABLE process_condition; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE process_condition IS 'Condition';


--
-- Name: COLUMN process_condition.model_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_condition.model_id IS 'Object';


--
-- Name: COLUMN process_condition.node_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_condition.node_id IS 'Node';


--
-- Name: COLUMN process_condition.model_states; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_condition.model_states IS 'Expression';


--
-- Name: COLUMN process_condition.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_condition.name IS 'Name';


--
-- Name: process_condition_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE process_condition_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: process_condition_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE process_condition_id_seq OWNED BY process_condition.id;


--
-- Name: process_node; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE process_node (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    menu_id integer,
    model_id integer,
    kind character varying NOT NULL,
    note text,
    name character varying(30) NOT NULL,
    subflow_id integer,
    process_id integer NOT NULL,
    model_states character varying(128),
    help_url character varying(255),
    flow_start boolean
);


--
-- Name: TABLE process_node; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE process_node IS 'Process Node';


--
-- Name: COLUMN process_node.menu_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_node.menu_id IS 'Related Menu';


--
-- Name: COLUMN process_node.model_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_node.model_id IS 'Object';


--
-- Name: COLUMN process_node.kind; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_node.kind IS 'Kind of Node';


--
-- Name: COLUMN process_node.note; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_node.note IS 'Notes';


--
-- Name: COLUMN process_node.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_node.name IS 'Name';


--
-- Name: COLUMN process_node.subflow_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_node.subflow_id IS 'Subflow';


--
-- Name: COLUMN process_node.process_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_node.process_id IS 'Process';


--
-- Name: COLUMN process_node.model_states; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_node.model_states IS 'States Expression';


--
-- Name: COLUMN process_node.help_url; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_node.help_url IS 'Help URL';


--
-- Name: COLUMN process_node.flow_start; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_node.flow_start IS 'Starting Flow';


--
-- Name: process_node_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE process_node_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: process_node_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE process_node_id_seq OWNED BY process_node.id;


--
-- Name: process_process; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE process_process (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    active boolean,
    model_id integer,
    note text,
    name character varying(30) NOT NULL
);


--
-- Name: TABLE process_process; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE process_process IS 'Process';


--
-- Name: COLUMN process_process.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_process.active IS 'Active';


--
-- Name: COLUMN process_process.model_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_process.model_id IS 'Object';


--
-- Name: COLUMN process_process.note; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_process.note IS 'Notes';


--
-- Name: COLUMN process_process.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_process.name IS 'Name';


--
-- Name: process_process_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE process_process_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: process_process_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE process_process_id_seq OWNED BY process_process.id;


--
-- Name: process_transition; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE process_transition (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    note text,
    name character varying(32) NOT NULL,
    source_node_id integer NOT NULL,
    target_node_id integer NOT NULL
);


--
-- Name: TABLE process_transition; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE process_transition IS 'Process Transition';


--
-- Name: COLUMN process_transition.note; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_transition.note IS 'Description';


--
-- Name: COLUMN process_transition.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_transition.name IS 'Name';


--
-- Name: COLUMN process_transition.source_node_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_transition.source_node_id IS 'Source Node';


--
-- Name: COLUMN process_transition.target_node_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_transition.target_node_id IS 'Target Node';


--
-- Name: process_transition_action; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE process_transition_action (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    action character varying(64),
    state character varying NOT NULL,
    name character varying(32) NOT NULL,
    transition_id integer NOT NULL
);


--
-- Name: TABLE process_transition_action; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE process_transition_action IS 'Process Transitions Actions';


--
-- Name: COLUMN process_transition_action.action; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_transition_action.action IS 'Action ID';


--
-- Name: COLUMN process_transition_action.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_transition_action.state IS 'Type';


--
-- Name: COLUMN process_transition_action.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_transition_action.name IS 'Name';


--
-- Name: COLUMN process_transition_action.transition_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN process_transition_action.transition_id IS 'Transition';


--
-- Name: process_transition_action_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE process_transition_action_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: process_transition_action_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE process_transition_action_id_seq OWNED BY process_transition_action.id;


SET default_with_oids = true;

--
-- Name: process_transition_group_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE process_transition_group_rel (
    tid integer NOT NULL,
    rid integer NOT NULL
);


--
-- Name: TABLE process_transition_group_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE process_transition_group_rel IS 'RELATION BETWEEN process_transition AND res_groups';


--
-- Name: process_transition_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE process_transition_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: process_transition_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE process_transition_id_seq OWNED BY process_transition.id;


--
-- Name: process_transition_ids; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE process_transition_ids (
    ptr_id integer NOT NULL,
    wtr_id integer NOT NULL
);


--
-- Name: TABLE process_transition_ids; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE process_transition_ids IS 'RELATION BETWEEN process_transition AND wkf_transition';


SET default_with_oids = false;

--
-- Name: product_category; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_category (
    id integer NOT NULL,
    parent_left integer,
    parent_right integer,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64) NOT NULL,
    sequence integer,
    parent_id integer,
    type character varying
);


--
-- Name: TABLE product_category; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_category IS 'Product Category';


--
-- Name: COLUMN product_category.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_category.name IS 'Name';


--
-- Name: COLUMN product_category.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_category.sequence IS 'Sequence';


--
-- Name: COLUMN product_category.parent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_category.parent_id IS 'Parent Category';


--
-- Name: COLUMN product_category.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_category.type IS 'Category Type';


--
-- Name: product_category_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_category_id_seq OWNED BY product_category.id;


--
-- Name: product_installer; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_installer (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    customers character varying(32) NOT NULL
);


--
-- Name: TABLE product_installer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_installer IS 'product.installer';


--
-- Name: COLUMN product_installer.customers; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_installer.customers IS 'Customers';


--
-- Name: product_installer_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_installer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_installer_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_installer_id_seq OWNED BY product_installer.id;


--
-- Name: product_packaging; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_packaging (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    ul integer NOT NULL,
    code character varying(14),
    product_id integer NOT NULL,
    weight double precision,
    sequence integer,
    ul_qty integer,
    ean character varying(14),
    qty double precision,
    width double precision,
    length double precision,
    rows integer NOT NULL,
    height double precision,
    weight_ul double precision,
    name text
);


--
-- Name: TABLE product_packaging; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_packaging IS 'Packaging';


--
-- Name: COLUMN product_packaging.ul; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.ul IS 'Type of Package';


--
-- Name: COLUMN product_packaging.code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.code IS 'Code';


--
-- Name: COLUMN product_packaging.product_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.product_id IS 'Product';


--
-- Name: COLUMN product_packaging.weight; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.weight IS 'Total Package Weight';


--
-- Name: COLUMN product_packaging.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.sequence IS 'Sequence';


--
-- Name: COLUMN product_packaging.ul_qty; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.ul_qty IS 'Package by layer';


--
-- Name: COLUMN product_packaging.ean; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.ean IS 'EAN';


--
-- Name: COLUMN product_packaging.qty; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.qty IS 'Quantity by Package';


--
-- Name: COLUMN product_packaging.width; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.width IS 'Width';


--
-- Name: COLUMN product_packaging.length; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.length IS 'Length';


--
-- Name: COLUMN product_packaging.rows; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.rows IS 'Number of Layers';


--
-- Name: COLUMN product_packaging.height; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.height IS 'Height';


--
-- Name: COLUMN product_packaging.weight_ul; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.weight_ul IS 'Empty Package Weight';


--
-- Name: COLUMN product_packaging.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_packaging.name IS 'Description';


--
-- Name: product_packaging_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_packaging_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_packaging_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_packaging_id_seq OWNED BY product_packaging.id;


--
-- Name: product_price_list; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_price_list (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    qty1 integer,
    qty2 integer,
    qty3 integer,
    qty4 integer,
    qty5 integer,
    price_list integer NOT NULL
);


--
-- Name: TABLE product_price_list; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_price_list IS 'Price List';


--
-- Name: COLUMN product_price_list.qty1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_price_list.qty1 IS 'Quantity-1';


--
-- Name: COLUMN product_price_list.qty2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_price_list.qty2 IS 'Quantity-2';


--
-- Name: COLUMN product_price_list.qty3; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_price_list.qty3 IS 'Quantity-3';


--
-- Name: COLUMN product_price_list.qty4; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_price_list.qty4 IS 'Quantity-4';


--
-- Name: COLUMN product_price_list.qty5; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_price_list.qty5 IS 'Quantity-5';


--
-- Name: COLUMN product_price_list.price_list; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_price_list.price_list IS 'PriceList';


--
-- Name: product_price_list_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_price_list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_price_list_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_price_list_id_seq OWNED BY product_price_list.id;


--
-- Name: product_price_type; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_price_type (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    active boolean,
    field character varying(32) NOT NULL,
    currency_id integer NOT NULL,
    name character varying(32) NOT NULL
);


--
-- Name: TABLE product_price_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_price_type IS 'Price Type';


--
-- Name: COLUMN product_price_type.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_price_type.active IS 'Active';


--
-- Name: COLUMN product_price_type.field; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_price_type.field IS 'Product Field';


--
-- Name: COLUMN product_price_type.currency_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_price_type.currency_id IS 'Currency';


--
-- Name: COLUMN product_price_type.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_price_type.name IS 'Price Name';


--
-- Name: product_price_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_price_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_price_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_price_type_id_seq OWNED BY product_price_type.id;


--
-- Name: product_pricelist; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_pricelist (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    currency_id integer NOT NULL,
    name character varying(64) NOT NULL,
    active boolean,
    type character varying NOT NULL,
    company_id integer
);


--
-- Name: TABLE product_pricelist; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_pricelist IS 'Pricelist';


--
-- Name: COLUMN product_pricelist.currency_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist.currency_id IS 'Currency';


--
-- Name: COLUMN product_pricelist.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist.name IS 'Pricelist Name';


--
-- Name: COLUMN product_pricelist.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist.active IS 'Active';


--
-- Name: COLUMN product_pricelist.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist.type IS 'Pricelist Type';


--
-- Name: COLUMN product_pricelist.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist.company_id IS 'Company';


--
-- Name: product_pricelist_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_pricelist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_pricelist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_pricelist_id_seq OWNED BY product_pricelist.id;


--
-- Name: product_pricelist_item; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_pricelist_item (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    price_round numeric,
    price_discount numeric,
    base_pricelist_id integer,
    sequence integer NOT NULL,
    price_max_margin numeric,
    company_id integer,
    name character varying(64),
    product_tmpl_id integer,
    product_id integer,
    base integer NOT NULL,
    price_version_id integer NOT NULL,
    min_quantity integer NOT NULL,
    price_min_margin numeric,
    categ_id integer,
    price_surcharge numeric
);


--
-- Name: TABLE product_pricelist_item; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_pricelist_item IS 'Pricelist item';


--
-- Name: COLUMN product_pricelist_item.price_round; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.price_round IS 'Price Rounding';


--
-- Name: COLUMN product_pricelist_item.price_discount; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.price_discount IS 'Price Discount';


--
-- Name: COLUMN product_pricelist_item.base_pricelist_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.base_pricelist_id IS 'If Other Pricelist';


--
-- Name: COLUMN product_pricelist_item.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.sequence IS 'Sequence';


--
-- Name: COLUMN product_pricelist_item.price_max_margin; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.price_max_margin IS 'Max. Price Margin';


--
-- Name: COLUMN product_pricelist_item.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.company_id IS 'Company';


--
-- Name: COLUMN product_pricelist_item.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.name IS 'Rule Name';


--
-- Name: COLUMN product_pricelist_item.product_tmpl_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.product_tmpl_id IS 'Product Template';


--
-- Name: COLUMN product_pricelist_item.product_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.product_id IS 'Product';


--
-- Name: COLUMN product_pricelist_item.base; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.base IS 'Based on';


--
-- Name: COLUMN product_pricelist_item.price_version_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.price_version_id IS 'Price List Version';


--
-- Name: COLUMN product_pricelist_item.min_quantity; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.min_quantity IS 'Min. Quantity';


--
-- Name: COLUMN product_pricelist_item.price_min_margin; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.price_min_margin IS 'Min. Price Margin';


--
-- Name: COLUMN product_pricelist_item.categ_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.categ_id IS 'Product Category';


--
-- Name: COLUMN product_pricelist_item.price_surcharge; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_item.price_surcharge IS 'Price Surcharge';


--
-- Name: product_pricelist_item_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_pricelist_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_pricelist_item_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_pricelist_item_id_seq OWNED BY product_pricelist_item.id;


--
-- Name: product_pricelist_type; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_pricelist_type (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64) NOT NULL,
    key character varying(64) NOT NULL
);


--
-- Name: TABLE product_pricelist_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_pricelist_type IS 'Pricelist Type';


--
-- Name: COLUMN product_pricelist_type.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_type.name IS 'Name';


--
-- Name: COLUMN product_pricelist_type.key; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_type.key IS 'Key';


--
-- Name: product_pricelist_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_pricelist_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_pricelist_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_pricelist_type_id_seq OWNED BY product_pricelist_type.id;


--
-- Name: product_pricelist_version; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_pricelist_version (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64) NOT NULL,
    active boolean,
    pricelist_id integer NOT NULL,
    date_end date,
    date_start date,
    company_id integer
);


--
-- Name: TABLE product_pricelist_version; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_pricelist_version IS 'Pricelist Version';


--
-- Name: COLUMN product_pricelist_version.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_version.name IS 'Name';


--
-- Name: COLUMN product_pricelist_version.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_version.active IS 'Active';


--
-- Name: COLUMN product_pricelist_version.pricelist_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_version.pricelist_id IS 'Price List';


--
-- Name: COLUMN product_pricelist_version.date_end; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_version.date_end IS 'End Date';


--
-- Name: COLUMN product_pricelist_version.date_start; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_version.date_start IS 'Start Date';


--
-- Name: COLUMN product_pricelist_version.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_pricelist_version.company_id IS 'Company';


--
-- Name: product_pricelist_version_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_pricelist_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_pricelist_version_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_pricelist_version_id_seq OWNED BY product_pricelist_version.id;


--
-- Name: product_product; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_product (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    ean13 character varying(13),
    color integer,
    price_extra numeric,
    default_code character varying(64),
    name_template character varying(128),
    active boolean,
    variants character varying(64),
    product_tmpl_id integer NOT NULL,
    product_image bytea,
    price_margin numeric
);


--
-- Name: TABLE product_product; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_product IS 'Product';


--
-- Name: COLUMN product_product.ean13; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_product.ean13 IS 'EAN13';


--
-- Name: COLUMN product_product.color; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_product.color IS 'Color Index';


--
-- Name: COLUMN product_product.price_extra; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_product.price_extra IS 'Variant Price Extra';


--
-- Name: COLUMN product_product.default_code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_product.default_code IS 'Reference';


--
-- Name: COLUMN product_product.name_template; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_product.name_template IS 'Name';


--
-- Name: COLUMN product_product.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_product.active IS 'Active';


--
-- Name: COLUMN product_product.variants; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_product.variants IS 'Variants';


--
-- Name: COLUMN product_product.product_tmpl_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_product.product_tmpl_id IS 'Product Template';


--
-- Name: COLUMN product_product.product_image; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_product.product_image IS 'Image';


--
-- Name: COLUMN product_product.price_margin; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_product.price_margin IS 'Variant Price Margin';


--
-- Name: product_product_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_product_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_product_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_product_id_seq OWNED BY product_product.id;


--
-- Name: product_supplierinfo; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_supplierinfo (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name integer NOT NULL,
    sequence integer,
    company_id integer,
    qty numeric,
    delay integer NOT NULL,
    min_qty double precision NOT NULL,
    product_code character varying(64),
    product_name character varying(128),
    product_id integer NOT NULL
);


--
-- Name: TABLE product_supplierinfo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_supplierinfo IS 'Information about a product supplier';


--
-- Name: COLUMN product_supplierinfo.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_supplierinfo.name IS 'Supplier';


--
-- Name: COLUMN product_supplierinfo.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_supplierinfo.sequence IS 'Sequence';


--
-- Name: COLUMN product_supplierinfo.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_supplierinfo.company_id IS 'Company';


--
-- Name: COLUMN product_supplierinfo.qty; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_supplierinfo.qty IS 'Quantity';


--
-- Name: COLUMN product_supplierinfo.delay; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_supplierinfo.delay IS 'Delivery Lead Time';


--
-- Name: COLUMN product_supplierinfo.min_qty; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_supplierinfo.min_qty IS 'Minimal Quantity';


--
-- Name: COLUMN product_supplierinfo.product_code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_supplierinfo.product_code IS 'Supplier Product Code';


--
-- Name: COLUMN product_supplierinfo.product_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_supplierinfo.product_name IS 'Supplier Product Name';


--
-- Name: COLUMN product_supplierinfo.product_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_supplierinfo.product_id IS 'Product';


--
-- Name: product_supplierinfo_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_supplierinfo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_supplierinfo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_supplierinfo_id_seq OWNED BY product_supplierinfo.id;


--
-- Name: product_template; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_template (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    warranty double precision,
    supply_method character varying NOT NULL,
    uos_id integer,
    list_price numeric,
    weight numeric,
    standard_price numeric NOT NULL,
    mes_type character varying NOT NULL,
    uom_id integer NOT NULL,
    description_purchase text,
    uos_coeff numeric,
    purchase_ok boolean,
    product_manager integer,
    company_id integer,
    name character varying(128) NOT NULL,
    state character varying,
    loc_rack character varying(16),
    uom_po_id integer NOT NULL,
    type character varying NOT NULL,
    description text,
    weight_net numeric,
    volume double precision,
    loc_row character varying(16),
    description_sale text,
    procure_method character varying NOT NULL,
    cost_method character varying NOT NULL,
    rental boolean,
    sale_ok boolean,
    sale_delay double precision,
    loc_case character varying(16),
    produce_delay double precision,
    categ_id integer NOT NULL
);


--
-- Name: TABLE product_template; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_template IS 'Product Template';


--
-- Name: COLUMN product_template.warranty; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.warranty IS 'Warranty (months)';


--
-- Name: COLUMN product_template.supply_method; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.supply_method IS 'Supply method';


--
-- Name: COLUMN product_template.uos_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.uos_id IS 'Unit of Sale';


--
-- Name: COLUMN product_template.list_price; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.list_price IS 'Sale Price';


--
-- Name: COLUMN product_template.weight; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.weight IS 'Gross weight';


--
-- Name: COLUMN product_template.standard_price; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.standard_price IS 'Cost Price';


--
-- Name: COLUMN product_template.mes_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.mes_type IS 'Measure Type';


--
-- Name: COLUMN product_template.uom_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.uom_id IS 'Default Unit Of Measure';


--
-- Name: COLUMN product_template.description_purchase; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.description_purchase IS 'Purchase Description';


--
-- Name: COLUMN product_template.uos_coeff; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.uos_coeff IS 'UOM -> UOS Coeff';


--
-- Name: COLUMN product_template.purchase_ok; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.purchase_ok IS 'Can be Purchased';


--
-- Name: COLUMN product_template.product_manager; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.product_manager IS 'Product Manager';


--
-- Name: COLUMN product_template.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.company_id IS 'Company';


--
-- Name: COLUMN product_template.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.name IS 'Name';


--
-- Name: COLUMN product_template.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.state IS 'Status';


--
-- Name: COLUMN product_template.loc_rack; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.loc_rack IS 'Rack';


--
-- Name: COLUMN product_template.uom_po_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.uom_po_id IS 'Purchase Unit of Measure';


--
-- Name: COLUMN product_template.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.type IS 'Product Type';


--
-- Name: COLUMN product_template.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.description IS 'Description';


--
-- Name: COLUMN product_template.weight_net; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.weight_net IS 'Net weight';


--
-- Name: COLUMN product_template.volume; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.volume IS 'Volume';


--
-- Name: COLUMN product_template.loc_row; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.loc_row IS 'Row';


--
-- Name: COLUMN product_template.description_sale; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.description_sale IS 'Sale Description';


--
-- Name: COLUMN product_template.procure_method; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.procure_method IS 'Procurement Method';


--
-- Name: COLUMN product_template.cost_method; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.cost_method IS 'Costing Method';


--
-- Name: COLUMN product_template.rental; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.rental IS 'Can be Rent';


--
-- Name: COLUMN product_template.sale_ok; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.sale_ok IS 'Can be Sold';


--
-- Name: COLUMN product_template.sale_delay; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.sale_delay IS 'Customer Lead Time';


--
-- Name: COLUMN product_template.loc_case; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.loc_case IS 'Case';


--
-- Name: COLUMN product_template.produce_delay; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.produce_delay IS 'Manufacturing Lead Time';


--
-- Name: COLUMN product_template.categ_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_template.categ_id IS 'Category';


--
-- Name: product_template_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_template_id_seq OWNED BY product_template.id;


--
-- Name: product_ul; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_ul (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    type character varying NOT NULL,
    name character varying(64) NOT NULL
);


--
-- Name: TABLE product_ul; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_ul IS 'Shipping Unit';


--
-- Name: COLUMN product_ul.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_ul.type IS 'Type';


--
-- Name: COLUMN product_ul.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_ul.name IS 'Name';


--
-- Name: product_ul_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_ul_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_ul_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_ul_id_seq OWNED BY product_ul.id;


--
-- Name: product_uom; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_uom (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    uom_type character varying NOT NULL,
    category_id integer NOT NULL,
    name character varying(64) NOT NULL,
    rounding numeric NOT NULL,
    factor numeric NOT NULL,
    active boolean,
    CONSTRAINT product_uom_factor_gt_zero CHECK ((factor <> (0)::numeric))
);


--
-- Name: TABLE product_uom; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_uom IS 'Product Unit of Measure';


--
-- Name: COLUMN product_uom.uom_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_uom.uom_type IS 'UoM Type';


--
-- Name: COLUMN product_uom.category_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_uom.category_id IS 'UoM Category';


--
-- Name: COLUMN product_uom.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_uom.name IS 'Name';


--
-- Name: COLUMN product_uom.rounding; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_uom.rounding IS 'Rounding Precision';


--
-- Name: COLUMN product_uom.factor; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_uom.factor IS 'Ratio';


--
-- Name: COLUMN product_uom.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_uom.active IS 'Active';


--
-- Name: product_uom_categ; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE product_uom_categ (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64) NOT NULL
);


--
-- Name: TABLE product_uom_categ; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE product_uom_categ IS 'Product uom categ';


--
-- Name: COLUMN product_uom_categ.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN product_uom_categ.name IS 'Name';


--
-- Name: product_uom_categ_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_uom_categ_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_uom_categ_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_uom_categ_id_seq OWNED BY product_uom_categ.id;


--
-- Name: product_uom_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE product_uom_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: product_uom_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE product_uom_id_seq OWNED BY product_uom.id;


--
-- Name: project_project; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE project_project (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    sequence integer,
    active boolean,
    effective_hours numeric,
    planned_hours numeric,
    resource_calendar_id integer,
    analytic_account_id integer NOT NULL,
    warn_footer text,
    warn_manager boolean,
    warn_customer boolean,
    warn_header text,
    priority integer,
    total_hours numeric,
    progress_rate numeric
);


--
-- Name: TABLE project_project; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE project_project IS 'Project';


--
-- Name: COLUMN project_project.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.sequence IS 'Sequence';


--
-- Name: COLUMN project_project.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.active IS 'Active';


--
-- Name: COLUMN project_project.effective_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.effective_hours IS 'Time Spent';


--
-- Name: COLUMN project_project.planned_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.planned_hours IS 'Planned Time';


--
-- Name: COLUMN project_project.resource_calendar_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.resource_calendar_id IS 'Working Time';


--
-- Name: COLUMN project_project.analytic_account_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.analytic_account_id IS 'Analytic Account';


--
-- Name: COLUMN project_project.warn_footer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.warn_footer IS 'Mail Footer';


--
-- Name: COLUMN project_project.warn_manager; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.warn_manager IS 'Warn Manager';


--
-- Name: COLUMN project_project.warn_customer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.warn_customer IS 'Warn Partner';


--
-- Name: COLUMN project_project.warn_header; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.warn_header IS 'Mail Header';


--
-- Name: COLUMN project_project.priority; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.priority IS 'Sequence';


--
-- Name: COLUMN project_project.total_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.total_hours IS 'Total Time';


--
-- Name: COLUMN project_project.progress_rate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_project.progress_rate IS 'Progress';


--
-- Name: project_project_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE project_project_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: project_project_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE project_project_id_seq OWNED BY project_project.id;


--
-- Name: project_task; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE project_task (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    remaining_hours numeric,
    description text,
    sequence integer,
    color integer,
    date_end timestamp without time zone,
    kanban_state character varying,
    active boolean,
    planned_hours double precision,
    partner_id integer,
    delay_hours numeric,
    type_id integer,
    user_id integer,
    name character varying(128) NOT NULL,
    date_deadline date,
    notes text,
    date_start timestamp without time zone,
    company_id integer,
    priority character varying,
    total_hours numeric,
    state character varying NOT NULL,
    progress numeric,
    project_id integer,
    effective_hours numeric
);


--
-- Name: TABLE project_task; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE project_task IS 'Task';


--
-- Name: COLUMN project_task.remaining_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.remaining_hours IS 'Remaining Hours';


--
-- Name: COLUMN project_task.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.description IS 'Description';


--
-- Name: COLUMN project_task.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.sequence IS 'Sequence';


--
-- Name: COLUMN project_task.color; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.color IS 'Color Index';


--
-- Name: COLUMN project_task.date_end; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.date_end IS 'Ending Date';


--
-- Name: COLUMN project_task.kanban_state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.kanban_state IS 'Kanban State';


--
-- Name: COLUMN project_task.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.active IS 'Not a Template Task';


--
-- Name: COLUMN project_task.planned_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.planned_hours IS 'Planned Hours';


--
-- Name: COLUMN project_task.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.partner_id IS 'Partner';


--
-- Name: COLUMN project_task.delay_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.delay_hours IS 'Delay Hours';


--
-- Name: COLUMN project_task.type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.type_id IS 'Stage';


--
-- Name: COLUMN project_task.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.user_id IS 'Assigned to';


--
-- Name: COLUMN project_task.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.name IS 'Task Summary';


--
-- Name: COLUMN project_task.date_deadline; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.date_deadline IS 'Deadline';


--
-- Name: COLUMN project_task.notes; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.notes IS 'Notes';


--
-- Name: COLUMN project_task.date_start; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.date_start IS 'Starting Date';


--
-- Name: COLUMN project_task.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.company_id IS 'Company';


--
-- Name: COLUMN project_task.priority; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.priority IS 'Priority';


--
-- Name: COLUMN project_task.total_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.total_hours IS 'Total Hours';


--
-- Name: COLUMN project_task.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.state IS 'State';


--
-- Name: COLUMN project_task.progress; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.progress IS 'Progress (%)';


--
-- Name: COLUMN project_task.project_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.project_id IS 'Project';


--
-- Name: COLUMN project_task.effective_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task.effective_hours IS 'Hours Spent';


--
-- Name: project_task_delegate; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE project_task_delegate (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    planned_hours double precision,
    user_id integer NOT NULL,
    name character varying(64) NOT NULL,
    state character varying,
    project_id integer,
    prefix character varying(64),
    planned_hours_me double precision,
    new_task_description text
);


--
-- Name: TABLE project_task_delegate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE project_task_delegate IS 'Task Delegate';


--
-- Name: COLUMN project_task_delegate.planned_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_delegate.planned_hours IS 'Planned Hours';


--
-- Name: COLUMN project_task_delegate.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_delegate.user_id IS 'Assign To';


--
-- Name: COLUMN project_task_delegate.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_delegate.name IS 'Delegated Title';


--
-- Name: COLUMN project_task_delegate.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_delegate.state IS 'Validation State';


--
-- Name: COLUMN project_task_delegate.project_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_delegate.project_id IS 'Project';


--
-- Name: COLUMN project_task_delegate.prefix; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_delegate.prefix IS 'Your Task Title';


--
-- Name: COLUMN project_task_delegate.planned_hours_me; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_delegate.planned_hours_me IS 'Hours to Validate';


--
-- Name: COLUMN project_task_delegate.new_task_description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_delegate.new_task_description IS 'New Task Description';


--
-- Name: project_task_delegate_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE project_task_delegate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: project_task_delegate_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE project_task_delegate_id_seq OWNED BY project_task_delegate.id;


--
-- Name: project_task_history; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE project_task_history (
    id integer NOT NULL,
    user_id integer,
    task_id integer NOT NULL,
    end_date date,
    type_id integer,
    kanban_state character varying,
    state character varying,
    date date,
    planned_hours numeric,
    remaining_hours numeric
);


--
-- Name: TABLE project_task_history; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE project_task_history IS 'History of Tasks';


--
-- Name: COLUMN project_task_history.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_history.user_id IS 'Responsible';


--
-- Name: COLUMN project_task_history.task_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_history.task_id IS 'Task';


--
-- Name: COLUMN project_task_history.end_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_history.end_date IS 'End Date';


--
-- Name: COLUMN project_task_history.type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_history.type_id IS 'Stage';


--
-- Name: COLUMN project_task_history.kanban_state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_history.kanban_state IS 'Kanban State';


--
-- Name: COLUMN project_task_history.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_history.state IS 'State';


--
-- Name: COLUMN project_task_history.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_history.date IS 'Date';


--
-- Name: COLUMN project_task_history.planned_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_history.planned_hours IS 'Planned Time';


--
-- Name: COLUMN project_task_history.remaining_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_history.remaining_hours IS 'Remaining Time';


--
-- Name: project_task_history_cumulative; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW project_task_history_cumulative AS
    SELECT ((((history.date)::character varying)::text || '-'::text) || ((history.history_id)::character varying)::text) AS id, history.date AS end_date, history.history_id, history.date, history.task_id, history.type_id, history.user_id, history.kanban_state, history.state, history.remaining_hours, history.planned_hours FROM (SELECT project_task_history.id AS history_id, (project_task_history.date + generate_series(0, ((COALESCE(project_task_history.end_date, '2013-10-19'::date) - project_task_history.date) - 1))) AS date, project_task_history.task_id, project_task_history.type_id, project_task_history.user_id, project_task_history.kanban_state, project_task_history.state, project_task_history.remaining_hours, project_task_history.planned_hours FROM project_task_history) history;


--
-- Name: project_task_history_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE project_task_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: project_task_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE project_task_history_id_seq OWNED BY project_task_history.id;


--
-- Name: project_task_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE project_task_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: project_task_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE project_task_id_seq OWNED BY project_task.id;


SET default_with_oids = true;

--
-- Name: project_task_parent_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE project_task_parent_rel (
    parent_id integer NOT NULL,
    task_id integer NOT NULL
);


--
-- Name: TABLE project_task_parent_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE project_task_parent_rel IS 'RELATION BETWEEN project_task AND project_task';


SET default_with_oids = false;

--
-- Name: project_task_reevaluate; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE project_task_reevaluate (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    remaining_hours numeric
);


--
-- Name: TABLE project_task_reevaluate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE project_task_reevaluate IS 'project.task.reevaluate';


--
-- Name: COLUMN project_task_reevaluate.remaining_hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_reevaluate.remaining_hours IS 'Remaining Hours';


--
-- Name: project_task_reevaluate_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE project_task_reevaluate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: project_task_reevaluate_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE project_task_reevaluate_id_seq OWNED BY project_task_reevaluate.id;


--
-- Name: project_task_type; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE project_task_type (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    description text,
    name character varying(64) NOT NULL,
    project_default boolean,
    sequence integer
);


--
-- Name: TABLE project_task_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE project_task_type IS 'Task Stage';


--
-- Name: COLUMN project_task_type.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_type.description IS 'Description';


--
-- Name: COLUMN project_task_type.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_type.name IS 'Stage Name';


--
-- Name: COLUMN project_task_type.project_default; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_type.project_default IS 'Common to All Projects';


--
-- Name: COLUMN project_task_type.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_type.sequence IS 'Sequence';


--
-- Name: project_task_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE project_task_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: project_task_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE project_task_type_id_seq OWNED BY project_task_type.id;


SET default_with_oids = true;

--
-- Name: project_task_type_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE project_task_type_rel (
    type_id integer NOT NULL,
    project_id integer NOT NULL
);


--
-- Name: TABLE project_task_type_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE project_task_type_rel IS 'RELATION BETWEEN project_task_type AND project_project';


SET default_with_oids = false;

--
-- Name: project_task_work; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE project_task_work (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    hours double precision,
    user_id integer NOT NULL,
    name character varying(128),
    task_id integer NOT NULL,
    date timestamp without time zone,
    company_id integer
);


--
-- Name: TABLE project_task_work; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE project_task_work IS 'Project Task Work';


--
-- Name: COLUMN project_task_work.hours; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_work.hours IS 'Time Spent';


--
-- Name: COLUMN project_task_work.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_work.user_id IS 'Done by';


--
-- Name: COLUMN project_task_work.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_work.name IS 'Work summary';


--
-- Name: COLUMN project_task_work.task_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_work.task_id IS 'Task';


--
-- Name: COLUMN project_task_work.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_work.date IS 'Date';


--
-- Name: COLUMN project_task_work.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN project_task_work.company_id IS 'Company';


--
-- Name: project_task_work_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE project_task_work_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: project_task_work_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE project_task_work_id_seq OWNED BY project_task_work.id;


SET default_with_oids = true;

--
-- Name: project_user_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE project_user_rel (
    project_id integer NOT NULL,
    uid integer NOT NULL
);


--
-- Name: TABLE project_user_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE project_user_rel IS 'RELATION BETWEEN project_project AND res_users';


--
-- Name: project_vs_hours; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW project_vs_hours AS
    SELECT min(pt.id) AS id, aaa.user_id, aaa.name AS project, aaa.state, sum(pt.remaining_hours) AS remaining_hours, sum(pt.planned_hours) AS planned_hours, sum(pt.total_hours) AS total_hours FROM project_project pp, account_analytic_account aaa, project_task pt WHERE (((aaa.id = pp.analytic_account_id) AND (pt.project_id = pp.id)) AND (pp.analytic_account_id = aaa.id)) GROUP BY aaa.user_id, aaa.state, aaa.name UNION ALL SELECT min(pt.id) AS id, pur.uid AS user_id, aaa.name AS project, aaa.state, sum(pt.remaining_hours) AS remaining_hours, sum(pt.planned_hours) AS planned_hours, sum(pt.total_hours) AS total_hours FROM project_project pp, project_user_rel pur, account_analytic_account aaa, project_task pt WHERE ((((pur.project_id = pp.id) AND (pt.project_id = pp.id)) AND (pp.analytic_account_id = aaa.id)) AND (pur.uid <> aaa.user_id)) GROUP BY pur.uid, aaa.state, aaa.name;


--
-- Name: proprio; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE proprio (
    pro_pk integer NOT NULL,
    pro_nom1 character varying,
    pro_nom2 character varying,
    pro_prenom1 character varying,
    pro_prenom2 character varying,
    pro_societe character varying,
    pro_adresse character varying,
    pro_email character varying,
    pro_tel_priv character varying,
    pro_tel_bur character varying,
    pro_fax_priv character varying,
    pro_fax_bur character varying,
    pro_gsm1 character varying,
    pro_gsm2 character varying,
    pro_url character varying,
    pro_tva character varying,
    pro_comment character varying,
    pro_desact_comment character varying,
    pro_desact_justif character varying,
    pro_date_in character varying,
    pro_date_out character varying,
    pro_motif_out character varying,
    pro_justif_out character varying,
    pro_langue character varying,
    pro_log character varying,
    pro_pass character varying,
    pro_com_fk integer,
    pro_civ_fk integer,
    pro_etat boolean DEFAULT true,
    pro_maj_info_etat character varying DEFAULT 'confirmé'::character varying,
    pro_employe_creation character varying,
    pro_employe_modification character varying,
    pro_date_modification timestamp without time zone,
    pro_date_creation timestamp without time zone,
    pro_reactivation_hash character varying
);


SET default_with_oids = false;

--
-- Name: proprio_maj; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE proprio_maj (
    pro_maj_pk integer NOT NULL,
    pro_maj_propk integer,
    pro_maj_nom1 character varying,
    pro_maj_nom2 character varying,
    pro_maj_prenom1 character varying,
    pro_maj_prenom2 character varying,
    pro_maj_societe character varying,
    pro_maj_adresse character varying,
    pro_maj_email character varying,
    pro_maj_tel_priv character varying,
    pro_maj_gsm1 character varying,
    pro_maj_fax_priv character varying,
    pro_maj_url character varying,
    pro_maj_tva character varying,
    pro_maj_langue character varying,
    pro_maj_date_crea timestamp without time zone DEFAULT now() NOT NULL,
    pro_maj_com_fk character varying,
    pro_maj_civ_fk character varying
);


--
-- Name: proprio_maj_pro_maj_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE proprio_maj_pro_maj_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: proprio_maj_pro_maj_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE proprio_maj_pro_maj_pk_seq OWNED BY proprio_maj.pro_maj_pk;


--
-- Name: proprio_pro_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE proprio_pro_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: proprio_pro_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE proprio_pro_pk_seq OWNED BY proprio.pro_pk;


SET default_with_oids = true;

--
-- Name: proprio_tempo; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE proprio_tempo (
    pro_nom1 character varying,
    pro_nom2 character varying,
    pro_prenom1 character varying,
    pro_prenom2 character varying,
    pro_societe character varying,
    pro_adresse character varying,
    pro_email character varying,
    pro_tel_priv character varying,
    pro_tel_bur character varying,
    pro_fax_priv character varying,
    pro_fax_bur character varying,
    pro_gsm1 character varying,
    pro_gsm2 character varying,
    pro_url character varying,
    pro_tva character varying,
    pro_comment character varying,
    pro_etat character varying,
    pro_desact_comment character varying,
    pro_desact_justif character varying,
    pro_date_in character varying,
    pro_date_out character varying,
    pro_motif_out character varying,
    pro_justif_out character varying,
    pro_langue character varying,
    pro_log character varying,
    pro_pass character varying,
    pro_com_fk integer,
    pro_civ_fk integer
);


--
-- Name: provinces; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE provinces (
    prov_pk integer NOT NULL,
    prov_nom character varying,
    prov_code integer
);


--
-- Name: provinces_prov_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE provinces_prov_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: provinces_prov_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE provinces_prov_pk_seq OWNED BY provinces.prov_pk;


SET default_with_oids = false;

--
-- Name: publisher_warranty_contract; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE publisher_warranty_contract (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    date_stop date,
    check_opw boolean,
    check_support boolean,
    state character varying,
    date_start date,
    kind character varying(64),
    name character varying(384) NOT NULL
);


--
-- Name: TABLE publisher_warranty_contract; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE publisher_warranty_contract IS 'publisher_warranty.contract';


--
-- Name: COLUMN publisher_warranty_contract.date_stop; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN publisher_warranty_contract.date_stop IS 'Ending Date';


--
-- Name: COLUMN publisher_warranty_contract.check_opw; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN publisher_warranty_contract.check_opw IS 'OPW';


--
-- Name: COLUMN publisher_warranty_contract.check_support; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN publisher_warranty_contract.check_support IS 'Support Level 1';


--
-- Name: COLUMN publisher_warranty_contract.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN publisher_warranty_contract.state IS 'State';


--
-- Name: COLUMN publisher_warranty_contract.date_start; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN publisher_warranty_contract.date_start IS 'Starting Date';


--
-- Name: COLUMN publisher_warranty_contract.kind; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN publisher_warranty_contract.kind IS 'Kind';


--
-- Name: COLUMN publisher_warranty_contract.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN publisher_warranty_contract.name IS 'Serial Key';


--
-- Name: publisher_warranty_contract_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE publisher_warranty_contract_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: publisher_warranty_contract_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE publisher_warranty_contract_id_seq OWNED BY publisher_warranty_contract.id;


--
-- Name: publisher_warranty_contract_wizard; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE publisher_warranty_contract_wizard (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    state character varying,
    name character varying(256) NOT NULL
);


--
-- Name: TABLE publisher_warranty_contract_wizard; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE publisher_warranty_contract_wizard IS 'publisher_warranty.contract.wizard';


--
-- Name: COLUMN publisher_warranty_contract_wizard.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN publisher_warranty_contract_wizard.state IS 'unknown';


--
-- Name: COLUMN publisher_warranty_contract_wizard.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN publisher_warranty_contract_wizard.name IS 'Serial Key';


--
-- Name: publisher_warranty_contract_wizard_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE publisher_warranty_contract_wizard_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: publisher_warranty_contract_wizard_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE publisher_warranty_contract_wizard_id_seq OWNED BY publisher_warranty_contract_wizard.id;


SET default_with_oids = true;

--
-- Name: region_guide; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE region_guide (
    reg_pk integer NOT NULL,
    reg_nom character varying,
    reg_num character varying
);


--
-- Name: region_guide_reg_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE region_guide_reg_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: region_guide_reg_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE region_guide_reg_pk_seq OWNED BY region_guide.reg_pk;


--
-- Name: rel_modules_langexport; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE rel_modules_langexport (
    wiz_id integer NOT NULL,
    module_id integer NOT NULL
);


--
-- Name: TABLE rel_modules_langexport; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE rel_modules_langexport IS 'RELATION BETWEEN base_language_export AND ir_module_module';


--
-- Name: rel_server_actions; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE rel_server_actions (
    server_id integer NOT NULL,
    action_id integer NOT NULL
);


--
-- Name: TABLE rel_server_actions; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE rel_server_actions IS 'RELATION BETWEEN ir_act_server AND ir_act_server';


--
-- Name: report_project_task_user; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW report_project_task_user AS
    SELECT (SELECT 1) AS nbr, t.id, to_char(t.date_start, 'YYYY'::text) AS year, to_char(t.date_start, 'MM'::text) AS month, to_char(t.date_start, 'YYYY-MM-DD'::text) AS day, date_trunc('day'::text, t.date_start) AS date_start, date_trunc('day'::text, t.date_end) AS date_end, to_date(to_char((t.date_deadline)::timestamp with time zone, 'dd-MM-YYYY'::text), 'dd-MM-YYYY'::text) AS date_deadline, abs((date_part('epoch'::text, (t.date_end - t.date_start)) / ((3600 * 24))::double precision)) AS no_of_days, t.user_id, t.progress, t.project_id, t.state, t.effective_hours AS hours_effective, t.priority, t.name, t.company_id, t.partner_id, t.type_id, t.remaining_hours, t.total_hours, t.delay_hours AS hours_delay, t.planned_hours AS hours_planned, (date_part('epoch'::text, (t.date_end - t.create_date)) / ((3600 * 24))::double precision) AS closing_days, (date_part('epoch'::text, (t.date_start - t.create_date)) / ((3600 * 24))::double precision) AS opening_days, abs((date_part('epoch'::text, ((t.date_deadline)::timestamp without time zone - t.date_end)) / ((3600 * 24))::double precision)) AS delay_endings_days FROM project_task t WHERE (t.active = true) GROUP BY t.id, t.remaining_hours, t.effective_hours, t.progress, t.total_hours, t.planned_hours, t.delay_hours, to_char(t.date_start, 'YYYY'::text), to_char(t.date_start, 'MM'::text), to_char(t.date_start, 'YYYY-MM-DD'::text), t.create_date, t.date_start, t.date_end, t.date_deadline, t.user_id, t.project_id, t.state, t.priority, t.name, t.company_id, t.partner_id, t.type_id;


SET default_with_oids = false;

--
-- Name: res_alarm; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_alarm (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    trigger_duration integer NOT NULL,
    name character varying(256) NOT NULL,
    trigger_occurs character varying NOT NULL,
    trigger_interval character varying NOT NULL,
    duration integer,
    repeat integer,
    active boolean,
    trigger_related character varying NOT NULL
);


--
-- Name: TABLE res_alarm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_alarm IS 'Basic Alarm Information';


--
-- Name: COLUMN res_alarm.trigger_duration; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_alarm.trigger_duration IS 'Duration';


--
-- Name: COLUMN res_alarm.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_alarm.name IS 'Name';


--
-- Name: COLUMN res_alarm.trigger_occurs; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_alarm.trigger_occurs IS 'Triggers';


--
-- Name: COLUMN res_alarm.trigger_interval; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_alarm.trigger_interval IS 'Interval';


--
-- Name: COLUMN res_alarm.duration; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_alarm.duration IS 'Duration';


--
-- Name: COLUMN res_alarm.repeat; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_alarm.repeat IS 'Repeat';


--
-- Name: COLUMN res_alarm.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_alarm.active IS 'Active';


--
-- Name: COLUMN res_alarm.trigger_related; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_alarm.trigger_related IS 'Related to';


--
-- Name: res_alarm_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_alarm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_alarm_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_alarm_id_seq OWNED BY res_alarm.id;


--
-- Name: res_bank; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_bank (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    city character varying(128),
    fax character varying(64),
    name character varying(128) NOT NULL,
    zip character varying(24),
    country integer,
    street2 character varying(128),
    bic character varying(64),
    phone character varying(64),
    state integer,
    street character varying(128),
    active boolean,
    email character varying(64)
);


--
-- Name: TABLE res_bank; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_bank IS 'Bank';


--
-- Name: COLUMN res_bank.city; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_bank.city IS 'City';


--
-- Name: COLUMN res_bank.fax; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_bank.fax IS 'Fax';


--
-- Name: COLUMN res_bank.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_bank.name IS 'Name';


--
-- Name: COLUMN res_bank.zip; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_bank.zip IS 'Zip';


--
-- Name: COLUMN res_bank.country; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_bank.country IS 'Country';


--
-- Name: COLUMN res_bank.street2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_bank.street2 IS 'Street2';


--
-- Name: COLUMN res_bank.bic; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_bank.bic IS 'Bank Identifier Code';


--
-- Name: COLUMN res_bank.phone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_bank.phone IS 'Phone';


--
-- Name: COLUMN res_bank.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_bank.state IS 'Fed. State';


--
-- Name: COLUMN res_bank.street; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_bank.street IS 'Street';


--
-- Name: COLUMN res_bank.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_bank.active IS 'Active';


--
-- Name: COLUMN res_bank.email; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_bank.email IS 'E-Mail';


--
-- Name: res_bank_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_bank_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_bank_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_bank_id_seq OWNED BY res_bank.id;


--
-- Name: res_company; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_company (
    id integer NOT NULL,
    parent_id integer,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    rml_header text NOT NULL,
    rml_footer1 character varying(200),
    paper_format character varying NOT NULL,
    currency_id integer NOT NULL,
    rml_header2 text NOT NULL,
    rml_header3 text NOT NULL,
    rml_header1 character varying(200),
    logo bytea,
    partner_id integer NOT NULL,
    account_no character varying(64),
    company_registry character varying(64),
    name character varying(128) NOT NULL,
    project_time_mode_id integer
);


--
-- Name: COLUMN res_company.rml_header; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_company.rml_header IS 'RML Header';


--
-- Name: COLUMN res_company.rml_footer1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_company.rml_footer1 IS 'General Information Footer';


--
-- Name: COLUMN res_company.paper_format; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_company.paper_format IS 'Paper Format';


--
-- Name: COLUMN res_company.currency_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_company.currency_id IS 'Currency';


--
-- Name: COLUMN res_company.rml_header2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_company.rml_header2 IS 'RML Internal Header';


--
-- Name: COLUMN res_company.rml_header3; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_company.rml_header3 IS 'RML Internal Header';


--
-- Name: COLUMN res_company.rml_header1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_company.rml_header1 IS 'Report Header / Company Slogan';


--
-- Name: COLUMN res_company.logo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_company.logo IS 'Logo';


--
-- Name: COLUMN res_company.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_company.partner_id IS 'Partner';


--
-- Name: COLUMN res_company.account_no; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_company.account_no IS 'Account No.';


--
-- Name: COLUMN res_company.company_registry; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_company.company_registry IS 'Company Registry';


--
-- Name: COLUMN res_company.project_time_mode_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_company.project_time_mode_id IS 'Project Time Unit';


--
-- Name: res_company_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_company_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_company_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_company_id_seq OWNED BY res_company.id;


SET default_with_oids = true;

--
-- Name: res_company_users_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_company_users_rel (
    cid integer NOT NULL,
    user_id integer NOT NULL
);


--
-- Name: TABLE res_company_users_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_company_users_rel IS 'RELATION BETWEEN res_company AND res_users';


SET default_with_oids = false;

--
-- Name: res_config; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_config (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: TABLE res_config; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_config IS 'res.config';


--
-- Name: res_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_config_id_seq OWNED BY res_config.id;


--
-- Name: res_config_installer; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_config_installer (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: TABLE res_config_installer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_config_installer IS 'res.config.installer';


--
-- Name: res_config_installer_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_config_installer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_config_installer_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_config_installer_id_seq OWNED BY res_config_installer.id;


--
-- Name: res_country; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_country (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    address_format text,
    code character varying(2) NOT NULL,
    name character varying(64) NOT NULL
);


--
-- Name: TABLE res_country; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_country IS 'Country';


--
-- Name: COLUMN res_country.address_format; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_country.address_format IS 'Address Format';


--
-- Name: COLUMN res_country.code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_country.code IS 'Country Code';


--
-- Name: COLUMN res_country.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_country.name IS 'Country Name';


--
-- Name: res_country_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_country_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_country_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_country_id_seq OWNED BY res_country.id;


--
-- Name: res_country_state; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_country_state (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    code character varying(3) NOT NULL,
    country_id integer NOT NULL,
    name character varying(64) NOT NULL
);


--
-- Name: TABLE res_country_state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_country_state IS 'Country state';


--
-- Name: COLUMN res_country_state.code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_country_state.code IS 'State Code';


--
-- Name: COLUMN res_country_state.country_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_country_state.country_id IS 'Country';


--
-- Name: COLUMN res_country_state.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_country_state.name IS 'State Name';


--
-- Name: res_country_state_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_country_state_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_country_state_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_country_state_id_seq OWNED BY res_country_state.id;


--
-- Name: res_currency; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_currency (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(32) NOT NULL,
    rounding numeric,
    symbol character varying(3),
    company_id integer,
    date date,
    base boolean,
    active boolean,
    "position" character varying,
    accuracy integer
);


--
-- Name: TABLE res_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_currency IS 'Currency';


--
-- Name: COLUMN res_currency.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency.name IS 'Currency';


--
-- Name: COLUMN res_currency.rounding; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency.rounding IS 'Rounding Factor';


--
-- Name: COLUMN res_currency.symbol; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency.symbol IS 'Symbol';


--
-- Name: COLUMN res_currency.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency.company_id IS 'Company';


--
-- Name: COLUMN res_currency.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency.date IS 'Date';


--
-- Name: COLUMN res_currency.base; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency.base IS 'Base';


--
-- Name: COLUMN res_currency.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency.active IS 'Active';


--
-- Name: COLUMN res_currency."position"; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency."position" IS 'Symbol position';


--
-- Name: COLUMN res_currency.accuracy; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency.accuracy IS 'Computational Accuracy';


--
-- Name: res_currency_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_currency_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_currency_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_currency_id_seq OWNED BY res_currency.id;


--
-- Name: res_currency_rate; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_currency_rate (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    currency_id integer,
    rate numeric,
    name date NOT NULL,
    currency_rate_type_id integer
);


--
-- Name: TABLE res_currency_rate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_currency_rate IS 'Currency Rate';


--
-- Name: COLUMN res_currency_rate.currency_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency_rate.currency_id IS 'Currency';


--
-- Name: COLUMN res_currency_rate.rate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency_rate.rate IS 'Rate';


--
-- Name: COLUMN res_currency_rate.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency_rate.name IS 'Date';


--
-- Name: COLUMN res_currency_rate.currency_rate_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency_rate.currency_rate_type_id IS 'Currency Rate Type';


--
-- Name: res_currency_rate_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_currency_rate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_currency_rate_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_currency_rate_id_seq OWNED BY res_currency_rate.id;


--
-- Name: res_currency_rate_type; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_currency_rate_type (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64) NOT NULL
);


--
-- Name: TABLE res_currency_rate_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_currency_rate_type IS 'Currency Rate Type';


--
-- Name: COLUMN res_currency_rate_type.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_currency_rate_type.name IS 'Name';


--
-- Name: res_currency_rate_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_currency_rate_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_currency_rate_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_currency_rate_type_id_seq OWNED BY res_currency_rate_type.id;


--
-- Name: res_groups; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_groups (
    id integer NOT NULL,
    name character varying(64) NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    comment text,
    category_id integer
);


--
-- Name: COLUMN res_groups.comment; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_groups.comment IS 'Comment';


--
-- Name: COLUMN res_groups.category_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_groups.category_id IS 'Application';


SET default_with_oids = true;

--
-- Name: res_groups_action_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_groups_action_rel (
    uid integer NOT NULL,
    gid integer NOT NULL
);


--
-- Name: TABLE res_groups_action_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_groups_action_rel IS 'RELATION BETWEEN ir_actions_todo AND res_groups';


--
-- Name: res_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_groups_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_groups_id_seq OWNED BY res_groups.id;


--
-- Name: res_groups_implied_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_groups_implied_rel (
    gid integer NOT NULL,
    hid integer NOT NULL
);


--
-- Name: TABLE res_groups_implied_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_groups_implied_rel IS 'RELATION BETWEEN res_groups AND res_groups';


--
-- Name: res_groups_report_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_groups_report_rel (
    uid integer NOT NULL,
    gid integer NOT NULL
);


--
-- Name: TABLE res_groups_report_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_groups_report_rel IS 'RELATION BETWEEN ir_act_report_xml AND res_groups';


SET default_with_oids = false;

--
-- Name: res_groups_users_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_groups_users_rel (
    uid integer NOT NULL,
    gid integer NOT NULL
);


SET default_with_oids = true;

--
-- Name: res_groups_wizard_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_groups_wizard_rel (
    uid integer NOT NULL,
    gid integer NOT NULL
);


--
-- Name: TABLE res_groups_wizard_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_groups_wizard_rel IS 'RELATION BETWEEN ir_act_wizard AND res_groups';


SET default_with_oids = false;

--
-- Name: res_lang; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_lang (
    id integer NOT NULL,
    name character varying(64) NOT NULL,
    code character varying(16) NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    date_format character varying(64) NOT NULL,
    direction character varying NOT NULL,
    thousands_sep character varying(64),
    translatable boolean,
    time_format character varying(64) NOT NULL,
    decimal_point character varying(64) NOT NULL,
    active boolean,
    iso_code character varying(16),
    grouping character varying(64) NOT NULL
);


--
-- Name: COLUMN res_lang.date_format; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_lang.date_format IS 'Date Format';


--
-- Name: COLUMN res_lang.direction; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_lang.direction IS 'Direction';


--
-- Name: COLUMN res_lang.thousands_sep; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_lang.thousands_sep IS 'Thousands Separator';


--
-- Name: COLUMN res_lang.translatable; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_lang.translatable IS 'Translatable';


--
-- Name: COLUMN res_lang.time_format; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_lang.time_format IS 'Time Format';


--
-- Name: COLUMN res_lang.decimal_point; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_lang.decimal_point IS 'Decimal Separator';


--
-- Name: COLUMN res_lang.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_lang.active IS 'Active';


--
-- Name: COLUMN res_lang.iso_code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_lang.iso_code IS 'ISO code';


--
-- Name: COLUMN res_lang.grouping; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_lang.grouping IS 'Separator Format';


--
-- Name: res_lang_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_lang_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_lang_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_lang_id_seq OWNED BY res_lang.id;


--
-- Name: res_log; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_log (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(250) NOT NULL,
    read boolean,
    res_model character varying(128),
    context character varying(250),
    user_id integer,
    res_id integer,
    secondary boolean
);


--
-- Name: TABLE res_log; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_log IS 'res.log';


--
-- Name: COLUMN res_log.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_log.name IS 'Message';


--
-- Name: COLUMN res_log.read; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_log.read IS 'Read';


--
-- Name: COLUMN res_log.res_model; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_log.res_model IS 'Object';


--
-- Name: COLUMN res_log.context; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_log.context IS 'Context';


--
-- Name: COLUMN res_log.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_log.user_id IS 'User';


--
-- Name: COLUMN res_log.res_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_log.res_id IS 'Object ID';


--
-- Name: COLUMN res_log.secondary; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_log.secondary IS 'Secondary Log';


--
-- Name: res_log_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_log_id_seq OWNED BY res_log.id;


--
-- Name: res_log_report; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW res_log_report AS
    SELECT l.id, 1 AS nbr, to_char(l.create_date, 'YYYY'::text) AS name, to_char(l.create_date, 'MM'::text) AS month, to_char(l.create_date, 'YYYY-MM-DD'::text) AS day, to_char(l.create_date, 'YYYY-MM-DD'::text) AS creation_date, l.res_model, date_trunc('day'::text, l.create_date) AS create_date FROM res_log l;


--
-- Name: res_partner; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_partner (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    comment text,
    ean13 character varying(13),
    color integer,
    date date,
    active boolean,
    lang character varying,
    customer boolean,
    credit_limit double precision,
    user_id integer,
    name character varying(128) NOT NULL,
    title integer,
    company_id integer,
    website character varying(64),
    parent_id integer,
    employee boolean,
    supplier boolean,
    ref character varying(64),
    vat character varying(32),
    section_id integer
);


--
-- Name: TABLE res_partner; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_partner IS 'Partner';


--
-- Name: COLUMN res_partner.comment; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.comment IS 'Notes';


--
-- Name: COLUMN res_partner.ean13; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.ean13 IS 'EAN13';


--
-- Name: COLUMN res_partner.color; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.color IS 'Color Index';


--
-- Name: COLUMN res_partner.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.date IS 'Date';


--
-- Name: COLUMN res_partner.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.active IS 'Active';


--
-- Name: COLUMN res_partner.lang; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.lang IS 'Language';


--
-- Name: COLUMN res_partner.customer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.customer IS 'Customer';


--
-- Name: COLUMN res_partner.credit_limit; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.credit_limit IS 'Credit Limit';


--
-- Name: COLUMN res_partner.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.user_id IS 'Salesman';


--
-- Name: COLUMN res_partner.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.name IS 'Name';


--
-- Name: COLUMN res_partner.title; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.title IS 'Partner Firm';


--
-- Name: COLUMN res_partner.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.company_id IS 'Company';


--
-- Name: COLUMN res_partner.website; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.website IS 'Website';


--
-- Name: COLUMN res_partner.parent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.parent_id IS 'Parent Partner';


--
-- Name: COLUMN res_partner.employee; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.employee IS 'Employee';


--
-- Name: COLUMN res_partner.supplier; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.supplier IS 'Supplier';


--
-- Name: COLUMN res_partner.ref; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.ref IS 'Reference';


--
-- Name: COLUMN res_partner.vat; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.vat IS 'VAT';


--
-- Name: COLUMN res_partner.section_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner.section_id IS 'Sales Team';


--
-- Name: res_partner_address; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_partner_address (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    function character varying(128),
    fax character varying(64),
    color integer,
    street2 character varying(128),
    phone character varying(64),
    street character varying(128),
    active boolean,
    partner_id integer,
    city character varying(128),
    name character varying(64),
    zip character varying(24),
    title integer,
    mobile character varying(64),
    country_id integer,
    company_id integer,
    birthdate character varying(64),
    state_id integer,
    type character varying,
    email character varying(240)
);


--
-- Name: TABLE res_partner_address; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_partner_address IS 'Partner Addresses';


--
-- Name: COLUMN res_partner_address.function; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.function IS 'Function';


--
-- Name: COLUMN res_partner_address.fax; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.fax IS 'Fax';


--
-- Name: COLUMN res_partner_address.color; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.color IS 'Color Index';


--
-- Name: COLUMN res_partner_address.street2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.street2 IS 'Street2';


--
-- Name: COLUMN res_partner_address.phone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.phone IS 'Phone';


--
-- Name: COLUMN res_partner_address.street; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.street IS 'Street';


--
-- Name: COLUMN res_partner_address.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.active IS 'Active';


--
-- Name: COLUMN res_partner_address.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.partner_id IS 'Partner Name';


--
-- Name: COLUMN res_partner_address.city; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.city IS 'City';


--
-- Name: COLUMN res_partner_address.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.name IS 'Contact Name';


--
-- Name: COLUMN res_partner_address.zip; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.zip IS 'Zip';


--
-- Name: COLUMN res_partner_address.title; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.title IS 'Title';


--
-- Name: COLUMN res_partner_address.mobile; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.mobile IS 'Mobile';


--
-- Name: COLUMN res_partner_address.country_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.country_id IS 'Country';


--
-- Name: COLUMN res_partner_address.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.company_id IS 'Company';


--
-- Name: COLUMN res_partner_address.birthdate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.birthdate IS 'Birthdate';


--
-- Name: COLUMN res_partner_address.state_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.state_id IS 'Fed. State';


--
-- Name: COLUMN res_partner_address.type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.type IS 'Address Type';


--
-- Name: COLUMN res_partner_address.email; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_address.email IS 'E-Mail';


--
-- Name: res_partner_address_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_partner_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_partner_address_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_partner_address_id_seq OWNED BY res_partner_address.id;


--
-- Name: res_partner_bank; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_partner_bank (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    bank_name character varying(32),
    owner_name character varying(128),
    sequence integer,
    street character varying(128),
    partner_id integer NOT NULL,
    bank integer,
    bank_bic character varying(16),
    city character varying(128),
    name character varying(64),
    zip character varying(24),
    footer boolean,
    country_id integer,
    company_id integer,
    state character varying NOT NULL,
    state_id integer,
    acc_number character varying(64) NOT NULL
);


--
-- Name: TABLE res_partner_bank; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_partner_bank IS 'Bank Accounts';


--
-- Name: COLUMN res_partner_bank.bank_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.bank_name IS 'Bank Name';


--
-- Name: COLUMN res_partner_bank.owner_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.owner_name IS 'Account Owner Name';


--
-- Name: COLUMN res_partner_bank.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.sequence IS 'Sequence';


--
-- Name: COLUMN res_partner_bank.street; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.street IS 'Street';


--
-- Name: COLUMN res_partner_bank.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.partner_id IS 'Account Owner';


--
-- Name: COLUMN res_partner_bank.bank; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.bank IS 'Bank';


--
-- Name: COLUMN res_partner_bank.bank_bic; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.bank_bic IS 'Bank Identifier Code';


--
-- Name: COLUMN res_partner_bank.city; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.city IS 'City';


--
-- Name: COLUMN res_partner_bank.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.name IS 'Bank Account';


--
-- Name: COLUMN res_partner_bank.zip; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.zip IS 'Zip';


--
-- Name: COLUMN res_partner_bank.footer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.footer IS 'Display on Reports';


--
-- Name: COLUMN res_partner_bank.country_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.country_id IS 'Country';


--
-- Name: COLUMN res_partner_bank.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.company_id IS 'Company';


--
-- Name: COLUMN res_partner_bank.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.state IS 'Bank Account Type';


--
-- Name: COLUMN res_partner_bank.state_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.state_id IS 'Fed. State';


--
-- Name: COLUMN res_partner_bank.acc_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank.acc_number IS 'Account Number';


--
-- Name: res_partner_bank_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_partner_bank_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_partner_bank_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_partner_bank_id_seq OWNED BY res_partner_bank.id;


--
-- Name: res_partner_bank_type; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_partner_bank_type (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    code character varying(64) NOT NULL,
    name character varying(64) NOT NULL,
    format_layout text
);


--
-- Name: TABLE res_partner_bank_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_partner_bank_type IS 'Bank Account Type';


--
-- Name: COLUMN res_partner_bank_type.code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank_type.code IS 'Code';


--
-- Name: COLUMN res_partner_bank_type.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank_type.name IS 'Name';


--
-- Name: COLUMN res_partner_bank_type.format_layout; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank_type.format_layout IS 'Format Layout';


--
-- Name: res_partner_bank_type_field; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_partner_bank_type_field (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    bank_type_id integer NOT NULL,
    readonly boolean,
    required boolean,
    name character varying(64) NOT NULL,
    size integer
);


--
-- Name: TABLE res_partner_bank_type_field; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_partner_bank_type_field IS 'Bank type fields';


--
-- Name: COLUMN res_partner_bank_type_field.bank_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank_type_field.bank_type_id IS 'Bank Type';


--
-- Name: COLUMN res_partner_bank_type_field.readonly; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank_type_field.readonly IS 'Readonly';


--
-- Name: COLUMN res_partner_bank_type_field.required; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank_type_field.required IS 'Required';


--
-- Name: COLUMN res_partner_bank_type_field.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank_type_field.name IS 'Field Name';


--
-- Name: COLUMN res_partner_bank_type_field.size; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_bank_type_field.size IS 'Max. Size';


--
-- Name: res_partner_bank_type_field_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_partner_bank_type_field_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_partner_bank_type_field_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_partner_bank_type_field_id_seq OWNED BY res_partner_bank_type_field.id;


--
-- Name: res_partner_bank_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_partner_bank_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_partner_bank_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_partner_bank_type_id_seq OWNED BY res_partner_bank_type.id;


--
-- Name: res_partner_category; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_partner_category (
    id integer NOT NULL,
    parent_left integer,
    parent_right integer,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64) NOT NULL,
    parent_id integer,
    active boolean
);


--
-- Name: TABLE res_partner_category; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_partner_category IS 'Partner Categories';


--
-- Name: COLUMN res_partner_category.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_category.name IS 'Category Name';


--
-- Name: COLUMN res_partner_category.parent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_category.parent_id IS 'Parent Category';


--
-- Name: COLUMN res_partner_category.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_category.active IS 'Active';


--
-- Name: res_partner_category_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_partner_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_partner_category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_partner_category_id_seq OWNED BY res_partner_category.id;


SET default_with_oids = true;

--
-- Name: res_partner_category_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_partner_category_rel (
    category_id integer NOT NULL,
    partner_id integer NOT NULL
);


--
-- Name: TABLE res_partner_category_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_partner_category_rel IS 'RELATION BETWEEN res_partner_category AND res_partner';


SET default_with_oids = false;

--
-- Name: res_partner_event; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_partner_event (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    date timestamp without time zone,
    partner_id integer,
    user_id integer,
    name character varying(64) NOT NULL,
    description text
);


--
-- Name: TABLE res_partner_event; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_partner_event IS 'res.partner.event';


--
-- Name: COLUMN res_partner_event.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_event.date IS 'Date';


--
-- Name: COLUMN res_partner_event.partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_event.partner_id IS 'Partner';


--
-- Name: COLUMN res_partner_event.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_event.user_id IS 'User';


--
-- Name: COLUMN res_partner_event.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_event.name IS 'Events';


--
-- Name: COLUMN res_partner_event.description; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_event.description IS 'Description';


--
-- Name: res_partner_event_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_partner_event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_partner_event_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_partner_event_id_seq OWNED BY res_partner_event.id;


--
-- Name: res_partner_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_partner_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_partner_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_partner_id_seq OWNED BY res_partner.id;


--
-- Name: res_partner_title; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_partner_title (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    domain character varying(24) NOT NULL,
    name character varying(46) NOT NULL,
    shortcut character varying(16) NOT NULL
);


--
-- Name: TABLE res_partner_title; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_partner_title IS 'res.partner.title';


--
-- Name: COLUMN res_partner_title.domain; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_title.domain IS 'Domain';


--
-- Name: COLUMN res_partner_title.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_title.name IS 'Title';


--
-- Name: COLUMN res_partner_title.shortcut; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_partner_title.shortcut IS 'Shortcut';


--
-- Name: res_partner_title_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_partner_title_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_partner_title_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_partner_title_id_seq OWNED BY res_partner_title.id;


--
-- Name: res_payterm; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_payterm (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64)
);


--
-- Name: TABLE res_payterm; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_payterm IS 'Payment term';


--
-- Name: COLUMN res_payterm.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_payterm.name IS 'Payment Term (short name)';


--
-- Name: res_payterm_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_payterm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_payterm_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_payterm_id_seq OWNED BY res_payterm.id;


--
-- Name: res_request; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_request (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    body text,
    name character varying(128) NOT NULL,
    date_sent timestamp without time zone,
    ref_doc2 character varying(128),
    priority character varying NOT NULL,
    ref_doc1 character varying(128),
    state character varying NOT NULL,
    act_from integer NOT NULL,
    ref_partner_id integer,
    active boolean,
    trigger_date timestamp without time zone,
    act_to integer NOT NULL
);


--
-- Name: TABLE res_request; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_request IS 'res.request';


--
-- Name: COLUMN res_request.body; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request.body IS 'Request';


--
-- Name: COLUMN res_request.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request.name IS 'Subject';


--
-- Name: COLUMN res_request.date_sent; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request.date_sent IS 'Date';


--
-- Name: COLUMN res_request.ref_doc2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request.ref_doc2 IS 'Document Ref 2';


--
-- Name: COLUMN res_request.priority; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request.priority IS 'Priority';


--
-- Name: COLUMN res_request.ref_doc1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request.ref_doc1 IS 'Document Ref 1';


--
-- Name: COLUMN res_request.state; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request.state IS 'State';


--
-- Name: COLUMN res_request.act_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request.act_from IS 'From';


--
-- Name: COLUMN res_request.ref_partner_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request.ref_partner_id IS 'Partner Ref.';


--
-- Name: COLUMN res_request.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request.active IS 'Active';


--
-- Name: COLUMN res_request.trigger_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request.trigger_date IS 'Trigger Date';


--
-- Name: COLUMN res_request.act_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request.act_to IS 'To';


--
-- Name: res_request_history; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_request_history (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    body text,
    act_from integer NOT NULL,
    name character varying(128) NOT NULL,
    req_id integer NOT NULL,
    date_sent timestamp without time zone NOT NULL,
    act_to integer NOT NULL
);


--
-- Name: TABLE res_request_history; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_request_history IS 'res.request.history';


--
-- Name: COLUMN res_request_history.body; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request_history.body IS 'Body';


--
-- Name: COLUMN res_request_history.act_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request_history.act_from IS 'From';


--
-- Name: COLUMN res_request_history.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request_history.name IS 'Summary';


--
-- Name: COLUMN res_request_history.req_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request_history.req_id IS 'Request';


--
-- Name: COLUMN res_request_history.date_sent; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request_history.date_sent IS 'Date sent';


--
-- Name: COLUMN res_request_history.act_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request_history.act_to IS 'To';


--
-- Name: res_request_history_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_request_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_request_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_request_history_id_seq OWNED BY res_request_history.id;


--
-- Name: res_request_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_request_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_request_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_request_id_seq OWNED BY res_request.id;


--
-- Name: res_request_link; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_request_link (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    priority integer,
    object character varying(64) NOT NULL,
    name character varying(64) NOT NULL
);


--
-- Name: TABLE res_request_link; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_request_link IS 'res.request.link';


--
-- Name: COLUMN res_request_link.priority; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request_link.priority IS 'Priority';


--
-- Name: COLUMN res_request_link.object; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request_link.object IS 'Object';


--
-- Name: COLUMN res_request_link.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_request_link.name IS 'Name';


--
-- Name: res_request_link_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_request_link_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_request_link_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_request_link_id_seq OWNED BY res_request_link.id;


--
-- Name: res_users; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_users (
    id integer NOT NULL,
    name character varying(64) NOT NULL,
    active boolean DEFAULT true,
    login character varying(64) NOT NULL,
    password character varying(64) DEFAULT NULL::character varying,
    email character varying(64) DEFAULT NULL::character varying,
    context_tz character varying(64) DEFAULT NULL::character varying,
    signature text,
    context_lang character varying(64) DEFAULT ''::character varying NOT NULL,
    company_id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    menu_id integer,
    menu_tips boolean,
    date timestamp without time zone,
    action_id integer,
    user_email character varying(64),
    context_section_id integer,
    context_project_id integer
);


--
-- Name: COLUMN res_users.menu_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_users.menu_id IS 'Menu Action';


--
-- Name: COLUMN res_users.menu_tips; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_users.menu_tips IS 'Menu Tips';


--
-- Name: COLUMN res_users.date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_users.date IS 'Latest Connection';


--
-- Name: COLUMN res_users.action_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_users.action_id IS 'Home Action';


--
-- Name: COLUMN res_users.user_email; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_users.user_email IS 'Email';


--
-- Name: COLUMN res_users.context_section_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_users.context_section_id IS 'Sales Team';


--
-- Name: COLUMN res_users.context_project_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_users.context_project_id IS 'Project';


--
-- Name: res_users_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_users_id_seq OWNED BY res_users.id;


--
-- Name: res_widget; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_widget (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    content text NOT NULL,
    title character varying(64) NOT NULL
);


--
-- Name: TABLE res_widget; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_widget IS 'res.widget';


--
-- Name: COLUMN res_widget.content; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_widget.content IS 'Content';


--
-- Name: COLUMN res_widget.title; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_widget.title IS 'Title';


--
-- Name: res_widget_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_widget_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_widget_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_widget_id_seq OWNED BY res_widget.id;


--
-- Name: res_widget_user; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_widget_user (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    user_id integer,
    widget_id integer NOT NULL,
    sequence integer
);


--
-- Name: TABLE res_widget_user; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_widget_user IS 'res.widget.user';


--
-- Name: COLUMN res_widget_user.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_widget_user.user_id IS 'User';


--
-- Name: COLUMN res_widget_user.widget_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_widget_user.widget_id IS 'Widget';


--
-- Name: COLUMN res_widget_user.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_widget_user.sequence IS 'Sequence';


--
-- Name: res_widget_user_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_widget_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_widget_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_widget_user_id_seq OWNED BY res_widget_user.id;


--
-- Name: res_widget_wizard; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE res_widget_wizard (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    widgets_list character varying NOT NULL
);


--
-- Name: TABLE res_widget_wizard; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE res_widget_wizard IS 'Add a widget for User';


--
-- Name: COLUMN res_widget_wizard.widgets_list; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN res_widget_wizard.widgets_list IS 'Widget';


--
-- Name: res_widget_wizard_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE res_widget_wizard_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: res_widget_wizard_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE res_widget_wizard_id_seq OWNED BY res_widget_wizard.id;


--
-- Name: reservation_proprio_res_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE reservation_proprio_res_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: reservation_proprio; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE reservation_proprio (
    res_id integer DEFAULT nextval('reservation_proprio_res_id_seq'::regclass) NOT NULL,
    res_type character varying NOT NULL,
    heb_fk integer NOT NULL,
    pro_fk integer,
    res_date timestamp without time zone NOT NULL,
    res_date_cre timestamp without time zone NOT NULL
);


--
-- Name: resource_calendar; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE resource_calendar (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    manager integer,
    name character varying(64) NOT NULL,
    company_id integer
);


--
-- Name: TABLE resource_calendar; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE resource_calendar IS 'Resource Calendar';


--
-- Name: COLUMN resource_calendar.manager; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar.manager IS 'Workgroup manager';


--
-- Name: COLUMN resource_calendar.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar.name IS 'Name';


--
-- Name: COLUMN resource_calendar.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar.company_id IS 'Company';


--
-- Name: resource_calendar_attendance; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE resource_calendar_attendance (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    dayofweek character varying NOT NULL,
    hour_from double precision NOT NULL,
    name character varying(64) NOT NULL,
    calendar_id integer NOT NULL,
    date_from date,
    hour_to double precision NOT NULL
);


--
-- Name: TABLE resource_calendar_attendance; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE resource_calendar_attendance IS 'Work Detail';


--
-- Name: COLUMN resource_calendar_attendance.dayofweek; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar_attendance.dayofweek IS 'Day of week';


--
-- Name: COLUMN resource_calendar_attendance.hour_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar_attendance.hour_from IS 'Work from';


--
-- Name: COLUMN resource_calendar_attendance.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar_attendance.name IS 'Name';


--
-- Name: COLUMN resource_calendar_attendance.calendar_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar_attendance.calendar_id IS 'Resource''s Calendar';


--
-- Name: COLUMN resource_calendar_attendance.date_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar_attendance.date_from IS 'Starting date';


--
-- Name: COLUMN resource_calendar_attendance.hour_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar_attendance.hour_to IS 'Work to';


--
-- Name: resource_calendar_attendance_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE resource_calendar_attendance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: resource_calendar_attendance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE resource_calendar_attendance_id_seq OWNED BY resource_calendar_attendance.id;


--
-- Name: resource_calendar_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE resource_calendar_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: resource_calendar_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE resource_calendar_id_seq OWNED BY resource_calendar.id;


--
-- Name: resource_calendar_leaves; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE resource_calendar_leaves (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    name character varying(64),
    resource_id integer,
    calendar_id integer,
    date_from timestamp without time zone NOT NULL,
    date_to timestamp without time zone NOT NULL,
    company_id integer
);


--
-- Name: TABLE resource_calendar_leaves; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE resource_calendar_leaves IS 'Leave Detail';


--
-- Name: COLUMN resource_calendar_leaves.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar_leaves.name IS 'Name';


--
-- Name: COLUMN resource_calendar_leaves.resource_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar_leaves.resource_id IS 'Resource';


--
-- Name: COLUMN resource_calendar_leaves.calendar_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar_leaves.calendar_id IS 'Working time';


--
-- Name: COLUMN resource_calendar_leaves.date_from; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar_leaves.date_from IS 'Start Date';


--
-- Name: COLUMN resource_calendar_leaves.date_to; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar_leaves.date_to IS 'End Date';


--
-- Name: COLUMN resource_calendar_leaves.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_calendar_leaves.company_id IS 'Company';


--
-- Name: resource_calendar_leaves_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE resource_calendar_leaves_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: resource_calendar_leaves_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE resource_calendar_leaves_id_seq OWNED BY resource_calendar_leaves.id;


--
-- Name: resource_resource; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE resource_resource (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    time_efficiency double precision NOT NULL,
    code character varying(16),
    user_id integer,
    name character varying(64) NOT NULL,
    company_id integer,
    active boolean,
    calendar_id integer,
    resource_type character varying NOT NULL
);


--
-- Name: TABLE resource_resource; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE resource_resource IS 'Resource Detail';


--
-- Name: COLUMN resource_resource.time_efficiency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_resource.time_efficiency IS 'Efficiency factor';


--
-- Name: COLUMN resource_resource.code; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_resource.code IS 'Code';


--
-- Name: COLUMN resource_resource.user_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_resource.user_id IS 'User';


--
-- Name: COLUMN resource_resource.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_resource.name IS 'Name';


--
-- Name: COLUMN resource_resource.company_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_resource.company_id IS 'Company';


--
-- Name: COLUMN resource_resource.active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_resource.active IS 'Active';


--
-- Name: COLUMN resource_resource.calendar_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_resource.calendar_id IS 'Working Time';


--
-- Name: COLUMN resource_resource.resource_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN resource_resource.resource_type IS 'Resource Type';


--
-- Name: resource_resource_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE resource_resource_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: resource_resource_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE resource_resource_id_seq OWNED BY resource_resource.id;


SET default_with_oids = true;

--
-- Name: rule_group_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE rule_group_rel (
    rule_group_id integer NOT NULL,
    group_id integer NOT NULL
);


--
-- Name: TABLE rule_group_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE rule_group_rel IS 'RELATION BETWEEN ir_rule AND res_groups';


--
-- Name: sale_member_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE sale_member_rel (
    section_id integer NOT NULL,
    member_id integer NOT NULL
);


--
-- Name: TABLE sale_member_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE sale_member_rel IS 'RELATION BETWEEN crm_case_section AND res_users';


--
-- Name: section_stage_rel; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE section_stage_rel (
    stage_id integer NOT NULL,
    section_id integer NOT NULL
);


--
-- Name: TABLE section_stage_rel; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE section_stage_rel IS 'RELATION BETWEEN crm_case_stage AND crm_case_section';


SET default_with_oids = false;

--
-- Name: spatial_ref_sys; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE spatial_ref_sys (
    srid integer NOT NULL,
    auth_name character varying(256),
    auth_srid integer,
    srtext character varying(2048),
    proj4text character varying(2048)
);


SET default_with_oids = true;

--
-- Name: table_hote; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE table_hote (
    tabho_pk integer NOT NULL,
    tabho_type_fr character varying,
    tabho_type_nl character varying,
    tabho_type_de character varying,
    tabho_type_it character varying,
    tabho_type_en character varying
);


--
-- Name: table_hote_tabho_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE table_hote_tabho_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: table_hote_tabho_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE table_hote_tabho_pk_seq OWNED BY table_hote.tabho_pk;


--
-- Name: task_by_days; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW task_by_days AS
    SELECT min(pt.id) AS id, to_char(pt.create_date, 'YYYY-MM-DD'::text) AS day, count(*) AS total_task, pt.state, pt.project_id FROM project_task pt GROUP BY to_char(pt.create_date, 'YYYY-MM-DD'::text), pt.state, pt.project_id;


--
-- Name: type_heb; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE type_heb (
    type_heb_pk integer NOT NULL,
    type_heb_code character varying,
    type_heb_nom character varying,
    type_heb_nom_nl character varying,
    type_heb_nom_de character varying,
    type_heb_nom_it character varying,
    type_heb_nom_uk character varying,
    type_heb_id character varying,
    type_heb_id_nl character varying,
    type_heb_id_de character varying,
    type_heb_id_it character varying,
    type_heb_id_uk character varying,
    type_heb_type character varying
);


--
-- Name: type_heb_type_heb_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE type_heb_type_heb_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: type_heb_type_heb_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE type_heb_type_heb_pk_seq OWNED BY type_heb.type_heb_pk;


--
-- Name: type_info_pratique; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE type_info_pratique (
    typinfoprat_pk integer NOT NULL,
    typinfoprat_nom_fr character varying,
    typinfoprat_nom_nl character varying,
    typinfoprat_nom_en character varying,
    typinfoprat_nom_it character varying,
    typinfoprat_nom_de character varying
);


--
-- Name: type_info_pratique_typinfoprat_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE type_info_pratique_typinfoprat_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: type_info_pratique_typinfoprat_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE type_info_pratique_typinfoprat_pk_seq OWNED BY type_info_pratique.typinfoprat_pk;


--
-- Name: type_info_touristique; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE type_info_touristique (
    typinfotour_pk integer NOT NULL,
    typinfotour_nom_fr character varying,
    typinfotour_nom_nl character varying,
    typinfotour_nom_en character varying,
    typinfotour_nom_it character varying,
    typinfotour_nom_de character varying
);


--
-- Name: type_info_touristique_typinfotour_pk_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE type_info_touristique_typinfotour_pk_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: type_info_touristique_typinfotour_pk_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE type_info_touristique_typinfotour_pk_seq OWNED BY type_info_touristique.typinfotour_pk;


SET default_with_oids = false;

--
-- Name: user_preferences_config; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE user_preferences_config (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    context_tz character varying(64),
    menu_tips boolean,
    context_lang character varying NOT NULL,
    view character varying NOT NULL
);


--
-- Name: TABLE user_preferences_config; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE user_preferences_config IS 'user.preferences.config';


--
-- Name: COLUMN user_preferences_config.context_tz; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN user_preferences_config.context_tz IS 'Timezone';


--
-- Name: COLUMN user_preferences_config.menu_tips; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN user_preferences_config.menu_tips IS 'Display Tips';


--
-- Name: COLUMN user_preferences_config.context_lang; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN user_preferences_config.context_lang IS 'Language';


--
-- Name: COLUMN user_preferences_config.view; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN user_preferences_config.view IS 'Interface';


--
-- Name: user_preferences_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE user_preferences_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: user_preferences_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE user_preferences_config_id_seq OWNED BY user_preferences_config.id;


--
-- Name: wizard_ir_model_menu_create; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE wizard_ir_model_menu_create (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    menu_id integer NOT NULL,
    name character varying(64) NOT NULL
);


--
-- Name: TABLE wizard_ir_model_menu_create; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE wizard_ir_model_menu_create IS 'wizard.ir.model.menu.create';


--
-- Name: COLUMN wizard_ir_model_menu_create.menu_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN wizard_ir_model_menu_create.menu_id IS 'Parent Menu';


--
-- Name: COLUMN wizard_ir_model_menu_create.name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN wizard_ir_model_menu_create.name IS 'Menu Name';


--
-- Name: wizard_ir_model_menu_create_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE wizard_ir_model_menu_create_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: wizard_ir_model_menu_create_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE wizard_ir_model_menu_create_id_seq OWNED BY wizard_ir_model_menu_create.id;


--
-- Name: wizard_ir_model_menu_create_line; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE wizard_ir_model_menu_create_line (
    id integer NOT NULL,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    view_id integer,
    sequence integer,
    wizard_id integer,
    view_type character varying NOT NULL
);


--
-- Name: TABLE wizard_ir_model_menu_create_line; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE wizard_ir_model_menu_create_line IS 'wizard.ir.model.menu.create.line';


--
-- Name: COLUMN wizard_ir_model_menu_create_line.view_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN wizard_ir_model_menu_create_line.view_id IS 'View';


--
-- Name: COLUMN wizard_ir_model_menu_create_line.sequence; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN wizard_ir_model_menu_create_line.sequence IS 'Sequence';


--
-- Name: COLUMN wizard_ir_model_menu_create_line.wizard_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN wizard_ir_model_menu_create_line.wizard_id IS 'Wizard';


--
-- Name: COLUMN wizard_ir_model_menu_create_line.view_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN wizard_ir_model_menu_create_line.view_type IS 'View Type';


--
-- Name: wizard_ir_model_menu_create_line_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE wizard_ir_model_menu_create_line_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: wizard_ir_model_menu_create_line_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE wizard_ir_model_menu_create_line_id_seq OWNED BY wizard_ir_model_menu_create_line.id;


--
-- Name: wkf; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE wkf (
    id integer NOT NULL,
    name character varying(64) NOT NULL,
    osv character varying(64) NOT NULL,
    on_create boolean DEFAULT false,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer
);


--
-- Name: wkf_activity; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE wkf_activity (
    id integer NOT NULL,
    wkf_id integer NOT NULL,
    subflow_id integer,
    split_mode character varying(3) DEFAULT 'XOR'::character varying NOT NULL,
    join_mode character varying(3) DEFAULT 'XOR'::character varying NOT NULL,
    kind character varying(16) DEFAULT 'dummy'::character varying NOT NULL,
    name character varying(64) NOT NULL,
    signal_send character varying(32) DEFAULT NULL::character varying,
    flow_start boolean DEFAULT false,
    flow_stop boolean DEFAULT false,
    action text,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    action_id integer
);


--
-- Name: COLUMN wkf_activity.action_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN wkf_activity.action_id IS 'Server Action';


--
-- Name: wkf_activity_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE wkf_activity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: wkf_activity_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE wkf_activity_id_seq OWNED BY wkf_activity.id;


--
-- Name: wkf_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE wkf_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: wkf_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE wkf_id_seq OWNED BY wkf.id;


--
-- Name: wkf_instance; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE wkf_instance (
    id integer NOT NULL,
    wkf_id integer,
    uid integer,
    res_id integer,
    res_type character varying(64),
    state character varying(32) DEFAULT 'active'::character varying
);


--
-- Name: wkf_instance_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE wkf_instance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: wkf_instance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE wkf_instance_id_seq OWNED BY wkf_instance.id;


--
-- Name: wkf_logs; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE wkf_logs (
    id integer NOT NULL,
    res_type character varying(128) NOT NULL,
    res_id integer NOT NULL,
    uid integer,
    act_id integer,
    "time" time without time zone NOT NULL,
    info character varying(128) DEFAULT NULL::character varying
);


--
-- Name: wkf_logs_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE wkf_logs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: wkf_logs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE wkf_logs_id_seq OWNED BY wkf_logs.id;


--
-- Name: wkf_transition; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE wkf_transition (
    id integer NOT NULL,
    act_from integer NOT NULL,
    act_to integer NOT NULL,
    condition character varying(128) DEFAULT NULL::character varying NOT NULL,
    trigger_type character varying(128) DEFAULT NULL::character varying,
    trigger_expr_id character varying(128) DEFAULT NULL::character varying,
    signal character varying(64) DEFAULT NULL::character varying,
    group_id integer,
    create_uid integer,
    create_date timestamp without time zone,
    write_date timestamp without time zone,
    write_uid integer,
    trigger_model character varying(128)
);


--
-- Name: COLUMN wkf_transition.trigger_model; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN wkf_transition.trigger_model IS 'Trigger Object';


--
-- Name: wkf_transition_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE wkf_transition_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: wkf_transition_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE wkf_transition_id_seq OWNED BY wkf_transition.id;


--
-- Name: wkf_triggers; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE wkf_triggers (
    id integer NOT NULL,
    instance_id integer,
    workitem_id integer NOT NULL,
    model character varying(128),
    res_id integer
);


--
-- Name: TABLE wkf_triggers; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE wkf_triggers IS 'workflow.triggers';


--
-- Name: COLUMN wkf_triggers.instance_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN wkf_triggers.instance_id IS 'Destination Instance';


--
-- Name: COLUMN wkf_triggers.workitem_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN wkf_triggers.workitem_id IS 'Workitem';


--
-- Name: COLUMN wkf_triggers.model; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN wkf_triggers.model IS 'Object';


--
-- Name: COLUMN wkf_triggers.res_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN wkf_triggers.res_id IS 'Resource ID';


--
-- Name: wkf_triggers_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE wkf_triggers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: wkf_triggers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE wkf_triggers_id_seq OWNED BY wkf_triggers.id;


--
-- Name: wkf_witm_trans; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE wkf_witm_trans (
    trans_id integer NOT NULL,
    inst_id integer NOT NULL
);


--
-- Name: wkf_workitem; Type: TABLE; Schema: public; Owner: -; Tablespace: 
--

CREATE TABLE wkf_workitem (
    id integer NOT NULL,
    act_id integer NOT NULL,
    inst_id integer NOT NULL,
    subflow_id integer,
    state character varying(64) DEFAULT 'blocked'::character varying
);


--
-- Name: wkf_workitem_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE wkf_workitem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: wkf_workitem_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE wkf_workitem_id_seq OWNED BY wkf_workitem.id;


SET search_path = txid, pg_catalog;

--
-- Name: epoch; Type: TABLE; Schema: txid; Owner: -; Tablespace: 
--

CREATE TABLE epoch (
    epoch bigint,
    last_value bigint
);


SET search_path = buzz, pg_catalog;

--
-- Name: dest_pk; Type: DEFAULT; Schema: buzz; Owner: -
--

ALTER TABLE ONLY destinataire ALTER COLUMN dest_pk SET DEFAULT nextval('destinataire_dest_pk_seq'::regclass);


--
-- Name: gite_pk; Type: DEFAULT; Schema: buzz; Owner: -
--

ALTER TABLE ONLY gite ALTER COLUMN gite_pk SET DEFAULT nextval('gite_gite_pk_seq'::regclass);


--
-- Name: infowin_pk; Type: DEFAULT; Schema: buzz; Owner: -
--

ALTER TABLE ONLY info_winner ALTER COLUMN infowin_pk SET DEFAULT nextval('info_winner_infowin_pk_seq'::regclass);


--
-- Name: player_pk; Type: DEFAULT; Schema: buzz; Owner: -
--

ALTER TABLE ONLY player ALTER COLUMN player_pk SET DEFAULT nextval('player_player_pk_seq'::regclass);


--
-- Name: winner_pk; Type: DEFAULT; Schema: buzz; Owner: -
--

ALTER TABLE ONLY winner ALTER COLUMN winner_pk SET DEFAULT nextval('winner_winner_pk_seq'::regclass);


SET search_path = londiste, pg_catalog;

--
-- Name: nr; Type: DEFAULT; Schema: londiste; Owner: -
--

ALTER TABLE ONLY provider_seq ALTER COLUMN nr SET DEFAULT nextval('provider_seq_nr_seq'::regclass);


--
-- Name: nr; Type: DEFAULT; Schema: londiste; Owner: -
--

ALTER TABLE ONLY provider_table ALTER COLUMN nr SET DEFAULT nextval('provider_table_nr_seq'::regclass);


--
-- Name: nr; Type: DEFAULT; Schema: londiste; Owner: -
--

ALTER TABLE ONLY subscriber_seq ALTER COLUMN nr SET DEFAULT nextval('subscriber_seq_nr_seq'::regclass);


--
-- Name: nr; Type: DEFAULT; Schema: londiste; Owner: -
--

ALTER TABLE ONLY subscriber_table ALTER COLUMN nr SET DEFAULT nextval('subscriber_table_nr_seq'::regclass);


SET search_path = pgq, pg_catalog;

--
-- Name: co_id; Type: DEFAULT; Schema: pgq; Owner: -
--

ALTER TABLE ONLY consumer ALTER COLUMN co_id SET DEFAULT nextval('consumer_co_id_seq'::regclass);


--
-- Name: ev_txid; Type: DEFAULT; Schema: pgq; Owner: -
--

ALTER TABLE ONLY event_3 ALTER COLUMN ev_txid SET DEFAULT txid_current();


--
-- Name: ev_id; Type: DEFAULT; Schema: pgq; Owner: -
--

ALTER TABLE ONLY event_3_0 ALTER COLUMN ev_id SET DEFAULT nextval('event_3_id_seq'::regclass);


--
-- Name: ev_txid; Type: DEFAULT; Schema: pgq; Owner: -
--

ALTER TABLE ONLY event_3_0 ALTER COLUMN ev_txid SET DEFAULT txid_current();


--
-- Name: ev_id; Type: DEFAULT; Schema: pgq; Owner: -
--

ALTER TABLE ONLY event_3_1 ALTER COLUMN ev_id SET DEFAULT nextval('event_3_id_seq'::regclass);


--
-- Name: ev_txid; Type: DEFAULT; Schema: pgq; Owner: -
--

ALTER TABLE ONLY event_3_1 ALTER COLUMN ev_txid SET DEFAULT txid_current();


--
-- Name: ev_id; Type: DEFAULT; Schema: pgq; Owner: -
--

ALTER TABLE ONLY event_3_2 ALTER COLUMN ev_id SET DEFAULT nextval('event_3_id_seq'::regclass);


--
-- Name: ev_txid; Type: DEFAULT; Schema: pgq; Owner: -
--

ALTER TABLE ONLY event_3_2 ALTER COLUMN ev_txid SET DEFAULT txid_current();


--
-- Name: queue_id; Type: DEFAULT; Schema: pgq; Owner: -
--

ALTER TABLE ONLY queue ALTER COLUMN queue_id SET DEFAULT nextval('queue_queue_id_seq'::regclass);


--
-- Name: sub_id; Type: DEFAULT; Schema: pgq; Owner: -
--

ALTER TABLE ONLY subscription ALTER COLUMN sub_id SET DEFAULT nextval('subscription_sub_id_seq'::regclass);


SET search_path = public, pg_catalog;

--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_account ALTER COLUMN id SET DEFAULT nextval('account_analytic_account_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_line ALTER COLUMN id SET DEFAULT nextval('account_analytic_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule ALTER COLUMN id SET DEFAULT nextval('base_action_rule_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_calendar_invite_attendee ALTER COLUMN id SET DEFAULT nextval('base_calendar_invite_attendee_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_language_export ALTER COLUMN id SET DEFAULT nextval('base_language_export_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_language_import ALTER COLUMN id SET DEFAULT nextval('base_language_import_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_language_install ALTER COLUMN id SET DEFAULT nextval('base_language_install_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_module_configuration ALTER COLUMN id SET DEFAULT nextval('base_module_configuration_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_module_import ALTER COLUMN id SET DEFAULT nextval('base_module_import_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_module_update ALTER COLUMN id SET DEFAULT nextval('base_module_update_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_module_upgrade ALTER COLUMN id SET DEFAULT nextval('base_module_upgrade_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_setup_terminology ALTER COLUMN id SET DEFAULT nextval('base_setup_terminology_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_update_translations ALTER COLUMN id SET DEFAULT nextval('base_update_translations_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_board ALTER COLUMN id SET DEFAULT nextval('board_board_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_board_line ALTER COLUMN id SET DEFAULT nextval('board_board_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_menu_create ALTER COLUMN id SET DEFAULT nextval('board_menu_create_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_alarm ALTER COLUMN id SET DEFAULT nextval('calendar_alarm_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_attendee ALTER COLUMN id SET DEFAULT nextval('calendar_attendee_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_event ALTER COLUMN id SET DEFAULT nextval('calendar_event_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_todo ALTER COLUMN id SET DEFAULT nextval('calendar_todo_id_seq'::regclass);


--
-- Name: cgt_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY cgt_class_reco ALTER COLUMN cgt_pk SET DEFAULT nextval('cgt_class_reco_cgt_pk_seq'::regclass);


--
-- Name: cha_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY charge ALTER COLUMN cha_pk SET DEFAULT nextval('charge_cha_pk_seq'::regclass);


--
-- Name: civ_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY civilite ALTER COLUMN civ_pk SET DEFAULT nextval('civilite_civ_pk_seq'::regclass);


--
-- Name: com_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY commande ALTER COLUMN com_pk SET DEFAULT nextval('commande_com_pk_seq'::regclass);


--
-- Name: com_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY commune ALTER COLUMN com_pk SET DEFAULT nextval('commune_com_pk_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_add_note ALTER COLUMN id SET DEFAULT nextval('crm_add_note_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_categ ALTER COLUMN id SET DEFAULT nextval('crm_case_categ_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_channel ALTER COLUMN id SET DEFAULT nextval('crm_case_channel_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_resource_type ALTER COLUMN id SET DEFAULT nextval('crm_case_resource_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_section ALTER COLUMN id SET DEFAULT nextval('crm_case_section_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_stage ALTER COLUMN id SET DEFAULT nextval('crm_case_stage_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead ALTER COLUMN id SET DEFAULT nextval('crm_lead_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2opportunity_partner ALTER COLUMN id SET DEFAULT nextval('crm_lead2opportunity_partner_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass ALTER COLUMN id SET DEFAULT nextval('crm_lead2opportunity_partner_mass_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2partner ALTER COLUMN id SET DEFAULT nextval('crm_lead2partner_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting ALTER COLUMN id SET DEFAULT nextval('crm_meeting_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_merge_opportunity ALTER COLUMN id SET DEFAULT nextval('crm_merge_opportunity_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_opportunity2phonecall ALTER COLUMN id SET DEFAULT nextval('crm_opportunity2phonecall_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_partner2opportunity ALTER COLUMN id SET DEFAULT nextval('crm_partner2opportunity_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall ALTER COLUMN id SET DEFAULT nextval('crm_phonecall_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2opportunity ALTER COLUMN id SET DEFAULT nextval('crm_phonecall2opportunity_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2partner ALTER COLUMN id SET DEFAULT nextval('crm_phonecall2partner_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2phonecall ALTER COLUMN id SET DEFAULT nextval('crm_phonecall2phonecall_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_segmentation ALTER COLUMN id SET DEFAULT nextval('crm_segmentation_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_segmentation_line ALTER COLUMN id SET DEFAULT nextval('crm_segmentation_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY decimal_precision ALTER COLUMN id SET DEFAULT nextval('decimal_precision_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY fetchmail_server ALTER COLUMN id SET DEFAULT nextval('fetchmail_server_id_seq'::regclass);


--
-- Name: git_lab_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY gite_label ALTER COLUMN git_lab_pk SET DEFAULT nextval('gite_label_git_lab_pk_seq'::regclass);


--
-- Name: git_them_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY gite_theme ALTER COLUMN git_them_pk SET DEFAULT nextval('gite_theme_git_them_pk_seq'::regclass);


--
-- Name: gwc_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY gw_callcenter ALTER COLUMN gwc_pk SET DEFAULT nextval('gw_callcenter_gwc_pk_seq'::regclass);


--
-- Name: htl_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY heb_theme_label ALTER COLUMN htl_pk SET DEFAULT nextval('heb_theme_label_htl_pk_seq'::regclass);


--
-- Name: heb_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY hebergement ALTER COLUMN heb_pk SET DEFAULT nextval('hebergement_heb_pk_seq'::regclass);


--
-- Name: heb_app_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY hebergement_app ALTER COLUMN heb_app_pk SET DEFAULT nextval('hebergement_app_heb_app_pk_seq'::regclass);


--
-- Name: heb_maj_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY hebergement_maj ALTER COLUMN heb_maj_pk SET DEFAULT nextval('hebergement_maj_heb_maj_pk_seq'::regclass);


--
-- Name: heb_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY hebergement_tempo ALTER COLUMN heb_pk SET DEFAULT nextval('hebergement_tempo_heb_pk_seq'::regclass);


--
-- Name: heb_vid_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY hebergement_video ALTER COLUMN heb_vid_pk SET DEFAULT nextval('hebergement_video_heb_vid_pk_seq'::regclass);


--
-- Name: infoprat_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY info_pratique ALTER COLUMN infoprat_pk SET DEFAULT nextval('info_pratique_infoprat_pk_seq'::regclass);


--
-- Name: infotour_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY info_touristique ALTER COLUMN infotour_pk SET DEFAULT nextval('info_touristique_infotour_pk_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_client ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: name; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_client ALTER COLUMN name SET DEFAULT ''::character varying;


--
-- Name: type; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_client ALTER COLUMN type SET DEFAULT 'window'::character varying;


--
-- Name: usage; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_client ALTER COLUMN usage SET DEFAULT NULL::character varying;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_report_custom ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: name; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_report_custom ALTER COLUMN name SET DEFAULT ''::character varying;


--
-- Name: type; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_report_custom ALTER COLUMN type SET DEFAULT 'window'::character varying;


--
-- Name: usage; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_report_custom ALTER COLUMN usage SET DEFAULT NULL::character varying;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_report_xml ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: name; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_report_xml ALTER COLUMN name SET DEFAULT ''::character varying;


--
-- Name: type; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_report_xml ALTER COLUMN type SET DEFAULT 'window'::character varying;


--
-- Name: usage; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_report_xml ALTER COLUMN usage SET DEFAULT NULL::character varying;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_server ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: name; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_server ALTER COLUMN name SET DEFAULT ''::character varying;


--
-- Name: type; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_server ALTER COLUMN type SET DEFAULT 'window'::character varying;


--
-- Name: usage; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_server ALTER COLUMN usage SET DEFAULT NULL::character varying;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_url ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: name; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_url ALTER COLUMN name SET DEFAULT ''::character varying;


--
-- Name: type; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_url ALTER COLUMN type SET DEFAULT 'window'::character varying;


--
-- Name: usage; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_url ALTER COLUMN usage SET DEFAULT NULL::character varying;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_window ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: name; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_window ALTER COLUMN name SET DEFAULT ''::character varying;


--
-- Name: type; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_window ALTER COLUMN type SET DEFAULT 'window'::character varying;


--
-- Name: usage; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_window ALTER COLUMN usage SET DEFAULT NULL::character varying;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_window_view ALTER COLUMN id SET DEFAULT nextval('ir_act_window_view_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_wizard ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: name; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_wizard ALTER COLUMN name SET DEFAULT ''::character varying;


--
-- Name: type; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_wizard ALTER COLUMN type SET DEFAULT 'window'::character varying;


--
-- Name: usage; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_wizard ALTER COLUMN usage SET DEFAULT NULL::character varying;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions ALTER COLUMN id SET DEFAULT nextval('ir_actions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions_configuration_wizard ALTER COLUMN id SET DEFAULT nextval('ir_actions_configuration_wizard_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions_todo ALTER COLUMN id SET DEFAULT nextval('ir_actions_todo_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions_todo_category ALTER COLUMN id SET DEFAULT nextval('ir_actions_todo_category_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_attachment ALTER COLUMN id SET DEFAULT nextval('ir_attachment_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_config_parameter ALTER COLUMN id SET DEFAULT nextval('ir_config_parameter_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_cron ALTER COLUMN id SET DEFAULT nextval('ir_cron_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_default ALTER COLUMN id SET DEFAULT nextval('ir_default_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_exports ALTER COLUMN id SET DEFAULT nextval('ir_exports_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_exports_line ALTER COLUMN id SET DEFAULT nextval('ir_exports_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_filters ALTER COLUMN id SET DEFAULT nextval('ir_filters_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_mail_server ALTER COLUMN id SET DEFAULT nextval('ir_mail_server_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model ALTER COLUMN id SET DEFAULT nextval('ir_model_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_access ALTER COLUMN id SET DEFAULT nextval('ir_model_access_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_data ALTER COLUMN id SET DEFAULT nextval('ir_model_data_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_fields ALTER COLUMN id SET DEFAULT nextval('ir_model_fields_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_module_category ALTER COLUMN id SET DEFAULT nextval('ir_module_category_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_module_module ALTER COLUMN id SET DEFAULT nextval('ir_module_module_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_module_module_dependency ALTER COLUMN id SET DEFAULT nextval('ir_module_module_dependency_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_property ALTER COLUMN id SET DEFAULT nextval('ir_property_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_rule ALTER COLUMN id SET DEFAULT nextval('ir_rule_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_sequence ALTER COLUMN id SET DEFAULT nextval('ir_sequence_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_sequence_type ALTER COLUMN id SET DEFAULT nextval('ir_sequence_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_server_object_lines ALTER COLUMN id SET DEFAULT nextval('ir_server_object_lines_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_translation ALTER COLUMN id SET DEFAULT nextval('ir_translation_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_menu ALTER COLUMN id SET DEFAULT nextval('ir_ui_menu_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view ALTER COLUMN id SET DEFAULT nextval('ir_ui_view_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view_custom ALTER COLUMN id SET DEFAULT nextval('ir_ui_view_custom_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view_sc ALTER COLUMN id SET DEFAULT nextval('ir_ui_view_sc_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_values ALTER COLUMN id SET DEFAULT nextval('ir_values_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_wizard_screen ALTER COLUMN id SET DEFAULT nextval('ir_wizard_screen_id_seq'::regclass);


--
-- Name: heb_nombre_epis; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY link_hebergement_epis ALTER COLUMN heb_nombre_epis SET DEFAULT nextval('link_hebergement_epis_heb_nombre_epis_seq'::regclass);


--
-- Name: link_met_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY link_hebergement_metadata ALTER COLUMN link_met_pk SET DEFAULT nextval('link_hebergement_metadata_link_met_pk_seq'::regclass);


--
-- Name: pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY link_hebergement_metadata_update ALTER COLUMN pk SET DEFAULT nextval('link_hebergement_metadata_update_pk_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_compose_message ALTER COLUMN id SET DEFAULT nextval('mail_compose_message_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_message ALTER COLUMN id SET DEFAULT nextval('mail_message_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_message_common ALTER COLUMN id SET DEFAULT nextval('mail_message_common_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_thread ALTER COLUMN id SET DEFAULT nextval('mail_thread_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY maintenance_contract ALTER COLUMN id SET DEFAULT nextval('maintenance_contract_id_seq'::regclass);


--
-- Name: mais_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY maison_tourisme ALTER COLUMN mais_pk SET DEFAULT nextval('maison_tourisme_mais_pk_seq'::regclass);


--
-- Name: blacklist_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY map_blacklist ALTER COLUMN blacklist_pk SET DEFAULT nextval('map_blacklist_blacklist_pk_seq'::regclass);


--
-- Name: ext_data_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY map_external_data ALTER COLUMN ext_data_pk SET DEFAULT nextval('map_external_data_ext_data_pk_seq'::regclass);


--
-- Name: met_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY metadata ALTER COLUMN met_pk SET DEFAULT nextval('metadata_met_pk_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY migrade_application_installer_modules ALTER COLUMN id SET DEFAULT nextval('migrade_application_installer_modules_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY multi_company_default ALTER COLUMN id SET DEFAULT nextval('multi_company_default_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY osv_memory_autovacuum ALTER COLUMN id SET DEFAULT nextval('osv_memory_autovacuum_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY partner_clear_ids ALTER COLUMN id SET DEFAULT nextval('partner_clear_ids_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY partner_massmail_wizard ALTER COLUMN id SET DEFAULT nextval('partner_massmail_wizard_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY partner_sms_send ALTER COLUMN id SET DEFAULT nextval('partner_sms_send_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY partner_wizard_ean_check ALTER COLUMN id SET DEFAULT nextval('partner_wizard_ean_check_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY pricelist_partnerinfo ALTER COLUMN id SET DEFAULT nextval('pricelist_partnerinfo_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_condition ALTER COLUMN id SET DEFAULT nextval('process_condition_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_node ALTER COLUMN id SET DEFAULT nextval('process_node_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_process ALTER COLUMN id SET DEFAULT nextval('process_process_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition ALTER COLUMN id SET DEFAULT nextval('process_transition_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition_action ALTER COLUMN id SET DEFAULT nextval('process_transition_action_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_category ALTER COLUMN id SET DEFAULT nextval('product_category_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_installer ALTER COLUMN id SET DEFAULT nextval('product_installer_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_packaging ALTER COLUMN id SET DEFAULT nextval('product_packaging_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_price_list ALTER COLUMN id SET DEFAULT nextval('product_price_list_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_price_type ALTER COLUMN id SET DEFAULT nextval('product_price_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist ALTER COLUMN id SET DEFAULT nextval('product_pricelist_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_item ALTER COLUMN id SET DEFAULT nextval('product_pricelist_item_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_type ALTER COLUMN id SET DEFAULT nextval('product_pricelist_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_version ALTER COLUMN id SET DEFAULT nextval('product_pricelist_version_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_product ALTER COLUMN id SET DEFAULT nextval('product_product_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_supplierinfo ALTER COLUMN id SET DEFAULT nextval('product_supplierinfo_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_template ALTER COLUMN id SET DEFAULT nextval('product_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_ul ALTER COLUMN id SET DEFAULT nextval('product_ul_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_uom ALTER COLUMN id SET DEFAULT nextval('product_uom_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_uom_categ ALTER COLUMN id SET DEFAULT nextval('product_uom_categ_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_project ALTER COLUMN id SET DEFAULT nextval('project_project_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task ALTER COLUMN id SET DEFAULT nextval('project_task_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_delegate ALTER COLUMN id SET DEFAULT nextval('project_task_delegate_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_history ALTER COLUMN id SET DEFAULT nextval('project_task_history_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_reevaluate ALTER COLUMN id SET DEFAULT nextval('project_task_reevaluate_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_type ALTER COLUMN id SET DEFAULT nextval('project_task_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_work ALTER COLUMN id SET DEFAULT nextval('project_task_work_id_seq'::regclass);


--
-- Name: pro_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY proprio ALTER COLUMN pro_pk SET DEFAULT nextval('proprio_pro_pk_seq'::regclass);


--
-- Name: pro_maj_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY proprio_maj ALTER COLUMN pro_maj_pk SET DEFAULT nextval('proprio_maj_pro_maj_pk_seq'::regclass);


--
-- Name: prov_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY provinces ALTER COLUMN prov_pk SET DEFAULT nextval('provinces_prov_pk_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY publisher_warranty_contract ALTER COLUMN id SET DEFAULT nextval('publisher_warranty_contract_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY publisher_warranty_contract_wizard ALTER COLUMN id SET DEFAULT nextval('publisher_warranty_contract_wizard_id_seq'::regclass);


--
-- Name: reg_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY region_guide ALTER COLUMN reg_pk SET DEFAULT nextval('region_guide_reg_pk_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_alarm ALTER COLUMN id SET DEFAULT nextval('res_alarm_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_bank ALTER COLUMN id SET DEFAULT nextval('res_bank_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_company ALTER COLUMN id SET DEFAULT nextval('res_company_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_config ALTER COLUMN id SET DEFAULT nextval('res_config_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_config_installer ALTER COLUMN id SET DEFAULT nextval('res_config_installer_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_country ALTER COLUMN id SET DEFAULT nextval('res_country_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_country_state ALTER COLUMN id SET DEFAULT nextval('res_country_state_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_currency ALTER COLUMN id SET DEFAULT nextval('res_currency_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_currency_rate ALTER COLUMN id SET DEFAULT nextval('res_currency_rate_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_currency_rate_type ALTER COLUMN id SET DEFAULT nextval('res_currency_rate_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups ALTER COLUMN id SET DEFAULT nextval('res_groups_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_lang ALTER COLUMN id SET DEFAULT nextval('res_lang_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_log ALTER COLUMN id SET DEFAULT nextval('res_log_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner ALTER COLUMN id SET DEFAULT nextval('res_partner_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_address ALTER COLUMN id SET DEFAULT nextval('res_partner_address_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank ALTER COLUMN id SET DEFAULT nextval('res_partner_bank_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank_type ALTER COLUMN id SET DEFAULT nextval('res_partner_bank_type_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank_type_field ALTER COLUMN id SET DEFAULT nextval('res_partner_bank_type_field_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_category ALTER COLUMN id SET DEFAULT nextval('res_partner_category_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_event ALTER COLUMN id SET DEFAULT nextval('res_partner_event_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_title ALTER COLUMN id SET DEFAULT nextval('res_partner_title_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_payterm ALTER COLUMN id SET DEFAULT nextval('res_payterm_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request ALTER COLUMN id SET DEFAULT nextval('res_request_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request_history ALTER COLUMN id SET DEFAULT nextval('res_request_history_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request_link ALTER COLUMN id SET DEFAULT nextval('res_request_link_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_users ALTER COLUMN id SET DEFAULT nextval('res_users_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_widget ALTER COLUMN id SET DEFAULT nextval('res_widget_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_widget_user ALTER COLUMN id SET DEFAULT nextval('res_widget_user_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_widget_wizard ALTER COLUMN id SET DEFAULT nextval('res_widget_wizard_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar ALTER COLUMN id SET DEFAULT nextval('resource_calendar_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar_attendance ALTER COLUMN id SET DEFAULT nextval('resource_calendar_attendance_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar_leaves ALTER COLUMN id SET DEFAULT nextval('resource_calendar_leaves_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_resource ALTER COLUMN id SET DEFAULT nextval('resource_resource_id_seq'::regclass);


--
-- Name: tabho_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY table_hote ALTER COLUMN tabho_pk SET DEFAULT nextval('table_hote_tabho_pk_seq'::regclass);


--
-- Name: type_heb_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY type_heb ALTER COLUMN type_heb_pk SET DEFAULT nextval('type_heb_type_heb_pk_seq'::regclass);


--
-- Name: typinfoprat_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY type_info_pratique ALTER COLUMN typinfoprat_pk SET DEFAULT nextval('type_info_pratique_typinfoprat_pk_seq'::regclass);


--
-- Name: typinfotour_pk; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY type_info_touristique ALTER COLUMN typinfotour_pk SET DEFAULT nextval('type_info_touristique_typinfotour_pk_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY user_preferences_config ALTER COLUMN id SET DEFAULT nextval('user_preferences_config_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY wizard_ir_model_menu_create ALTER COLUMN id SET DEFAULT nextval('wizard_ir_model_menu_create_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY wizard_ir_model_menu_create_line ALTER COLUMN id SET DEFAULT nextval('wizard_ir_model_menu_create_line_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf ALTER COLUMN id SET DEFAULT nextval('wkf_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_activity ALTER COLUMN id SET DEFAULT nextval('wkf_activity_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_instance ALTER COLUMN id SET DEFAULT nextval('wkf_instance_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_logs ALTER COLUMN id SET DEFAULT nextval('wkf_logs_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_transition ALTER COLUMN id SET DEFAULT nextval('wkf_transition_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_triggers ALTER COLUMN id SET DEFAULT nextval('wkf_triggers_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_workitem ALTER COLUMN id SET DEFAULT nextval('wkf_workitem_id_seq'::regclass);


SET search_path = londiste, pg_catalog;

--
-- Name: completed_pkey; Type: CONSTRAINT; Schema: londiste; Owner: -; Tablespace: 
--

ALTER TABLE ONLY completed
    ADD CONSTRAINT completed_pkey PRIMARY KEY (consumer_id);


--
-- Name: link_dest_key; Type: CONSTRAINT; Schema: londiste; Owner: -; Tablespace: 
--

ALTER TABLE ONLY link
    ADD CONSTRAINT link_dest_key UNIQUE (dest);


--
-- Name: link_pkey; Type: CONSTRAINT; Schema: londiste; Owner: -; Tablespace: 
--

ALTER TABLE ONLY link
    ADD CONSTRAINT link_pkey PRIMARY KEY (source);


--
-- Name: subscriber_pending_fkeys_pkey; Type: CONSTRAINT; Schema: londiste; Owner: -; Tablespace: 
--

ALTER TABLE ONLY subscriber_pending_fkeys
    ADD CONSTRAINT subscriber_pending_fkeys_pkey PRIMARY KEY (from_table, fkey_name);


--
-- Name: subscriber_pending_triggers_pkey; Type: CONSTRAINT; Schema: londiste; Owner: -; Tablespace: 
--

ALTER TABLE ONLY subscriber_pending_triggers
    ADD CONSTRAINT subscriber_pending_triggers_pkey PRIMARY KEY (table_name, trigger_name);


--
-- Name: subscriber_seq_pkey; Type: CONSTRAINT; Schema: londiste; Owner: -; Tablespace: 
--

ALTER TABLE ONLY subscriber_seq
    ADD CONSTRAINT subscriber_seq_pkey PRIMARY KEY (queue_name, seq_name);


--
-- Name: subscriber_table_pkey; Type: CONSTRAINT; Schema: londiste; Owner: -; Tablespace: 
--

ALTER TABLE ONLY subscriber_table
    ADD CONSTRAINT subscriber_table_pkey PRIMARY KEY (queue_name, table_name);


SET search_path = pgq, pg_catalog;

--
-- Name: fq_pkey; Type: CONSTRAINT; Schema: pgq; Owner: -; Tablespace: 
--

ALTER TABLE ONLY failed_queue
    ADD CONSTRAINT fq_pkey PRIMARY KEY (ev_owner, ev_id);


--
-- Name: queue_name_uq; Type: CONSTRAINT; Schema: pgq; Owner: -; Tablespace: 
--

ALTER TABLE ONLY queue
    ADD CONSTRAINT queue_name_uq UNIQUE (queue_name);


--
-- Name: queue_pkey; Type: CONSTRAINT; Schema: pgq; Owner: -; Tablespace: 
--

ALTER TABLE ONLY queue
    ADD CONSTRAINT queue_pkey PRIMARY KEY (queue_id);


--
-- Name: rq_pkey; Type: CONSTRAINT; Schema: pgq; Owner: -; Tablespace: 
--

ALTER TABLE ONLY retry_queue
    ADD CONSTRAINT rq_pkey PRIMARY KEY (ev_owner, ev_id);


--
-- Name: tick_pkey; Type: CONSTRAINT; Schema: pgq; Owner: -; Tablespace: 
--

ALTER TABLE ONLY tick
    ADD CONSTRAINT tick_pkey PRIMARY KEY (tick_queue, tick_id);


SET search_path = public, pg_catalog;

--
-- Name: account_analytic_account_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_pkey PRIMARY KEY (id);


--
-- Name: account_analytic_line_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_pkey PRIMARY KEY (id);


--
-- Name: alarm_attendee_rel_alarm_id_attendee_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY alarm_attendee_rel
    ADD CONSTRAINT alarm_attendee_rel_alarm_id_attendee_id_key UNIQUE (alarm_id, attendee_id);


--
-- Name: base_action_rule_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_pkey PRIMARY KEY (id);


--
-- Name: base_calendar_invite_attendee_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY base_calendar_invite_attendee
    ADD CONSTRAINT base_calendar_invite_attendee_pkey PRIMARY KEY (id);


--
-- Name: base_language_export_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY base_language_export
    ADD CONSTRAINT base_language_export_pkey PRIMARY KEY (id);


--
-- Name: base_language_import_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY base_language_import
    ADD CONSTRAINT base_language_import_pkey PRIMARY KEY (id);


--
-- Name: base_language_install_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY base_language_install
    ADD CONSTRAINT base_language_install_pkey PRIMARY KEY (id);


--
-- Name: base_module_configuration_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY base_module_configuration
    ADD CONSTRAINT base_module_configuration_pkey PRIMARY KEY (id);


--
-- Name: base_module_import_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY base_module_import
    ADD CONSTRAINT base_module_import_pkey PRIMARY KEY (id);


--
-- Name: base_module_update_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY base_module_update
    ADD CONSTRAINT base_module_update_pkey PRIMARY KEY (id);


--
-- Name: base_module_upgrade_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY base_module_upgrade
    ADD CONSTRAINT base_module_upgrade_pkey PRIMARY KEY (id);


--
-- Name: base_setup_terminology_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY base_setup_terminology
    ADD CONSTRAINT base_setup_terminology_pkey PRIMARY KEY (id);


--
-- Name: base_update_translations_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY base_update_translations
    ADD CONSTRAINT base_update_translations_pkey PRIMARY KEY (id);


--
-- Name: blockinghistory_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY blockinghistory
    ADD CONSTRAINT blockinghistory_pkey PRIMARY KEY (heb_pk, block_start, block_end);


--
-- Name: board_board_line_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY board_board_line
    ADD CONSTRAINT board_board_line_pkey PRIMARY KEY (id);


--
-- Name: board_board_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY board_board
    ADD CONSTRAINT board_board_pkey PRIMARY KEY (id);


--
-- Name: board_menu_create_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY board_menu_create
    ADD CONSTRAINT board_menu_create_pkey PRIMARY KEY (id);


--
-- Name: calendar_alarm_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY calendar_alarm
    ADD CONSTRAINT calendar_alarm_pkey PRIMARY KEY (id);


--
-- Name: calendar_attendee_child_rel_attendee_id_child_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY calendar_attendee_child_rel
    ADD CONSTRAINT calendar_attendee_child_rel_attendee_id_child_id_key UNIQUE (attendee_id, child_id);


--
-- Name: calendar_attendee_parent_rel_attendee_id_parent_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY calendar_attendee_parent_rel
    ADD CONSTRAINT calendar_attendee_parent_rel_attendee_id_parent_id_key UNIQUE (attendee_id, parent_id);


--
-- Name: calendar_attendee_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY calendar_attendee
    ADD CONSTRAINT calendar_attendee_pkey PRIMARY KEY (id);


--
-- Name: calendar_event_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_pkey PRIMARY KEY (id);


--
-- Name: calendar_todo_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY calendar_todo
    ADD CONSTRAINT calendar_todo_pkey PRIMARY KEY (id);


--
-- Name: cgt_class_reco_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY cgt_class_reco
    ADD CONSTRAINT cgt_class_reco_pkey PRIMARY KEY (cgt_pk);


--
-- Name: charge_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY charge
    ADD CONSTRAINT charge_pkey PRIMARY KEY (cha_pk);


--
-- Name: civilite_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY civilite
    ADD CONSTRAINT civilite_pkey PRIMARY KEY (civ_pk);


--
-- Name: commande_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY commande
    ADD CONSTRAINT commande_pkey PRIMARY KEY (com_pk);


--
-- Name: commune_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY commune
    ADD CONSTRAINT commune_pkey PRIMARY KEY (com_pk);


--
-- Name: crm_add_note_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_add_note
    ADD CONSTRAINT crm_add_note_pkey PRIMARY KEY (id);


--
-- Name: crm_case_categ_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_case_categ
    ADD CONSTRAINT crm_case_categ_pkey PRIMARY KEY (id);


--
-- Name: crm_case_channel_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_case_channel
    ADD CONSTRAINT crm_case_channel_pkey PRIMARY KEY (id);


--
-- Name: crm_case_resource_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_case_resource_type
    ADD CONSTRAINT crm_case_resource_type_pkey PRIMARY KEY (id);


--
-- Name: crm_case_section_code_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_code_uniq UNIQUE (code);


--
-- Name: crm_case_section_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_pkey PRIMARY KEY (id);


--
-- Name: crm_case_stage_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_case_stage
    ADD CONSTRAINT crm_case_stage_pkey PRIMARY KEY (id);


--
-- Name: crm_lead2opportunity_partner__crm_lead2opportunity_partner__key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass_res_users_rel
    ADD CONSTRAINT crm_lead2opportunity_partner__crm_lead2opportunity_partner__key UNIQUE (crm_lead2opportunity_partner_mass_id, res_users_id);


--
-- Name: crm_lead2opportunity_partner_mass_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_pkey PRIMARY KEY (id);


--
-- Name: crm_lead2opportunity_partner_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_lead2opportunity_partner
    ADD CONSTRAINT crm_lead2opportunity_partner_pkey PRIMARY KEY (id);


--
-- Name: crm_lead2partner_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_lead2partner
    ADD CONSTRAINT crm_lead2partner_pkey PRIMARY KEY (id);


--
-- Name: crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner__key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_lead_crm_lead2opportunity_partner_rel
    ADD CONSTRAINT crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner__key UNIQUE (crm_lead2opportunity_partner_id, crm_lead_id);


--
-- Name: crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner_key1; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_lead_crm_lead2opportunity_partner_mass_rel
    ADD CONSTRAINT crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner_key1 UNIQUE (crm_lead2opportunity_partner_mass_id, crm_lead_id);


--
-- Name: crm_lead_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_pkey PRIMARY KEY (id);


--
-- Name: crm_meeting_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_pkey PRIMARY KEY (id);


--
-- Name: crm_merge_opportunity_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_merge_opportunity
    ADD CONSTRAINT crm_merge_opportunity_pkey PRIMARY KEY (id);


--
-- Name: crm_opportunity2phonecall_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_opportunity2phonecall
    ADD CONSTRAINT crm_opportunity2phonecall_pkey PRIMARY KEY (id);


--
-- Name: crm_partner2opportunity_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_partner2opportunity
    ADD CONSTRAINT crm_partner2opportunity_pkey PRIMARY KEY (id);


--
-- Name: crm_phonecall2opportunity_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_phonecall2opportunity
    ADD CONSTRAINT crm_phonecall2opportunity_pkey PRIMARY KEY (id);


--
-- Name: crm_phonecall2partner_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_phonecall2partner
    ADD CONSTRAINT crm_phonecall2partner_pkey PRIMARY KEY (id);


--
-- Name: crm_phonecall2phonecall_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_pkey PRIMARY KEY (id);


--
-- Name: crm_phonecall_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_pkey PRIMARY KEY (id);


--
-- Name: crm_segmentation_line_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_segmentation_line
    ADD CONSTRAINT crm_segmentation_line_pkey PRIMARY KEY (id);


--
-- Name: crm_segmentation_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY crm_segmentation
    ADD CONSTRAINT crm_segmentation_pkey PRIMARY KEY (id);


--
-- Name: decimal_precision_name_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY decimal_precision
    ADD CONSTRAINT decimal_precision_name_uniq UNIQUE (name);


--
-- Name: decimal_precision_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY decimal_precision
    ADD CONSTRAINT decimal_precision_pkey PRIMARY KEY (id);


--
-- Name: email_message_send_attachment_rel_wizard_id_attachment_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY email_message_send_attachment_rel
    ADD CONSTRAINT email_message_send_attachment_rel_wizard_id_attachment_id_key UNIQUE (wizard_id, attachment_id);


--
-- Name: event_attendee_rel_event_id_attendee_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY event_attendee_rel
    ADD CONSTRAINT event_attendee_rel_event_id_attendee_id_key UNIQUE (event_id, attendee_id);


--
-- Name: ext_data_unique_id_provider; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY map_external_data
    ADD CONSTRAINT ext_data_unique_id_provider UNIQUE (ext_data_id, ext_data_provider_pk);


--
-- Name: fetchmail_server_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY fetchmail_server
    ADD CONSTRAINT fetchmail_server_pkey PRIMARY KEY (id);


--
-- Name: geometry_columns_pk; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY geometry_columns
    ADD CONSTRAINT geometry_columns_pk PRIMARY KEY (f_table_catalog, f_table_schema, f_table_name, f_geometry_column);


--
-- Name: gite_label_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY gite_label
    ADD CONSTRAINT gite_label_pkey PRIMARY KEY (git_lab_pk);


--
-- Name: gite_theme_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY gite_theme
    ADD CONSTRAINT gite_theme_pkey PRIMARY KEY (git_them_pk);


--
-- Name: gw_callcenter_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY gw_callcenter
    ADD CONSTRAINT gw_callcenter_pkey PRIMARY KEY (gwc_pk);


--
-- Name: heb_blocking_history_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY heb_blocking_history
    ADD CONSTRAINT heb_blocking_history_pkey PRIMARY KEY (heb_blockhistory_id);


--
-- Name: heb_id; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY hebergement
    ADD CONSTRAINT heb_id UNIQUE (heb_id);


--
-- Name: heb_theme_label_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY heb_theme_label
    ADD CONSTRAINT heb_theme_label_pkey PRIMARY KEY (htl_pk);


--
-- Name: hebergement_app_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY hebergement_app
    ADD CONSTRAINT hebergement_app_pkey PRIMARY KEY (heb_app_pk);


--
-- Name: hebergement_maj_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY hebergement_maj
    ADD CONSTRAINT hebergement_maj_pkey PRIMARY KEY (heb_maj_pk);


--
-- Name: hebergement_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY hebergement
    ADD CONSTRAINT hebergement_pkey PRIMARY KEY (heb_pk);


--
-- Name: hebergement_tempo_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY hebergement_tempo
    ADD CONSTRAINT hebergement_tempo_pkey PRIMARY KEY (heb_pk);


--
-- Name: hebergement_video_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY hebergement_video
    ADD CONSTRAINT hebergement_video_pkey PRIMARY KEY (heb_vid_pk);


--
-- Name: info_pratique_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY info_pratique
    ADD CONSTRAINT info_pratique_pkey PRIMARY KEY (infoprat_pk);


--
-- Name: info_touristique_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY info_touristique
    ADD CONSTRAINT info_touristique_pkey PRIMARY KEY (infotour_pk);


--
-- Name: invite_contact_rel_invite_id_contact_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY invite_contact_rel
    ADD CONSTRAINT invite_contact_rel_invite_id_contact_id_key UNIQUE (invite_id, contact_id);


--
-- Name: invite_user_rel_invite_id_user_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY invite_user_rel
    ADD CONSTRAINT invite_user_rel_invite_id_user_id_key UNIQUE (invite_id, user_id);


--
-- Name: ir_act_client_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_act_client
    ADD CONSTRAINT ir_act_client_pkey PRIMARY KEY (id);


--
-- Name: ir_act_report_custom_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_act_report_custom
    ADD CONSTRAINT ir_act_report_custom_pkey PRIMARY KEY (id);


--
-- Name: ir_act_report_xml_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_act_report_xml
    ADD CONSTRAINT ir_act_report_xml_pkey PRIMARY KEY (id);


--
-- Name: ir_act_server_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_pkey PRIMARY KEY (id);


--
-- Name: ir_act_url_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_act_url
    ADD CONSTRAINT ir_act_url_pkey PRIMARY KEY (id);


--
-- Name: ir_act_window_group_rel_act_id_gid_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_act_window_group_rel
    ADD CONSTRAINT ir_act_window_group_rel_act_id_gid_key UNIQUE (act_id, gid);


--
-- Name: ir_act_window_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_act_window
    ADD CONSTRAINT ir_act_window_pkey PRIMARY KEY (id);


--
-- Name: ir_act_window_view_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_act_window_view
    ADD CONSTRAINT ir_act_window_view_pkey PRIMARY KEY (id);


--
-- Name: ir_act_wizard_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_act_wizard
    ADD CONSTRAINT ir_act_wizard_pkey PRIMARY KEY (id);


--
-- Name: ir_actions_configuration_wizard_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_actions_configuration_wizard
    ADD CONSTRAINT ir_actions_configuration_wizard_pkey PRIMARY KEY (id);


--
-- Name: ir_actions_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_actions
    ADD CONSTRAINT ir_actions_pkey PRIMARY KEY (id);


--
-- Name: ir_actions_todo_category_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_actions_todo_category
    ADD CONSTRAINT ir_actions_todo_category_pkey PRIMARY KEY (id);


--
-- Name: ir_actions_todo_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_actions_todo
    ADD CONSTRAINT ir_actions_todo_pkey PRIMARY KEY (id);


--
-- Name: ir_attachment_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_attachment
    ADD CONSTRAINT ir_attachment_pkey PRIMARY KEY (id);


--
-- Name: ir_config_parameter_key_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_config_parameter
    ADD CONSTRAINT ir_config_parameter_key_uniq UNIQUE (key);


--
-- Name: ir_config_parameter_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_config_parameter
    ADD CONSTRAINT ir_config_parameter_pkey PRIMARY KEY (id);


--
-- Name: ir_cron_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_cron
    ADD CONSTRAINT ir_cron_pkey PRIMARY KEY (id);


--
-- Name: ir_default_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_default
    ADD CONSTRAINT ir_default_pkey PRIMARY KEY (id);


--
-- Name: ir_exports_line_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_exports_line
    ADD CONSTRAINT ir_exports_line_pkey PRIMARY KEY (id);


--
-- Name: ir_exports_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_exports
    ADD CONSTRAINT ir_exports_pkey PRIMARY KEY (id);


--
-- Name: ir_filters_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_filters
    ADD CONSTRAINT ir_filters_pkey PRIMARY KEY (id);


--
-- Name: ir_mail_server_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_mail_server
    ADD CONSTRAINT ir_mail_server_pkey PRIMARY KEY (id);


--
-- Name: ir_model_access_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_model_access
    ADD CONSTRAINT ir_model_access_pkey PRIMARY KEY (id);


--
-- Name: ir_model_data_module_name_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_model_data
    ADD CONSTRAINT ir_model_data_module_name_uniq UNIQUE (name, module);


--
-- Name: ir_model_data_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_model_data
    ADD CONSTRAINT ir_model_data_pkey PRIMARY KEY (id);


--
-- Name: ir_model_fields_group_rel_field_id_group_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_model_fields_group_rel
    ADD CONSTRAINT ir_model_fields_group_rel_field_id_group_id_key UNIQUE (field_id, group_id);


--
-- Name: ir_model_fields_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_model_fields
    ADD CONSTRAINT ir_model_fields_pkey PRIMARY KEY (id);


--
-- Name: ir_model_obj_name_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_model
    ADD CONSTRAINT ir_model_obj_name_uniq UNIQUE (model);


--
-- Name: ir_model_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_model
    ADD CONSTRAINT ir_model_pkey PRIMARY KEY (id);


--
-- Name: ir_module_category_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_module_category
    ADD CONSTRAINT ir_module_category_pkey PRIMARY KEY (id);


--
-- Name: ir_module_module_certificate_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT ir_module_module_certificate_uniq UNIQUE (certificate);


--
-- Name: ir_module_module_dependency_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_module_module_dependency
    ADD CONSTRAINT ir_module_module_dependency_pkey PRIMARY KEY (id);


--
-- Name: ir_module_module_name_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT ir_module_module_name_uniq UNIQUE (name);


--
-- Name: ir_module_module_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT ir_module_module_pkey PRIMARY KEY (id);


--
-- Name: ir_property_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_property
    ADD CONSTRAINT ir_property_pkey PRIMARY KEY (id);


--
-- Name: ir_rule_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_rule
    ADD CONSTRAINT ir_rule_pkey PRIMARY KEY (id);


--
-- Name: ir_sequence_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_sequence
    ADD CONSTRAINT ir_sequence_pkey PRIMARY KEY (id);


--
-- Name: ir_sequence_type_code_unique; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_sequence_type
    ADD CONSTRAINT ir_sequence_type_code_unique UNIQUE (code);


--
-- Name: ir_sequence_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_sequence_type
    ADD CONSTRAINT ir_sequence_type_pkey PRIMARY KEY (id);


--
-- Name: ir_server_object_lines_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_server_object_lines
    ADD CONSTRAINT ir_server_object_lines_pkey PRIMARY KEY (id);


--
-- Name: ir_translation_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_translation
    ADD CONSTRAINT ir_translation_pkey PRIMARY KEY (id);


--
-- Name: ir_ui_menu_group_rel_menu_id_gid_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_ui_menu_group_rel
    ADD CONSTRAINT ir_ui_menu_group_rel_menu_id_gid_key UNIQUE (menu_id, gid);


--
-- Name: ir_ui_menu_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_ui_menu
    ADD CONSTRAINT ir_ui_menu_pkey PRIMARY KEY (id);


--
-- Name: ir_ui_view_custom_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_ui_view_custom
    ADD CONSTRAINT ir_ui_view_custom_pkey PRIMARY KEY (id);


--
-- Name: ir_ui_view_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_ui_view
    ADD CONSTRAINT ir_ui_view_pkey PRIMARY KEY (id);


--
-- Name: ir_ui_view_sc_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_ui_view_sc
    ADD CONSTRAINT ir_ui_view_sc_pkey PRIMARY KEY (id);


--
-- Name: ir_ui_view_sc_shortcut_unique; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_ui_view_sc
    ADD CONSTRAINT ir_ui_view_sc_shortcut_unique UNIQUE (res_id, resource, user_id);


--
-- Name: ir_values_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_values
    ADD CONSTRAINT ir_values_pkey PRIMARY KEY (id);


--
-- Name: ir_wizard_screen_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_wizard_screen
    ADD CONSTRAINT ir_wizard_screen_pkey PRIMARY KEY (id);


--
-- Name: link_hebergement_epis_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY link_hebergement_epis
    ADD CONSTRAINT link_hebergement_epis_pkey PRIMARY KEY (heb_pk, heb_nombre_epis);


--
-- Name: link_hebergement_metadata_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY link_hebergement_metadata
    ADD CONSTRAINT link_hebergement_metadata_pkey PRIMARY KEY (link_met_pk);


--
-- Name: link_hebergement_metadata_update_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY link_hebergement_metadata_update
    ADD CONSTRAINT link_hebergement_metadata_update_pkey PRIMARY KEY (pk);


--
-- Name: log_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY log
    ADD CONSTRAINT log_pkey PRIMARY KEY (log_pk);


--
-- Name: mail_compose_message_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY mail_compose_message
    ADD CONSTRAINT mail_compose_message_pkey PRIMARY KEY (id);


--
-- Name: mail_message_common_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY mail_message_common
    ADD CONSTRAINT mail_message_common_pkey PRIMARY KEY (id);


--
-- Name: mail_message_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_pkey PRIMARY KEY (id);


--
-- Name: mail_thread_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY mail_thread
    ADD CONSTRAINT mail_thread_pkey PRIMARY KEY (id);


--
-- Name: maintenance_contract_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY maintenance_contract
    ADD CONSTRAINT maintenance_contract_pkey PRIMARY KEY (id);


--
-- Name: maison_tourisme_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY maison_tourisme
    ADD CONSTRAINT maison_tourisme_pkey PRIMARY KEY (mais_pk);


--
-- Name: map_blacklist_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY map_blacklist
    ADD CONSTRAINT map_blacklist_pkey PRIMARY KEY (blacklist_pk);


--
-- Name: map_external_data_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY map_external_data
    ADD CONSTRAINT map_external_data_pkey PRIMARY KEY (ext_data_pk);


--
-- Name: map_provider_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY map_provider
    ADD CONSTRAINT map_provider_pkey PRIMARY KEY (provider_pk);


--
-- Name: meeting_attendee_rel_event_id_attendee_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY meeting_attendee_rel
    ADD CONSTRAINT meeting_attendee_rel_event_id_attendee_id_key UNIQUE (event_id, attendee_id);


--
-- Name: merge_opportunity_rel_merge_id_opportunity_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY merge_opportunity_rel
    ADD CONSTRAINT merge_opportunity_rel_merge_id_opportunity_id_key UNIQUE (merge_id, opportunity_id);


--
-- Name: message_attachment_rel_message_id_attachment_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY message_attachment_rel
    ADD CONSTRAINT message_attachment_rel_message_id_attachment_id_key UNIQUE (message_id, attachment_id);


--
-- Name: metadata_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY metadata
    ADD CONSTRAINT metadata_pkey PRIMARY KEY (met_pk);


--
-- Name: metadata_type_met_typ_sort_ord_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY metadata_type
    ADD CONSTRAINT metadata_type_met_typ_sort_ord_key UNIQUE (met_typ_sort_ord);


--
-- Name: metadata_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY metadata_type
    ADD CONSTRAINT metadata_type_pkey PRIMARY KEY (met_typ_id);


--
-- Name: migrade_application_installer_modules_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY migrade_application_installer_modules
    ADD CONSTRAINT migrade_application_installer_modules_pkey PRIMARY KEY (id);


--
-- Name: multi_company_default_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_pkey PRIMARY KEY (id);


--
-- Name: name_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT name_uniq UNIQUE (name);


--
-- Name: osv_memory_autovacuum_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY osv_memory_autovacuum
    ADD CONSTRAINT osv_memory_autovacuum_pkey PRIMARY KEY (id);


--
-- Name: partner_clear_ids_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY partner_clear_ids
    ADD CONSTRAINT partner_clear_ids_pkey PRIMARY KEY (id);


--
-- Name: partner_massmail_wizard_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY partner_massmail_wizard
    ADD CONSTRAINT partner_massmail_wizard_pkey PRIMARY KEY (id);


--
-- Name: partner_sms_send_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY partner_sms_send
    ADD CONSTRAINT partner_sms_send_pkey PRIMARY KEY (id);


--
-- Name: partner_wizard_ean_check_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY partner_wizard_ean_check
    ADD CONSTRAINT partner_wizard_ean_check_pkey PRIMARY KEY (id);


--
-- Name: pgbench_accounts_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY pgbench_accounts
    ADD CONSTRAINT pgbench_accounts_pkey PRIMARY KEY (aid);


--
-- Name: pgbench_branches_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY pgbench_branches
    ADD CONSTRAINT pgbench_branches_pkey PRIMARY KEY (bid);


--
-- Name: pgbench_tellers_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY pgbench_tellers
    ADD CONSTRAINT pgbench_tellers_pkey PRIMARY KEY (tid);


--
-- Name: pricelist_partnerinfo_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY pricelist_partnerinfo
    ADD CONSTRAINT pricelist_partnerinfo_pkey PRIMARY KEY (id);


--
-- Name: process_condition_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY process_condition
    ADD CONSTRAINT process_condition_pkey PRIMARY KEY (id);


--
-- Name: process_node_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY process_node
    ADD CONSTRAINT process_node_pkey PRIMARY KEY (id);


--
-- Name: process_process_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY process_process
    ADD CONSTRAINT process_process_pkey PRIMARY KEY (id);


--
-- Name: process_transition_action_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY process_transition_action
    ADD CONSTRAINT process_transition_action_pkey PRIMARY KEY (id);


--
-- Name: process_transition_group_rel_tid_rid_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY process_transition_group_rel
    ADD CONSTRAINT process_transition_group_rel_tid_rid_key UNIQUE (tid, rid);


--
-- Name: process_transition_ids_ptr_id_wtr_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY process_transition_ids
    ADD CONSTRAINT process_transition_ids_ptr_id_wtr_id_key UNIQUE (ptr_id, wtr_id);


--
-- Name: process_transition_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY process_transition
    ADD CONSTRAINT process_transition_pkey PRIMARY KEY (id);


--
-- Name: product_category_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_category
    ADD CONSTRAINT product_category_pkey PRIMARY KEY (id);


--
-- Name: product_installer_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_installer
    ADD CONSTRAINT product_installer_pkey PRIMARY KEY (id);


--
-- Name: product_packaging_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_packaging
    ADD CONSTRAINT product_packaging_pkey PRIMARY KEY (id);


--
-- Name: product_price_list_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_price_list
    ADD CONSTRAINT product_price_list_pkey PRIMARY KEY (id);


--
-- Name: product_price_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_price_type
    ADD CONSTRAINT product_price_type_pkey PRIMARY KEY (id);


--
-- Name: product_pricelist_item_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_pkey PRIMARY KEY (id);


--
-- Name: product_pricelist_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_pricelist
    ADD CONSTRAINT product_pricelist_pkey PRIMARY KEY (id);


--
-- Name: product_pricelist_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_pricelist_type
    ADD CONSTRAINT product_pricelist_type_pkey PRIMARY KEY (id);


--
-- Name: product_pricelist_version_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_pricelist_version
    ADD CONSTRAINT product_pricelist_version_pkey PRIMARY KEY (id);


--
-- Name: product_product_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_product
    ADD CONSTRAINT product_product_pkey PRIMARY KEY (id);


--
-- Name: product_supplierinfo_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_supplierinfo
    ADD CONSTRAINT product_supplierinfo_pkey PRIMARY KEY (id);


--
-- Name: product_template_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_pkey PRIMARY KEY (id);


--
-- Name: product_ul_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_ul
    ADD CONSTRAINT product_ul_pkey PRIMARY KEY (id);


--
-- Name: product_uom_categ_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_uom_categ
    ADD CONSTRAINT product_uom_categ_pkey PRIMARY KEY (id);


--
-- Name: product_uom_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY product_uom
    ADD CONSTRAINT product_uom_pkey PRIMARY KEY (id);


--
-- Name: project_project_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY project_project
    ADD CONSTRAINT project_project_pkey PRIMARY KEY (id);


--
-- Name: project_task_delegate_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY project_task_delegate
    ADD CONSTRAINT project_task_delegate_pkey PRIMARY KEY (id);


--
-- Name: project_task_history_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY project_task_history
    ADD CONSTRAINT project_task_history_pkey PRIMARY KEY (id);


--
-- Name: project_task_parent_rel_parent_id_task_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY project_task_parent_rel
    ADD CONSTRAINT project_task_parent_rel_parent_id_task_id_key UNIQUE (parent_id, task_id);


--
-- Name: project_task_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_pkey PRIMARY KEY (id);


--
-- Name: project_task_reevaluate_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY project_task_reevaluate
    ADD CONSTRAINT project_task_reevaluate_pkey PRIMARY KEY (id);


--
-- Name: project_task_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY project_task_type
    ADD CONSTRAINT project_task_type_pkey PRIMARY KEY (id);


--
-- Name: project_task_type_rel_type_id_project_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY project_task_type_rel
    ADD CONSTRAINT project_task_type_rel_type_id_project_id_key UNIQUE (type_id, project_id);


--
-- Name: project_task_work_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY project_task_work
    ADD CONSTRAINT project_task_work_pkey PRIMARY KEY (id);


--
-- Name: project_user_rel_project_id_uid_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY project_user_rel
    ADD CONSTRAINT project_user_rel_project_id_uid_key UNIQUE (project_id, uid);


--
-- Name: proprio_maj_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY proprio_maj
    ADD CONSTRAINT proprio_maj_pkey PRIMARY KEY (pro_maj_pk);


--
-- Name: proprio_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY proprio
    ADD CONSTRAINT proprio_pkey PRIMARY KEY (pro_pk);


--
-- Name: proprio_pro_reactivation_hash_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY proprio
    ADD CONSTRAINT proprio_pro_reactivation_hash_key UNIQUE (pro_reactivation_hash);


--
-- Name: provinces_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY provinces
    ADD CONSTRAINT provinces_pkey PRIMARY KEY (prov_pk);


--
-- Name: publisher_warranty_contract_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY publisher_warranty_contract
    ADD CONSTRAINT publisher_warranty_contract_pkey PRIMARY KEY (id);


--
-- Name: publisher_warranty_contract_uniq_name; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY publisher_warranty_contract
    ADD CONSTRAINT publisher_warranty_contract_uniq_name UNIQUE (name);


--
-- Name: publisher_warranty_contract_wizard_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY publisher_warranty_contract_wizard
    ADD CONSTRAINT publisher_warranty_contract_wizard_pkey PRIMARY KEY (id);


--
-- Name: region_guide_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY region_guide
    ADD CONSTRAINT region_guide_pkey PRIMARY KEY (reg_pk);


--
-- Name: rel_modules_langexport_wiz_id_module_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY rel_modules_langexport
    ADD CONSTRAINT rel_modules_langexport_wiz_id_module_id_key UNIQUE (wiz_id, module_id);


--
-- Name: rel_server_actions_server_id_action_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY rel_server_actions
    ADD CONSTRAINT rel_server_actions_server_id_action_id_key UNIQUE (server_id, action_id);


--
-- Name: res_alarm_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_alarm
    ADD CONSTRAINT res_alarm_pkey PRIMARY KEY (id);


--
-- Name: res_bank_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_bank
    ADD CONSTRAINT res_bank_pkey PRIMARY KEY (id);


--
-- Name: res_company_name_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_name_uniq UNIQUE (name);


--
-- Name: res_company_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_pkey PRIMARY KEY (id);


--
-- Name: res_company_users_rel_cid_user_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_company_users_rel
    ADD CONSTRAINT res_company_users_rel_cid_user_id_key UNIQUE (cid, user_id);


--
-- Name: res_config_installer_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_config_installer
    ADD CONSTRAINT res_config_installer_pkey PRIMARY KEY (id);


--
-- Name: res_config_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_config
    ADD CONSTRAINT res_config_pkey PRIMARY KEY (id);


--
-- Name: res_country_code_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_country
    ADD CONSTRAINT res_country_code_uniq UNIQUE (code);


--
-- Name: res_country_name_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_country
    ADD CONSTRAINT res_country_name_uniq UNIQUE (name);


--
-- Name: res_country_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_country
    ADD CONSTRAINT res_country_pkey PRIMARY KEY (id);


--
-- Name: res_country_state_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_country_state
    ADD CONSTRAINT res_country_state_pkey PRIMARY KEY (id);


--
-- Name: res_currency_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_currency
    ADD CONSTRAINT res_currency_pkey PRIMARY KEY (id);


--
-- Name: res_currency_rate_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_currency_rate
    ADD CONSTRAINT res_currency_rate_pkey PRIMARY KEY (id);


--
-- Name: res_currency_rate_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_currency_rate_type
    ADD CONSTRAINT res_currency_rate_type_pkey PRIMARY KEY (id);


--
-- Name: res_currency_unique_name_company_id; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_currency
    ADD CONSTRAINT res_currency_unique_name_company_id UNIQUE (name, company_id);


--
-- Name: res_groups_action_rel_uid_gid_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_groups_action_rel
    ADD CONSTRAINT res_groups_action_rel_uid_gid_key UNIQUE (uid, gid);


--
-- Name: res_groups_implied_rel_gid_hid_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_groups_implied_rel
    ADD CONSTRAINT res_groups_implied_rel_gid_hid_key UNIQUE (gid, hid);


--
-- Name: res_groups_name_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_groups
    ADD CONSTRAINT res_groups_name_uniq UNIQUE (category_id, name);


--
-- Name: res_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_groups
    ADD CONSTRAINT res_groups_pkey PRIMARY KEY (id);


--
-- Name: res_groups_report_rel_uid_gid_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_groups_report_rel
    ADD CONSTRAINT res_groups_report_rel_uid_gid_key UNIQUE (uid, gid);


--
-- Name: res_groups_users_rel_uid_gid_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_groups_users_rel
    ADD CONSTRAINT res_groups_users_rel_uid_gid_key UNIQUE (uid, gid);


--
-- Name: res_groups_wizard_rel_uid_gid_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_groups_wizard_rel
    ADD CONSTRAINT res_groups_wizard_rel_uid_gid_key UNIQUE (uid, gid);


--
-- Name: res_lang_code_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_code_key UNIQUE (code);


--
-- Name: res_lang_code_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_code_uniq UNIQUE (code);


--
-- Name: res_lang_name_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_name_key UNIQUE (name);


--
-- Name: res_lang_name_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_name_uniq UNIQUE (name);


--
-- Name: res_lang_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_pkey PRIMARY KEY (id);


--
-- Name: res_log_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_log
    ADD CONSTRAINT res_log_pkey PRIMARY KEY (id);


--
-- Name: res_partner_address_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_partner_address
    ADD CONSTRAINT res_partner_address_pkey PRIMARY KEY (id);


--
-- Name: res_partner_bank_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_pkey PRIMARY KEY (id);


--
-- Name: res_partner_bank_type_field_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_partner_bank_type_field
    ADD CONSTRAINT res_partner_bank_type_field_pkey PRIMARY KEY (id);


--
-- Name: res_partner_bank_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_partner_bank_type
    ADD CONSTRAINT res_partner_bank_type_pkey PRIMARY KEY (id);


--
-- Name: res_partner_category_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_partner_category
    ADD CONSTRAINT res_partner_category_pkey PRIMARY KEY (id);


--
-- Name: res_partner_category_rel_category_id_partner_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_partner_category_rel
    ADD CONSTRAINT res_partner_category_rel_category_id_partner_id_key UNIQUE (category_id, partner_id);


--
-- Name: res_partner_event_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_partner_event
    ADD CONSTRAINT res_partner_event_pkey PRIMARY KEY (id);


--
-- Name: res_partner_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_pkey PRIMARY KEY (id);


--
-- Name: res_partner_title_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_partner_title
    ADD CONSTRAINT res_partner_title_pkey PRIMARY KEY (id);


--
-- Name: res_payterm_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_payterm
    ADD CONSTRAINT res_payterm_pkey PRIMARY KEY (id);


--
-- Name: res_request_history_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_request_history
    ADD CONSTRAINT res_request_history_pkey PRIMARY KEY (id);


--
-- Name: res_request_link_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_request_link
    ADD CONSTRAINT res_request_link_pkey PRIMARY KEY (id);


--
-- Name: res_request_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_request
    ADD CONSTRAINT res_request_pkey PRIMARY KEY (id);


--
-- Name: res_users_login_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_login_key UNIQUE (login);


--
-- Name: res_users_login_uniq; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_login_uniq UNIQUE (login);


--
-- Name: res_users_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_pkey PRIMARY KEY (id);


--
-- Name: res_widget_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_widget
    ADD CONSTRAINT res_widget_pkey PRIMARY KEY (id);


--
-- Name: res_widget_user_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_widget_user
    ADD CONSTRAINT res_widget_user_pkey PRIMARY KEY (id);


--
-- Name: res_widget_wizard_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY res_widget_wizard
    ADD CONSTRAINT res_widget_wizard_pkey PRIMARY KEY (id);


--
-- Name: reservation_proprio_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY reservation_proprio
    ADD CONSTRAINT reservation_proprio_pkey PRIMARY KEY (res_id);


--
-- Name: resource_calendar_attendance_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY resource_calendar_attendance
    ADD CONSTRAINT resource_calendar_attendance_pkey PRIMARY KEY (id);


--
-- Name: resource_calendar_leaves_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY resource_calendar_leaves
    ADD CONSTRAINT resource_calendar_leaves_pkey PRIMARY KEY (id);


--
-- Name: resource_calendar_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY resource_calendar
    ADD CONSTRAINT resource_calendar_pkey PRIMARY KEY (id);


--
-- Name: resource_resource_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY resource_resource
    ADD CONSTRAINT resource_resource_pkey PRIMARY KEY (id);


--
-- Name: rule_group_rel_rule_group_id_group_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY rule_group_rel
    ADD CONSTRAINT rule_group_rel_rule_group_id_group_id_key UNIQUE (rule_group_id, group_id);


--
-- Name: sale_member_rel_section_id_member_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY sale_member_rel
    ADD CONSTRAINT sale_member_rel_section_id_member_id_key UNIQUE (section_id, member_id);


--
-- Name: section_stage_rel_stage_id_section_id_key; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY section_stage_rel
    ADD CONSTRAINT section_stage_rel_stage_id_section_id_key UNIQUE (stage_id, section_id);


--
-- Name: spatial_ref_sys_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY spatial_ref_sys
    ADD CONSTRAINT spatial_ref_sys_pkey PRIMARY KEY (srid);


--
-- Name: table_hote_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY table_hote
    ADD CONSTRAINT table_hote_pkey PRIMARY KEY (tabho_pk);


--
-- Name: type_heb_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY type_heb
    ADD CONSTRAINT type_heb_pkey PRIMARY KEY (type_heb_pk);


--
-- Name: type_info_pratique_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY type_info_pratique
    ADD CONSTRAINT type_info_pratique_pkey PRIMARY KEY (typinfoprat_pk);


--
-- Name: type_info_touristique_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY type_info_touristique
    ADD CONSTRAINT type_info_touristique_pkey PRIMARY KEY (typinfotour_pk);


--
-- Name: unique_id_provider; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY map_blacklist
    ADD CONSTRAINT unique_id_provider UNIQUE (blacklist_id, blacklist_provider_pk);


--
-- Name: user_preferences_config_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY user_preferences_config
    ADD CONSTRAINT user_preferences_config_pkey PRIMARY KEY (id);


--
-- Name: wizard_ir_model_menu_create_line_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY wizard_ir_model_menu_create_line
    ADD CONSTRAINT wizard_ir_model_menu_create_line_pkey PRIMARY KEY (id);


--
-- Name: wizard_ir_model_menu_create_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY wizard_ir_model_menu_create
    ADD CONSTRAINT wizard_ir_model_menu_create_pkey PRIMARY KEY (id);


--
-- Name: wkf_activity_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY wkf_activity
    ADD CONSTRAINT wkf_activity_pkey PRIMARY KEY (id);


--
-- Name: wkf_instance_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY wkf_instance
    ADD CONSTRAINT wkf_instance_pkey PRIMARY KEY (id);


--
-- Name: wkf_logs_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY wkf_logs
    ADD CONSTRAINT wkf_logs_pkey PRIMARY KEY (id);


--
-- Name: wkf_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY wkf
    ADD CONSTRAINT wkf_pkey PRIMARY KEY (id);


--
-- Name: wkf_transition_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY wkf_transition
    ADD CONSTRAINT wkf_transition_pkey PRIMARY KEY (id);


--
-- Name: wkf_triggers_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY wkf_triggers
    ADD CONSTRAINT wkf_triggers_pkey PRIMARY KEY (id);


--
-- Name: wkf_workitem_pkey; Type: CONSTRAINT; Schema: public; Owner: -; Tablespace: 
--

ALTER TABLE ONLY wkf_workitem
    ADD CONSTRAINT wkf_workitem_pkey PRIMARY KEY (id);


SET search_path = pgq, pg_catalog;

--
-- Name: event_3_0_txid_idx; Type: INDEX; Schema: pgq; Owner: -; Tablespace: 
--

CREATE INDEX event_3_0_txid_idx ON event_3_0 USING btree (ev_txid);


--
-- Name: event_3_1_txid_idx; Type: INDEX; Schema: pgq; Owner: -; Tablespace: 
--

CREATE INDEX event_3_1_txid_idx ON event_3_1 USING btree (ev_txid);


--
-- Name: event_3_2_txid_idx; Type: INDEX; Schema: pgq; Owner: -; Tablespace: 
--

CREATE INDEX event_3_2_txid_idx ON event_3_2 USING btree (ev_txid);


--
-- Name: rq_retry_idx; Type: INDEX; Schema: pgq; Owner: -; Tablespace: 
--

CREATE INDEX rq_retry_idx ON retry_queue USING btree (ev_retry_after);


--
-- Name: rq_retry_owner_idx; Type: INDEX; Schema: pgq; Owner: -; Tablespace: 
--

CREATE INDEX rq_retry_owner_idx ON retry_queue USING btree (ev_owner, ev_id);


SET search_path = public, pg_catalog;

--
-- Name: account_analytic_account_code_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX account_analytic_account_code_index ON account_analytic_account USING btree (code);


--
-- Name: account_analytic_account_date_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX account_analytic_account_date_index ON account_analytic_account USING btree (date);


--
-- Name: account_analytic_account_parent_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX account_analytic_account_parent_id_index ON account_analytic_account USING btree (parent_id);


--
-- Name: account_analytic_line_account_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX account_analytic_line_account_id_index ON account_analytic_line USING btree (account_id);


--
-- Name: account_analytic_line_date_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX account_analytic_line_date_index ON account_analytic_line USING btree (date);


--
-- Name: act_window_view_unique_mode_per_action; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE UNIQUE INDEX act_window_view_unique_mode_per_action ON ir_act_window_view USING btree (act_window_id, view_mode);


--
-- Name: alarm_attendee_rel_alarm_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX alarm_attendee_rel_alarm_id_index ON alarm_attendee_rel USING btree (alarm_id);


--
-- Name: alarm_attendee_rel_attendee_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX alarm_attendee_rel_attendee_id_index ON alarm_attendee_rel USING btree (attendee_id);


--
-- Name: board_board_line_position_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX board_board_line_position_index ON board_board_line USING btree ("position");


--
-- Name: board_board_line_sequence_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX board_board_line_sequence_index ON board_board_line USING btree (sequence);


--
-- Name: calendar_alarm_state_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX calendar_alarm_state_index ON calendar_alarm USING btree (state);


--
-- Name: calendar_attendee_child_rel_attendee_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX calendar_attendee_child_rel_attendee_id_index ON calendar_attendee_child_rel USING btree (attendee_id);


--
-- Name: calendar_attendee_child_rel_child_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX calendar_attendee_child_rel_child_id_index ON calendar_attendee_child_rel USING btree (child_id);


--
-- Name: calendar_attendee_parent_rel_attendee_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX calendar_attendee_parent_rel_attendee_id_index ON calendar_attendee_parent_rel USING btree (attendee_id);


--
-- Name: calendar_attendee_parent_rel_parent_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX calendar_attendee_parent_rel_parent_id_index ON calendar_attendee_parent_rel USING btree (parent_id);


--
-- Name: com_pk_prov_fk; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX com_pk_prov_fk ON commune USING btree (com_pk, com_prov_fk);


--
-- Name: com_prov_fk; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX com_prov_fk ON commune USING btree (com_prov_fk);


--
-- Name: crm_lead2opportunity_partner_mass_res_users_rel_crm_lead2opport; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead2opportunity_partner_mass_res_users_rel_crm_lead2opport ON crm_lead2opportunity_partner_mass_res_users_rel USING btree (crm_lead2opportunity_partner_mass_id);


--
-- Name: crm_lead2opportunity_partner_mass_res_users_rel_res_users_id_in; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead2opportunity_partner_mass_res_users_rel_res_users_id_in ON crm_lead2opportunity_partner_mass_res_users_rel USING btree (res_users_id);


--
-- Name: crm_lead_company_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_company_id_index ON crm_lead USING btree (company_id);


--
-- Name: crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead2opportu; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead2opportu ON crm_lead_crm_lead2opportunity_partner_mass_rel USING btree (crm_lead2opportunity_partner_mass_id);


--
-- Name: crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead_id_inde; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead_id_inde ON crm_lead_crm_lead2opportunity_partner_mass_rel USING btree (crm_lead_id);


--
-- Name: crm_lead_crm_lead2opportunity_partner_rel_crm_lead2opportunity_; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_crm_lead2opportunity_partner_rel_crm_lead2opportunity_ ON crm_lead_crm_lead2opportunity_partner_rel USING btree (crm_lead2opportunity_partner_id);


--
-- Name: crm_lead_crm_lead2opportunity_partner_rel_crm_lead_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_crm_lead2opportunity_partner_rel_crm_lead_id_index ON crm_lead_crm_lead2opportunity_partner_rel USING btree (crm_lead_id);


--
-- Name: crm_lead_date_action_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_date_action_index ON crm_lead USING btree (date_action);


--
-- Name: crm_lead_email_from_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_email_from_index ON crm_lead USING btree (email_from);


--
-- Name: crm_lead_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_name_index ON crm_lead USING btree (name);


--
-- Name: crm_lead_partner_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_partner_id_index ON crm_lead USING btree (partner_id);


--
-- Name: crm_lead_partner_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_partner_name_index ON crm_lead USING btree (partner_name);


--
-- Name: crm_lead_priority_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_priority_index ON crm_lead USING btree (priority);


--
-- Name: crm_lead_section_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_section_id_index ON crm_lead USING btree (section_id);


--
-- Name: crm_lead_user_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_lead_user_id_index ON crm_lead USING btree (user_id);


--
-- Name: crm_meeting_section_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_meeting_section_id_index ON crm_meeting USING btree (section_id);


--
-- Name: crm_opportunity2phonecall_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_opportunity2phonecall_name_index ON crm_opportunity2phonecall USING btree (name);


--
-- Name: crm_phonecall2phonecall_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_phonecall2phonecall_name_index ON crm_phonecall2phonecall USING btree (name);


--
-- Name: crm_phonecall_section_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX crm_phonecall_section_id_index ON crm_phonecall USING btree (section_id);


--
-- Name: decimal_precision_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX decimal_precision_name_index ON decimal_precision USING btree (name);


--
-- Name: email_message_send_attachment_rel_attachment_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX email_message_send_attachment_rel_attachment_id_index ON email_message_send_attachment_rel USING btree (attachment_id);


--
-- Name: email_message_send_attachment_rel_wizard_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX email_message_send_attachment_rel_wizard_id_index ON email_message_send_attachment_rel USING btree (wizard_id);


--
-- Name: event_attendee_rel_attendee_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX event_attendee_rel_attendee_id_index ON event_attendee_rel USING btree (attendee_id);


--
-- Name: event_attendee_rel_event_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX event_attendee_rel_event_id_index ON event_attendee_rel USING btree (event_id);


--
-- Name: fetchmail_server_state_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX fetchmail_server_state_index ON fetchmail_server USING btree (state);


--
-- Name: fetchmail_server_type_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX fetchmail_server_type_index ON fetchmail_server USING btree (type);


--
-- Name: heb_com_fk_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX heb_com_fk_idx ON hebergement USING btree (heb_com_fk);


--
-- Name: heb_public_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX heb_public_idx ON hebergement USING btree (heb_site_public);


--
-- Name: invite_contact_rel_contact_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX invite_contact_rel_contact_id_index ON invite_contact_rel USING btree (contact_id);


--
-- Name: invite_contact_rel_invite_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX invite_contact_rel_invite_id_index ON invite_contact_rel USING btree (invite_id);


--
-- Name: invite_user_rel_invite_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX invite_user_rel_invite_id_index ON invite_user_rel USING btree (invite_id);


--
-- Name: invite_user_rel_user_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX invite_user_rel_user_id_index ON invite_user_rel USING btree (user_id);


--
-- Name: ir_act_window_group_rel_act_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_act_window_group_rel_act_id_index ON ir_act_window_group_rel USING btree (act_id);


--
-- Name: ir_act_window_group_rel_gid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_act_window_group_rel_gid_index ON ir_act_window_group_rel USING btree (gid);


--
-- Name: ir_actions_todo_action_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_actions_todo_action_id_index ON ir_actions_todo USING btree (action_id);


--
-- Name: ir_attachment_res_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_attachment_res_idx ON ir_attachment USING btree (res_model, res_id);


--
-- Name: ir_config_parameter_key_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_config_parameter_key_index ON ir_config_parameter USING btree (key);


--
-- Name: ir_exports_line_export_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_exports_line_export_id_index ON ir_exports_line USING btree (export_id);


--
-- Name: ir_exports_resource_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_exports_resource_index ON ir_exports USING btree (resource);


--
-- Name: ir_filters_name_model_uid_unique_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE UNIQUE INDEX ir_filters_name_model_uid_unique_index ON ir_filters USING btree (lower((name)::text), model_id, user_id);


--
-- Name: ir_mail_server_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_mail_server_name_index ON ir_mail_server USING btree (name);


--
-- Name: ir_model_access_group_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_access_group_id_index ON ir_model_access USING btree (group_id);


--
-- Name: ir_model_access_model_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_access_model_id_index ON ir_model_access USING btree (model_id);


--
-- Name: ir_model_access_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_access_name_index ON ir_model_access USING btree (name);


--
-- Name: ir_model_data_model_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_data_model_index ON ir_model_data USING btree (model);


--
-- Name: ir_model_data_module_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_data_module_index ON ir_model_data USING btree (module);


--
-- Name: ir_model_data_module_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_data_module_name_index ON ir_model_data USING btree (module, name);


--
-- Name: ir_model_data_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_data_name_index ON ir_model_data USING btree (name);


--
-- Name: ir_model_data_res_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_data_res_id_index ON ir_model_data USING btree (res_id);


--
-- Name: ir_model_fields_complete_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_fields_complete_name_index ON ir_model_fields USING btree (complete_name);


--
-- Name: ir_model_fields_group_rel_field_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_fields_group_rel_field_id_index ON ir_model_fields_group_rel USING btree (field_id);


--
-- Name: ir_model_fields_group_rel_group_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_fields_group_rel_group_id_index ON ir_model_fields_group_rel USING btree (group_id);


--
-- Name: ir_model_fields_model_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_fields_model_id_index ON ir_model_fields USING btree (model_id);


--
-- Name: ir_model_fields_model_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_fields_model_index ON ir_model_fields USING btree (model);


--
-- Name: ir_model_fields_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_fields_name_index ON ir_model_fields USING btree (name);


--
-- Name: ir_model_fields_state_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_fields_state_index ON ir_model_fields USING btree (state);


--
-- Name: ir_model_model_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_model_model_index ON ir_model USING btree (model);


--
-- Name: ir_module_category_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_module_category_name_index ON ir_module_category USING btree (name);


--
-- Name: ir_module_category_parent_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_module_category_parent_id_index ON ir_module_category USING btree (parent_id);


--
-- Name: ir_module_module_category_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_module_module_category_id_index ON ir_module_module USING btree (category_id);


--
-- Name: ir_module_module_dependency_module_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_module_module_dependency_module_id_index ON ir_module_module_dependency USING btree (module_id);


--
-- Name: ir_module_module_dependency_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_module_module_dependency_name_index ON ir_module_module_dependency USING btree (name);


--
-- Name: ir_module_module_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_module_module_name_index ON ir_module_module USING btree (name);


--
-- Name: ir_module_module_state_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_module_module_state_index ON ir_module_module USING btree (state);


--
-- Name: ir_property_company_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_property_company_id_index ON ir_property USING btree (company_id);


--
-- Name: ir_property_fields_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_property_fields_id_index ON ir_property USING btree (fields_id);


--
-- Name: ir_property_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_property_name_index ON ir_property USING btree (name);


--
-- Name: ir_property_res_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_property_res_id_index ON ir_property USING btree (res_id);


--
-- Name: ir_property_type_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_property_type_index ON ir_property USING btree (type);


--
-- Name: ir_rule_model_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_rule_model_id_index ON ir_rule USING btree (model_id);


--
-- Name: ir_rule_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_rule_name_index ON ir_rule USING btree (name);


--
-- Name: ir_translation_ltn; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_translation_ltn ON ir_translation USING btree (name, lang, type);


--
-- Name: ir_translation_res_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_translation_res_id_index ON ir_translation USING btree (res_id);


--
-- Name: ir_translation_src_hash_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_translation_src_hash_idx ON ir_translation USING hash (src);


--
-- Name: ir_translation_type_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_translation_type_index ON ir_translation USING btree (type);


--
-- Name: ir_ui_menu_group_rel_gid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_menu_group_rel_gid_index ON ir_ui_menu_group_rel USING btree (gid);


--
-- Name: ir_ui_menu_group_rel_menu_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_menu_group_rel_menu_id_index ON ir_ui_menu_group_rel USING btree (menu_id);


--
-- Name: ir_ui_menu_parent_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_menu_parent_id_index ON ir_ui_menu USING btree (parent_id);


--
-- Name: ir_ui_view_custom_ref_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_view_custom_ref_id_index ON ir_ui_view_custom USING btree (ref_id);


--
-- Name: ir_ui_view_custom_user_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_view_custom_user_id_index ON ir_ui_view_custom USING btree (user_id);


--
-- Name: ir_ui_view_custom_user_id_ref_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_view_custom_user_id_ref_id ON ir_ui_view_custom USING btree (user_id, ref_id);


--
-- Name: ir_ui_view_inherit_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_view_inherit_id_index ON ir_ui_view USING btree (inherit_id);


--
-- Name: ir_ui_view_model_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_view_model_index ON ir_ui_view USING btree (model);


--
-- Name: ir_ui_view_model_type_inherit_id; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_view_model_type_inherit_id ON ir_ui_view USING btree (model, type, inherit_id);


--
-- Name: ir_ui_view_sc_resource_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_view_sc_resource_index ON ir_ui_view_sc USING btree (resource);


--
-- Name: ir_ui_view_sc_user_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_view_sc_user_id_index ON ir_ui_view_sc USING btree (user_id);


--
-- Name: ir_ui_view_sc_user_id_resource; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_view_sc_user_id_resource ON ir_ui_view_sc USING btree (user_id, resource);


--
-- Name: ir_ui_view_type_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_ui_view_type_index ON ir_ui_view USING btree (type);


--
-- Name: ir_values_company_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_values_company_id_index ON ir_values USING btree (company_id);


--
-- Name: ir_values_key2_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_values_key2_index ON ir_values USING btree (key2);


--
-- Name: ir_values_key_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_values_key_index ON ir_values USING btree (key);


--
-- Name: ir_values_key_model_key2_res_id_user_id_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_values_key_model_key2_res_id_user_id_idx ON ir_values USING btree (key, model, key2, res_id, user_id);


--
-- Name: ir_values_model_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_values_model_index ON ir_values USING btree (model);


--
-- Name: ir_values_res_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_values_res_id_index ON ir_values USING btree (res_id);


--
-- Name: ir_values_user_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX ir_values_user_id_index ON ir_values USING btree (user_id);


--
-- Name: lnk_heb_fk_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX lnk_heb_fk_idx ON link_hebergement_metadata USING btree (heb_fk);


--
-- Name: lnk_metadata_fk_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX lnk_metadata_fk_idx ON link_hebergement_metadata USING btree (metadata_fk);


--
-- Name: lnk_metadata_fk_value_heb_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX lnk_metadata_fk_value_heb_idx ON link_hebergement_metadata USING btree (heb_fk, metadata_fk, link_met_value);


--
-- Name: lnk_metadata_fk_value_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX lnk_metadata_fk_value_idx ON link_hebergement_metadata USING btree (link_met_value, metadata_fk);


--
-- Name: log_hebid_date_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX log_hebid_date_idx ON log USING btree (log_hebid, log_date);


--
-- Name: log_hebid_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX log_hebid_idx ON log USING btree (log_hebid);


--
-- Name: log_hebpk_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX log_hebpk_idx ON log USING btree (log_hebpk);


--
-- Name: mail_compose_message_message_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX mail_compose_message_message_id_index ON mail_compose_message USING btree (message_id);


--
-- Name: mail_compose_message_model_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX mail_compose_message_model_index ON mail_compose_message USING btree (model);


--
-- Name: mail_compose_message_res_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX mail_compose_message_res_id_index ON mail_compose_message USING btree (res_id);


--
-- Name: mail_message_common_message_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX mail_message_common_message_id_index ON mail_message_common USING btree (message_id);


--
-- Name: mail_message_common_model_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX mail_message_common_model_index ON mail_message_common USING btree (model);


--
-- Name: mail_message_common_res_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX mail_message_common_res_id_index ON mail_message_common USING btree (res_id);


--
-- Name: mail_message_fetchmail_server_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX mail_message_fetchmail_server_id_index ON mail_message USING btree (fetchmail_server_id);


--
-- Name: mail_message_message_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX mail_message_message_id_index ON mail_message USING btree (message_id);


--
-- Name: mail_message_model_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX mail_message_model_index ON mail_message USING btree (model);


--
-- Name: mail_message_model_res_id_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX mail_message_model_res_id_idx ON mail_message USING btree (model, res_id);


--
-- Name: mail_message_res_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX mail_message_res_id_index ON mail_message USING btree (res_id);


--
-- Name: meeting_attendee_rel_attendee_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX meeting_attendee_rel_attendee_id_index ON meeting_attendee_rel USING btree (attendee_id);


--
-- Name: meeting_attendee_rel_event_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX meeting_attendee_rel_event_id_index ON meeting_attendee_rel USING btree (event_id);


--
-- Name: merge_opportunity_rel_merge_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX merge_opportunity_rel_merge_id_index ON merge_opportunity_rel USING btree (merge_id);


--
-- Name: merge_opportunity_rel_opportunity_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX merge_opportunity_rel_opportunity_id_index ON merge_opportunity_rel USING btree (opportunity_id);


--
-- Name: message_attachment_rel_attachment_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX message_attachment_rel_attachment_id_index ON message_attachment_rel USING btree (attachment_id);


--
-- Name: message_attachment_rel_message_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX message_attachment_rel_message_id_index ON message_attachment_rel USING btree (message_id);


--
-- Name: met_id_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX met_id_idx ON metadata USING btree (met_id);


--
-- Name: pro_etat_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX pro_etat_idx ON proprio USING btree (pro_etat);


--
-- Name: process_transition_group_rel_rid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX process_transition_group_rel_rid_index ON process_transition_group_rel USING btree (rid);


--
-- Name: process_transition_group_rel_tid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX process_transition_group_rel_tid_index ON process_transition_group_rel USING btree (tid);


--
-- Name: process_transition_ids_ptr_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX process_transition_ids_ptr_id_index ON process_transition_ids USING btree (ptr_id);


--
-- Name: process_transition_ids_wtr_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX process_transition_ids_wtr_id_index ON process_transition_ids USING btree (wtr_id);


--
-- Name: product_category_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_category_name_index ON product_category USING btree (name);


--
-- Name: product_category_parent_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_category_parent_id_index ON product_category USING btree (parent_id);


--
-- Name: product_category_parent_left_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_category_parent_left_index ON product_category USING btree (parent_left);


--
-- Name: product_category_parent_right_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_category_parent_right_index ON product_category USING btree (parent_right);


--
-- Name: product_category_sequence_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_category_sequence_index ON product_category USING btree (sequence);


--
-- Name: product_packaging_product_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_packaging_product_id_index ON product_packaging USING btree (product_id);


--
-- Name: product_pricelist_item_price_version_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_pricelist_item_price_version_id_index ON product_pricelist_item USING btree (price_version_id);


--
-- Name: product_pricelist_version_pricelist_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_pricelist_version_pricelist_id_index ON product_pricelist_version USING btree (pricelist_id);


--
-- Name: product_product_default_code_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_product_default_code_index ON product_product USING btree (default_code);


--
-- Name: product_product_name_template_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_product_name_template_index ON product_product USING btree (name_template);


--
-- Name: product_supplierinfo_company_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_supplierinfo_company_id_index ON product_supplierinfo USING btree (company_id);


--
-- Name: product_supplierinfo_product_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_supplierinfo_product_id_index ON product_supplierinfo USING btree (product_id);


--
-- Name: product_template_company_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_template_company_id_index ON product_template USING btree (company_id);


--
-- Name: product_template_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_template_name_index ON product_template USING btree (name);


--
-- Name: product_ul_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX product_ul_name_index ON product_ul USING btree (name);


--
-- Name: project_task_date_deadline_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_date_deadline_index ON project_task USING btree (date_deadline);


--
-- Name: project_task_date_end_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_date_end_index ON project_task USING btree (date_end);


--
-- Name: project_task_date_start_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_date_start_index ON project_task USING btree (date_start);


--
-- Name: project_task_history_date_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_history_date_index ON project_task_history USING btree (date);


--
-- Name: project_task_history_task_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_history_task_id_index ON project_task_history USING btree (task_id);


--
-- Name: project_task_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_name_index ON project_task USING btree (name);


--
-- Name: project_task_parent_rel_parent_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_parent_rel_parent_id_index ON project_task_parent_rel USING btree (parent_id);


--
-- Name: project_task_parent_rel_task_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_parent_rel_task_id_index ON project_task_parent_rel USING btree (task_id);


--
-- Name: project_task_priority_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_priority_index ON project_task USING btree (priority);


--
-- Name: project_task_project_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_project_id_index ON project_task USING btree (project_id);


--
-- Name: project_task_sequence_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_sequence_index ON project_task USING btree (sequence);


--
-- Name: project_task_type_rel_project_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_type_rel_project_id_index ON project_task_type_rel USING btree (project_id);


--
-- Name: project_task_type_rel_type_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_type_rel_type_id_index ON project_task_type_rel USING btree (type_id);


--
-- Name: project_task_work_date_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_work_date_index ON project_task_work USING btree (date);


--
-- Name: project_task_work_task_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_work_task_id_index ON project_task_work USING btree (task_id);


--
-- Name: project_task_work_user_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_task_work_user_id_index ON project_task_work USING btree (user_id);


--
-- Name: project_user_rel_project_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_user_rel_project_id_index ON project_user_rel USING btree (project_id);


--
-- Name: project_user_rel_uid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX project_user_rel_uid_index ON project_user_rel USING btree (uid);


--
-- Name: rel_modules_langexport_module_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX rel_modules_langexport_module_id_index ON rel_modules_langexport USING btree (module_id);


--
-- Name: rel_modules_langexport_wiz_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX rel_modules_langexport_wiz_id_index ON rel_modules_langexport USING btree (wiz_id);


--
-- Name: rel_server_actions_action_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX rel_server_actions_action_id_index ON rel_server_actions USING btree (action_id);


--
-- Name: rel_server_actions_server_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX rel_server_actions_server_id_index ON rel_server_actions USING btree (server_id);


--
-- Name: res_company_parent_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_company_parent_id_index ON res_company USING btree (parent_id);


--
-- Name: res_company_users_rel_cid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_company_users_rel_cid_index ON res_company_users_rel USING btree (cid);


--
-- Name: res_company_users_rel_user_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_company_users_rel_user_id_index ON res_company_users_rel USING btree (user_id);


--
-- Name: res_currency_rate_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_currency_rate_name_index ON res_currency_rate USING btree (name);


--
-- Name: res_currency_unique_name_company_id_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE UNIQUE INDEX res_currency_unique_name_company_id_idx ON res_currency USING btree (name, (COALESCE(company_id, (-1))));


--
-- Name: res_groups_action_rel_gid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_groups_action_rel_gid_index ON res_groups_action_rel USING btree (gid);


--
-- Name: res_groups_action_rel_uid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_groups_action_rel_uid_index ON res_groups_action_rel USING btree (uid);


--
-- Name: res_groups_category_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_groups_category_id_index ON res_groups USING btree (category_id);


--
-- Name: res_groups_implied_rel_gid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_groups_implied_rel_gid_index ON res_groups_implied_rel USING btree (gid);


--
-- Name: res_groups_implied_rel_hid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_groups_implied_rel_hid_index ON res_groups_implied_rel USING btree (hid);


--
-- Name: res_groups_report_rel_gid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_groups_report_rel_gid_index ON res_groups_report_rel USING btree (gid);


--
-- Name: res_groups_report_rel_uid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_groups_report_rel_uid_index ON res_groups_report_rel USING btree (uid);


--
-- Name: res_groups_users_rel_gid_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_groups_users_rel_gid_idx ON res_groups_users_rel USING btree (gid);


--
-- Name: res_groups_users_rel_uid_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_groups_users_rel_uid_idx ON res_groups_users_rel USING btree (uid);


--
-- Name: res_groups_wizard_rel_gid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_groups_wizard_rel_gid_index ON res_groups_wizard_rel USING btree (gid);


--
-- Name: res_groups_wizard_rel_uid_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_groups_wizard_rel_uid_index ON res_groups_wizard_rel USING btree (uid);


--
-- Name: res_log_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_log_name_index ON res_log USING btree (name);


--
-- Name: res_log_res_model_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_log_res_model_index ON res_log USING btree (res_model);


--
-- Name: res_log_uid_read; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_log_uid_read ON res_log USING btree (user_id, read);


--
-- Name: res_partner_address_company_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_address_company_id_index ON res_partner_address USING btree (company_id);


--
-- Name: res_partner_address_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_address_name_index ON res_partner_address USING btree (name);


--
-- Name: res_partner_address_partner_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_address_partner_id_index ON res_partner_address USING btree (partner_id);


--
-- Name: res_partner_bank_partner_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_bank_partner_id_index ON res_partner_bank USING btree (partner_id);


--
-- Name: res_partner_category_parent_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_category_parent_id_index ON res_partner_category USING btree (parent_id);


--
-- Name: res_partner_category_parent_left_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_category_parent_left_index ON res_partner_category USING btree (parent_left);


--
-- Name: res_partner_category_parent_right_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_category_parent_right_index ON res_partner_category USING btree (parent_right);


--
-- Name: res_partner_category_rel_category_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_category_rel_category_id_index ON res_partner_category_rel USING btree (category_id);


--
-- Name: res_partner_category_rel_partner_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_category_rel_partner_id_index ON res_partner_category_rel USING btree (partner_id);


--
-- Name: res_partner_company_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_company_id_index ON res_partner USING btree (company_id);


--
-- Name: res_partner_date_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_date_index ON res_partner USING btree (date);


--
-- Name: res_partner_event_partner_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_event_partner_id_index ON res_partner_event USING btree (partner_id);


--
-- Name: res_partner_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_name_index ON res_partner USING btree (name);


--
-- Name: res_partner_ref_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_partner_ref_index ON res_partner USING btree (ref);


--
-- Name: res_request_act_from_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_request_act_from_index ON res_request USING btree (act_from);


--
-- Name: res_request_act_to_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_request_act_to_index ON res_request USING btree (act_to);


--
-- Name: res_request_history_req_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_request_history_req_id_index ON res_request_history USING btree (req_id);


--
-- Name: res_request_trigger_date_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_request_trigger_date_index ON res_request USING btree (trigger_date);


--
-- Name: res_users_name_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_users_name_index ON res_users USING btree (name);


--
-- Name: res_widget_user_user_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX res_widget_user_user_id_index ON res_widget_user USING btree (user_id);


--
-- Name: reservation_proprio_heb_dte_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX reservation_proprio_heb_dte_idx ON reservation_proprio USING btree (heb_fk, res_date);


--
-- Name: reservation_proprio_heb_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX reservation_proprio_heb_idx ON reservation_proprio USING btree (heb_fk);


--
-- Name: resource_calendar_attendance_dayofweek_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX resource_calendar_attendance_dayofweek_index ON resource_calendar_attendance USING btree (dayofweek);


--
-- Name: resource_calendar_attendance_hour_from_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX resource_calendar_attendance_hour_from_index ON resource_calendar_attendance USING btree (hour_from);


--
-- Name: rule_group_rel_group_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX rule_group_rel_group_id_index ON rule_group_rel USING btree (group_id);


--
-- Name: rule_group_rel_rule_group_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX rule_group_rel_rule_group_id_index ON rule_group_rel USING btree (rule_group_id);


--
-- Name: sale_member_rel_member_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX sale_member_rel_member_id_index ON sale_member_rel USING btree (member_id);


--
-- Name: sale_member_rel_section_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX sale_member_rel_section_id_index ON sale_member_rel USING btree (section_id);


--
-- Name: section_stage_rel_section_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX section_stage_rel_section_id_index ON section_stage_rel USING btree (section_id);


--
-- Name: section_stage_rel_stage_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX section_stage_rel_stage_id_index ON section_stage_rel USING btree (stage_id);


--
-- Name: wkf_activity_wkf_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_activity_wkf_id_index ON wkf_activity USING btree (wkf_id);


--
-- Name: wkf_instance_res_id_wkf_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_instance_res_id_wkf_id_index ON wkf_instance USING btree (res_id, wkf_id);


--
-- Name: wkf_instance_res_type_res_id_state_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_instance_res_type_res_id_state_index ON wkf_instance USING btree (res_type, res_id, state);


--
-- Name: wkf_instance_wkf_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_instance_wkf_id_index ON wkf_instance USING btree (wkf_id);


--
-- Name: wkf_on_create_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_on_create_index ON wkf USING btree (on_create);


--
-- Name: wkf_osv_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_osv_index ON wkf USING btree (osv);


--
-- Name: wkf_transition_act_from_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_transition_act_from_index ON wkf_transition USING btree (act_from);


--
-- Name: wkf_transition_act_to_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_transition_act_to_index ON wkf_transition USING btree (act_to);


--
-- Name: wkf_triggers_res_id_model_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_triggers_res_id_model_index ON wkf_triggers USING btree (res_id, model);


--
-- Name: wkf_witm_trans_inst_idx; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_witm_trans_inst_idx ON wkf_witm_trans USING btree (inst_id);


--
-- Name: wkf_workitem_act_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_workitem_act_id_index ON wkf_workitem USING btree (act_id);


--
-- Name: wkf_workitem_inst_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_workitem_inst_id_index ON wkf_workitem USING btree (inst_id);


--
-- Name: wkf_workitem_state_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_workitem_state_index ON wkf_workitem USING btree (state);


--
-- Name: wkf_workitem_subflow_id_index; Type: INDEX; Schema: public; Owner: -; Tablespace: 
--

CREATE INDEX wkf_workitem_subflow_id_index ON wkf_workitem USING btree (subflow_id);


SET search_path = txid, pg_catalog;

--
-- Name: epoch_guard_trigger; Type: TRIGGER; Schema: txid; Owner: -
--

CREATE TRIGGER epoch_guard_trigger BEFORE INSERT OR DELETE OR UPDATE ON epoch FOR EACH ROW EXECUTE PROCEDURE epoch_guard();


SET search_path = pgq, pg_catalog;

--
-- Name: tick_queue_fkey; Type: FK CONSTRAINT; Schema: pgq; Owner: -
--

ALTER TABLE ONLY tick
    ADD CONSTRAINT tick_queue_fkey FOREIGN KEY (tick_queue) REFERENCES queue(queue_id);


SET search_path = public, pg_catalog;

--
-- Name: account_analytic_account_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES res_partner_address(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_analytic_account(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_account_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_account
    ADD CONSTRAINT account_analytic_account_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_line_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_analytic_account(id) ON DELETE CASCADE;


--
-- Name: account_analytic_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_line_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: account_analytic_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY account_analytic_line
    ADD CONSTRAINT account_analytic_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: alarm_attendee_rel_alarm_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY alarm_attendee_rel
    ADD CONSTRAINT alarm_attendee_rel_alarm_id_fkey FOREIGN KEY (alarm_id) REFERENCES calendar_alarm(id) ON DELETE CASCADE;


--
-- Name: alarm_attendee_rel_attendee_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY alarm_attendee_rel
    ADD CONSTRAINT alarm_attendee_rel_attendee_id_fkey FOREIGN KEY (attendee_id) REFERENCES calendar_attendee(id) ON DELETE CASCADE;


--
-- Name: base_action_rule_act_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_act_categ_id_fkey FOREIGN KEY (act_categ_id) REFERENCES crm_case_categ(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_act_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_act_section_id_fkey FOREIGN KEY (act_section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_act_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_act_user_id_fkey FOREIGN KEY (act_user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_filter_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_filter_id_fkey FOREIGN KEY (filter_id) REFERENCES ir_filters(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_server_action_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_server_action_id_fkey FOREIGN KEY (server_action_id) REFERENCES ir_act_server(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_trg_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_trg_categ_id_fkey FOREIGN KEY (trg_categ_id) REFERENCES crm_case_categ(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_trg_partner_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_trg_partner_categ_id_fkey FOREIGN KEY (trg_partner_categ_id) REFERENCES res_partner_category(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_trg_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_trg_partner_id_fkey FOREIGN KEY (trg_partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_trg_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_trg_section_id_fkey FOREIGN KEY (trg_section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_trg_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_trg_user_id_fkey FOREIGN KEY (trg_user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_action_rule_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_action_rule
    ADD CONSTRAINT base_action_rule_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_calendar_invite_attendee_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_calendar_invite_attendee
    ADD CONSTRAINT base_calendar_invite_attendee_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_calendar_invite_attendee_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_calendar_invite_attendee
    ADD CONSTRAINT base_calendar_invite_attendee_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: base_calendar_invite_attendee_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_calendar_invite_attendee
    ADD CONSTRAINT base_calendar_invite_attendee_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_language_export_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_language_export
    ADD CONSTRAINT base_language_export_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_language_export_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_language_export
    ADD CONSTRAINT base_language_export_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_language_import_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_language_import
    ADD CONSTRAINT base_language_import_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_language_import_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_language_import
    ADD CONSTRAINT base_language_import_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_language_install_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_language_install
    ADD CONSTRAINT base_language_install_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_language_install_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_language_install
    ADD CONSTRAINT base_language_install_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_configuration_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_module_configuration
    ADD CONSTRAINT base_module_configuration_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_configuration_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_module_configuration
    ADD CONSTRAINT base_module_configuration_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_import_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_module_import
    ADD CONSTRAINT base_module_import_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_import_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_module_import
    ADD CONSTRAINT base_module_import_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_update_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_module_update
    ADD CONSTRAINT base_module_update_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_update_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_module_update
    ADD CONSTRAINT base_module_update_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_upgrade_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_module_upgrade
    ADD CONSTRAINT base_module_upgrade_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_module_upgrade_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_module_upgrade
    ADD CONSTRAINT base_module_upgrade_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_setup_terminology_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_setup_terminology
    ADD CONSTRAINT base_setup_terminology_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_setup_terminology_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_setup_terminology
    ADD CONSTRAINT base_setup_terminology_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_update_translations_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_update_translations
    ADD CONSTRAINT base_update_translations_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: base_update_translations_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY base_update_translations
    ADD CONSTRAINT base_update_translations_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: blockinghistory_heb_pk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY blockinghistory
    ADD CONSTRAINT blockinghistory_heb_pk_fkey FOREIGN KEY (heb_pk) REFERENCES hebergement(heb_pk);


--
-- Name: board_board_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_board
    ADD CONSTRAINT board_board_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: board_board_line_action_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_board_line
    ADD CONSTRAINT board_board_line_action_id_fkey FOREIGN KEY (action_id) REFERENCES ir_act_window(id) ON DELETE SET NULL;


--
-- Name: board_board_line_board_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_board_line
    ADD CONSTRAINT board_board_line_board_id_fkey FOREIGN KEY (board_id) REFERENCES board_board(id) ON DELETE CASCADE;


--
-- Name: board_board_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_board_line
    ADD CONSTRAINT board_board_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: board_board_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_board_line
    ADD CONSTRAINT board_board_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: board_board_view_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_board
    ADD CONSTRAINT board_board_view_id_fkey FOREIGN KEY (view_id) REFERENCES ir_ui_view(id) ON DELETE SET NULL;


--
-- Name: board_board_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_board
    ADD CONSTRAINT board_board_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: board_menu_create_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_menu_create
    ADD CONSTRAINT board_menu_create_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: board_menu_create_menu_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_menu_create
    ADD CONSTRAINT board_menu_create_menu_parent_id_fkey FOREIGN KEY (menu_parent_id) REFERENCES ir_ui_menu(id) ON DELETE CASCADE;


--
-- Name: board_menu_create_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY board_menu_create
    ADD CONSTRAINT board_menu_create_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_alarm_alarm_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_alarm
    ADD CONSTRAINT calendar_alarm_alarm_id_fkey FOREIGN KEY (alarm_id) REFERENCES res_alarm(id) ON DELETE CASCADE;


--
-- Name: calendar_alarm_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_alarm
    ADD CONSTRAINT calendar_alarm_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_alarm_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_alarm
    ADD CONSTRAINT calendar_alarm_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: calendar_alarm_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_alarm
    ADD CONSTRAINT calendar_alarm_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_alarm_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_alarm
    ADD CONSTRAINT calendar_alarm_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_attendee_child_rel_attendee_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_attendee_child_rel
    ADD CONSTRAINT calendar_attendee_child_rel_attendee_id_fkey FOREIGN KEY (attendee_id) REFERENCES calendar_attendee(id) ON DELETE CASCADE;


--
-- Name: calendar_attendee_child_rel_child_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_attendee_child_rel
    ADD CONSTRAINT calendar_attendee_child_rel_child_id_fkey FOREIGN KEY (child_id) REFERENCES calendar_attendee(id) ON DELETE CASCADE;


--
-- Name: calendar_attendee_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_attendee
    ADD CONSTRAINT calendar_attendee_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_attendee_parent_rel_attendee_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_attendee_parent_rel
    ADD CONSTRAINT calendar_attendee_parent_rel_attendee_id_fkey FOREIGN KEY (attendee_id) REFERENCES calendar_attendee(id) ON DELETE CASCADE;


--
-- Name: calendar_attendee_parent_rel_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_attendee_parent_rel
    ADD CONSTRAINT calendar_attendee_parent_rel_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES calendar_attendee(id) ON DELETE CASCADE;


--
-- Name: calendar_attendee_partner_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_attendee
    ADD CONSTRAINT calendar_attendee_partner_address_id_fkey FOREIGN KEY (partner_address_id) REFERENCES res_partner_address(id) ON DELETE SET NULL;


--
-- Name: calendar_attendee_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_attendee
    ADD CONSTRAINT calendar_attendee_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_attendee_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_attendee
    ADD CONSTRAINT calendar_attendee_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_event_alarm_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_alarm_id_fkey FOREIGN KEY (alarm_id) REFERENCES res_alarm(id) ON DELETE SET NULL;


--
-- Name: calendar_event_base_calendar_alarm_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_base_calendar_alarm_id_fkey FOREIGN KEY (base_calendar_alarm_id) REFERENCES calendar_alarm(id) ON DELETE SET NULL;


--
-- Name: calendar_event_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_event_organizer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_organizer_id_fkey FOREIGN KEY (organizer_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_event_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_event_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_event
    ADD CONSTRAINT calendar_event_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_todo_alarm_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_todo
    ADD CONSTRAINT calendar_todo_alarm_id_fkey FOREIGN KEY (alarm_id) REFERENCES res_alarm(id) ON DELETE SET NULL;


--
-- Name: calendar_todo_base_calendar_alarm_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_todo
    ADD CONSTRAINT calendar_todo_base_calendar_alarm_id_fkey FOREIGN KEY (base_calendar_alarm_id) REFERENCES calendar_alarm(id) ON DELETE SET NULL;


--
-- Name: calendar_todo_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_todo
    ADD CONSTRAINT calendar_todo_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_todo_organizer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_todo
    ADD CONSTRAINT calendar_todo_organizer_id_fkey FOREIGN KEY (organizer_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_todo_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_todo
    ADD CONSTRAINT calendar_todo_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: calendar_todo_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY calendar_todo
    ADD CONSTRAINT calendar_todo_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_add_note_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_add_note
    ADD CONSTRAINT crm_add_note_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_add_note_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_add_note
    ADD CONSTRAINT crm_add_note_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_categ_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_categ
    ADD CONSTRAINT crm_case_categ_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_categ_object_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_categ
    ADD CONSTRAINT crm_case_categ_object_id_fkey FOREIGN KEY (object_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: crm_case_categ_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_categ
    ADD CONSTRAINT crm_case_categ_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_case_categ_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_categ
    ADD CONSTRAINT crm_case_categ_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_channel_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_channel
    ADD CONSTRAINT crm_case_channel_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_channel_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_channel
    ADD CONSTRAINT crm_case_channel_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_resource_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_resource_type
    ADD CONSTRAINT crm_case_resource_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_resource_type_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_resource_type
    ADD CONSTRAINT crm_case_resource_type_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_case_resource_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_resource_type
    ADD CONSTRAINT crm_case_resource_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_section_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_section_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_case_section_resource_calendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_resource_calendar_id_fkey FOREIGN KEY (resource_calendar_id) REFERENCES resource_calendar(id) ON DELETE SET NULL;


--
-- Name: crm_case_section_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_section_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_section
    ADD CONSTRAINT crm_case_section_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_stage_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_stage
    ADD CONSTRAINT crm_case_stage_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_case_stage_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_case_stage
    ADD CONSTRAINT crm_case_stage_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner__crm_lead2opportunity_partner_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass_res_users_rel
    ADD CONSTRAINT crm_lead2opportunity_partner__crm_lead2opportunity_partner_fkey FOREIGN KEY (crm_lead2opportunity_partner_mass_id) REFERENCES crm_lead2opportunity_partner_mass(id) ON DELETE CASCADE;


--
-- Name: crm_lead2opportunity_partner_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2opportunity_partner
    ADD CONSTRAINT crm_lead2opportunity_partner_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner_mass_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner_mass_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: crm_lead2opportunity_partner_mass_res_users_r_res_users_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass_res_users_rel
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_res_users_r_res_users_id_fkey FOREIGN KEY (res_users_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: crm_lead2opportunity_partner_mass_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE CASCADE;


--
-- Name: crm_lead2opportunity_partner_mass_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2opportunity_partner_mass
    ADD CONSTRAINT crm_lead2opportunity_partner_mass_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead2opportunity_partner_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2opportunity_partner
    ADD CONSTRAINT crm_lead2opportunity_partner_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: crm_lead2opportunity_partner_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2opportunity_partner
    ADD CONSTRAINT crm_lead2opportunity_partner_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead2partner_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2partner
    ADD CONSTRAINT crm_lead2partner_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead2partner_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2partner
    ADD CONSTRAINT crm_lead2partner_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: crm_lead2partner_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead2partner
    ADD CONSTRAINT crm_lead2partner_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES crm_case_categ(id) ON DELETE SET NULL;


--
-- Name: crm_lead_channel_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_channel_id_fkey FOREIGN KEY (channel_id) REFERENCES crm_case_channel(id) ON DELETE SET NULL;


--
-- Name: crm_lead_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: crm_lead_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country(id) ON DELETE SET NULL;


--
-- Name: crm_lead_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead_crm_lead2opportunit_crm_lead2opportunity_partner_fkey1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead_crm_lead2opportunity_partner_mass_rel
    ADD CONSTRAINT crm_lead_crm_lead2opportunit_crm_lead2opportunity_partner_fkey1 FOREIGN KEY (crm_lead2opportunity_partner_mass_id) REFERENCES crm_lead2opportunity_partner_mass(id) ON DELETE CASCADE;


--
-- Name: crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead_crm_lead2opportunity_partner_rel
    ADD CONSTRAINT crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner_fkey FOREIGN KEY (crm_lead2opportunity_partner_id) REFERENCES crm_lead2opportunity_partner(id) ON DELETE CASCADE;


--
-- Name: crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead_crm_lead2opportunity_partner_mass_rel
    ADD CONSTRAINT crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead_id_fkey FOREIGN KEY (crm_lead_id) REFERENCES crm_lead(id) ON DELETE CASCADE;


--
-- Name: crm_lead_crm_lead2opportunity_partner_rel_crm_lead_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead_crm_lead2opportunity_partner_rel
    ADD CONSTRAINT crm_lead_crm_lead2opportunity_partner_rel_crm_lead_id_fkey FOREIGN KEY (crm_lead_id) REFERENCES crm_lead(id) ON DELETE CASCADE;


--
-- Name: crm_lead_partner_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_partner_address_id_fkey FOREIGN KEY (partner_address_id) REFERENCES res_partner_address(id) ON DELETE SET NULL;


--
-- Name: crm_lead_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: crm_lead_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_lead_stage_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_stage_id_fkey FOREIGN KEY (stage_id) REFERENCES crm_case_stage(id) ON DELETE SET NULL;


--
-- Name: crm_lead_state_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state(id) ON DELETE SET NULL;


--
-- Name: crm_lead_title_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_title_fkey FOREIGN KEY (title) REFERENCES res_partner_title(id) ON DELETE SET NULL;


--
-- Name: crm_lead_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_type_id_fkey FOREIGN KEY (type_id) REFERENCES crm_case_resource_type(id) ON DELETE SET NULL;


--
-- Name: crm_lead_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_lead_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_lead
    ADD CONSTRAINT crm_lead_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_meeting_alarm_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_alarm_id_fkey FOREIGN KEY (alarm_id) REFERENCES res_alarm(id) ON DELETE SET NULL;


--
-- Name: crm_meeting_base_calendar_alarm_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_base_calendar_alarm_id_fkey FOREIGN KEY (base_calendar_alarm_id) REFERENCES calendar_alarm(id) ON DELETE SET NULL;


--
-- Name: crm_meeting_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES crm_case_categ(id) ON DELETE SET NULL;


--
-- Name: crm_meeting_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_meeting_opportunity_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_opportunity_id_fkey FOREIGN KEY (opportunity_id) REFERENCES crm_lead(id) ON DELETE SET NULL;


--
-- Name: crm_meeting_organizer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_organizer_id_fkey FOREIGN KEY (organizer_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_meeting_partner_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_partner_address_id_fkey FOREIGN KEY (partner_address_id) REFERENCES res_partner_address(id) ON DELETE SET NULL;


--
-- Name: crm_meeting_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: crm_meeting_phonecall_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_phonecall_id_fkey FOREIGN KEY (phonecall_id) REFERENCES crm_phonecall(id) ON DELETE SET NULL;


--
-- Name: crm_meeting_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_meeting_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_meeting_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_meeting
    ADD CONSTRAINT crm_meeting_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_merge_opportunity_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_merge_opportunity
    ADD CONSTRAINT crm_merge_opportunity_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_merge_opportunity_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_merge_opportunity
    ADD CONSTRAINT crm_merge_opportunity_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_opportunity2phonecall_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_opportunity2phonecall
    ADD CONSTRAINT crm_opportunity2phonecall_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES crm_case_categ(id) ON DELETE CASCADE;


--
-- Name: crm_opportunity2phonecall_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_opportunity2phonecall
    ADD CONSTRAINT crm_opportunity2phonecall_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_opportunity2phonecall_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_opportunity2phonecall
    ADD CONSTRAINT crm_opportunity2phonecall_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: crm_opportunity2phonecall_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_opportunity2phonecall
    ADD CONSTRAINT crm_opportunity2phonecall_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE CASCADE;


--
-- Name: crm_opportunity2phonecall_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_opportunity2phonecall
    ADD CONSTRAINT crm_opportunity2phonecall_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: crm_opportunity2phonecall_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_opportunity2phonecall
    ADD CONSTRAINT crm_opportunity2phonecall_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_partner2opportunity_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_partner2opportunity
    ADD CONSTRAINT crm_partner2opportunity_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_partner2opportunity_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_partner2opportunity
    ADD CONSTRAINT crm_partner2opportunity_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: crm_partner2opportunity_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_partner2opportunity
    ADD CONSTRAINT crm_partner2opportunity_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall2opportunity_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2opportunity
    ADD CONSTRAINT crm_phonecall2opportunity_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall2opportunity_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2opportunity
    ADD CONSTRAINT crm_phonecall2opportunity_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: crm_phonecall2opportunity_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2opportunity
    ADD CONSTRAINT crm_phonecall2opportunity_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall2partner_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2partner
    ADD CONSTRAINT crm_phonecall2partner_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall2partner_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2partner
    ADD CONSTRAINT crm_phonecall2partner_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: crm_phonecall2partner_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2partner
    ADD CONSTRAINT crm_phonecall2partner_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall2phonecall_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES crm_case_categ(id) ON DELETE CASCADE;


--
-- Name: crm_phonecall2phonecall_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall2phonecall_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: crm_phonecall2phonecall_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE CASCADE;


--
-- Name: crm_phonecall2phonecall_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: crm_phonecall2phonecall_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall2phonecall
    ADD CONSTRAINT crm_phonecall2phonecall_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES crm_case_categ(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_opportunity_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_opportunity_id_fkey FOREIGN KEY (opportunity_id) REFERENCES crm_lead(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_partner_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_partner_address_id_fkey FOREIGN KEY (partner_address_id) REFERENCES res_partner_address(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_phonecall_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_phonecall
    ADD CONSTRAINT crm_phonecall_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_segmentation_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_segmentation
    ADD CONSTRAINT crm_segmentation_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES res_partner_category(id) ON DELETE SET NULL;


--
-- Name: crm_segmentation_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_segmentation
    ADD CONSTRAINT crm_segmentation_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_segmentation_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_segmentation_line
    ADD CONSTRAINT crm_segmentation_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_segmentation_line_segmentation_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_segmentation_line
    ADD CONSTRAINT crm_segmentation_line_segmentation_id_fkey FOREIGN KEY (segmentation_id) REFERENCES crm_segmentation(id) ON DELETE SET NULL;


--
-- Name: crm_segmentation_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_segmentation_line
    ADD CONSTRAINT crm_segmentation_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: crm_segmentation_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY crm_segmentation
    ADD CONSTRAINT crm_segmentation_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: decimal_precision_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY decimal_precision
    ADD CONSTRAINT decimal_precision_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: decimal_precision_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY decimal_precision
    ADD CONSTRAINT decimal_precision_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: email_message_send_attachment_rel_attachment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY email_message_send_attachment_rel
    ADD CONSTRAINT email_message_send_attachment_rel_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment(id) ON DELETE CASCADE;


--
-- Name: email_message_send_attachment_rel_wizard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY email_message_send_attachment_rel
    ADD CONSTRAINT email_message_send_attachment_rel_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES mail_compose_message(id) ON DELETE CASCADE;


--
-- Name: event_attendee_rel_attendee_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY event_attendee_rel
    ADD CONSTRAINT event_attendee_rel_attendee_id_fkey FOREIGN KEY (attendee_id) REFERENCES calendar_attendee(id) ON DELETE CASCADE;


--
-- Name: event_attendee_rel_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY event_attendee_rel
    ADD CONSTRAINT event_attendee_rel_event_id_fkey FOREIGN KEY (event_id) REFERENCES calendar_event(id) ON DELETE CASCADE;


--
-- Name: fetchmail_server_action_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY fetchmail_server
    ADD CONSTRAINT fetchmail_server_action_id_fkey FOREIGN KEY (action_id) REFERENCES ir_act_server(id) ON DELETE SET NULL;


--
-- Name: fetchmail_server_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY fetchmail_server
    ADD CONSTRAINT fetchmail_server_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: fetchmail_server_object_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY fetchmail_server
    ADD CONSTRAINT fetchmail_server_object_id_fkey FOREIGN KEY (object_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: fetchmail_server_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY fetchmail_server
    ADD CONSTRAINT fetchmail_server_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: heb_blocking_history_heb_blockhistory_heb_pk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY heb_blocking_history
    ADD CONSTRAINT heb_blocking_history_heb_blockhistory_heb_pk_fkey FOREIGN KEY (heb_blockhistory_heb_pk) REFERENCES hebergement(heb_pk);


--
-- Name: hebebergement_commune_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY hebergement
    ADD CONSTRAINT hebebergement_commune_fk FOREIGN KEY (heb_com_fk) REFERENCES commune(com_pk) MATCH FULL;


--
-- Name: hebergement_app_heb_app_heb_fk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY hebergement_app
    ADD CONSTRAINT hebergement_app_heb_app_heb_fk_fkey FOREIGN KEY (heb_app_heb_fk) REFERENCES hebergement(heb_pk);


--
-- Name: hebergement_video_heb_vid_heb_fk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY hebergement_video
    ADD CONSTRAINT hebergement_video_heb_vid_heb_fk_fkey FOREIGN KEY (heb_vid_heb_fk) REFERENCES hebergement(heb_pk);


--
-- Name: invite_contact_rel_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY invite_contact_rel
    ADD CONSTRAINT invite_contact_rel_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES res_partner_address(id) ON DELETE CASCADE;


--
-- Name: invite_contact_rel_invite_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY invite_contact_rel
    ADD CONSTRAINT invite_contact_rel_invite_id_fkey FOREIGN KEY (invite_id) REFERENCES base_calendar_invite_attendee(id) ON DELETE CASCADE;


--
-- Name: invite_user_rel_invite_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY invite_user_rel
    ADD CONSTRAINT invite_user_rel_invite_id_fkey FOREIGN KEY (invite_id) REFERENCES base_calendar_invite_attendee(id) ON DELETE CASCADE;


--
-- Name: invite_user_rel_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY invite_user_rel
    ADD CONSTRAINT invite_user_rel_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: ir_act_server_loop_action_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_loop_action_fkey FOREIGN KEY (loop_action) REFERENCES ir_act_server(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_record_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_record_id_fkey FOREIGN KEY (record_id) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_srcmodel_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_srcmodel_id_fkey FOREIGN KEY (srcmodel_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_trigger_obj_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_trigger_obj_id_fkey FOREIGN KEY (trigger_obj_id) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: ir_act_server_wkf_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_server
    ADD CONSTRAINT ir_act_server_wkf_model_id_fkey FOREIGN KEY (wkf_model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: ir_act_window_group_rel_act_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_window_group_rel
    ADD CONSTRAINT ir_act_window_group_rel_act_id_fkey FOREIGN KEY (act_id) REFERENCES ir_act_window(id) ON DELETE CASCADE;


--
-- Name: ir_act_window_group_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_window_group_rel
    ADD CONSTRAINT ir_act_window_group_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: ir_act_window_search_view_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_window
    ADD CONSTRAINT ir_act_window_search_view_id_fkey FOREIGN KEY (search_view_id) REFERENCES ir_ui_view(id) ON DELETE SET NULL;


--
-- Name: ir_act_window_view_act_window_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_window_view
    ADD CONSTRAINT ir_act_window_view_act_window_id_fkey FOREIGN KEY (act_window_id) REFERENCES ir_act_window(id) ON DELETE CASCADE;


--
-- Name: ir_act_window_view_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_window_view
    ADD CONSTRAINT ir_act_window_view_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_act_window_view_view_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_window_view
    ADD CONSTRAINT ir_act_window_view_view_id_fkey FOREIGN KEY (view_id) REFERENCES ir_ui_view(id) ON DELETE SET NULL;


--
-- Name: ir_act_window_view_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_act_window_view
    ADD CONSTRAINT ir_act_window_view_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_configuration_wizard_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions_configuration_wizard
    ADD CONSTRAINT ir_actions_configuration_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_configuration_wizard_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions_configuration_wizard
    ADD CONSTRAINT ir_actions_configuration_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions
    ADD CONSTRAINT ir_actions_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_todo_action_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions_todo
    ADD CONSTRAINT ir_actions_todo_action_id_fkey FOREIGN KEY (action_id) REFERENCES ir_act_window(id) ON DELETE CASCADE;


--
-- Name: ir_actions_todo_category_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions_todo_category
    ADD CONSTRAINT ir_actions_todo_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_todo_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions_todo
    ADD CONSTRAINT ir_actions_todo_category_id_fkey FOREIGN KEY (category_id) REFERENCES ir_actions_todo_category(id) ON DELETE SET NULL;


--
-- Name: ir_actions_todo_category_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions_todo_category
    ADD CONSTRAINT ir_actions_todo_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_todo_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions_todo
    ADD CONSTRAINT ir_actions_todo_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_todo_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions_todo
    ADD CONSTRAINT ir_actions_todo_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_actions_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_actions
    ADD CONSTRAINT ir_actions_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_attachment_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_attachment
    ADD CONSTRAINT ir_attachment_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: ir_attachment_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_attachment
    ADD CONSTRAINT ir_attachment_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_attachment_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_attachment
    ADD CONSTRAINT ir_attachment_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_config_parameter_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_config_parameter
    ADD CONSTRAINT ir_config_parameter_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_config_parameter_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_config_parameter
    ADD CONSTRAINT ir_config_parameter_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_cron_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_cron
    ADD CONSTRAINT ir_cron_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_cron_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_cron
    ADD CONSTRAINT ir_cron_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_cron_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_cron
    ADD CONSTRAINT ir_cron_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_default_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_default
    ADD CONSTRAINT ir_default_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: ir_default_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_default
    ADD CONSTRAINT ir_default_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_default_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_default
    ADD CONSTRAINT ir_default_uid_fkey FOREIGN KEY (uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_default_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_default
    ADD CONSTRAINT ir_default_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_exports_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_exports
    ADD CONSTRAINT ir_exports_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_exports_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_exports_line
    ADD CONSTRAINT ir_exports_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_exports_line_export_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_exports_line
    ADD CONSTRAINT ir_exports_line_export_id_fkey FOREIGN KEY (export_id) REFERENCES ir_exports(id) ON DELETE CASCADE;


--
-- Name: ir_exports_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_exports_line
    ADD CONSTRAINT ir_exports_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_exports_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_exports
    ADD CONSTRAINT ir_exports_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_filters_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_filters
    ADD CONSTRAINT ir_filters_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_filters_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_filters
    ADD CONSTRAINT ir_filters_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_filters_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_filters
    ADD CONSTRAINT ir_filters_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_mail_server_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_mail_server
    ADD CONSTRAINT ir_mail_server_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_mail_server_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_mail_server
    ADD CONSTRAINT ir_mail_server_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_access_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_access
    ADD CONSTRAINT ir_model_access_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_access_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_access
    ADD CONSTRAINT ir_model_access_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: ir_model_access_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_access
    ADD CONSTRAINT ir_model_access_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE CASCADE;


--
-- Name: ir_model_access_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_access
    ADD CONSTRAINT ir_model_access_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model
    ADD CONSTRAINT ir_model_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_fields_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_fields
    ADD CONSTRAINT ir_model_fields_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_fields_group_rel_field_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_fields_group_rel
    ADD CONSTRAINT ir_model_fields_group_rel_field_id_fkey FOREIGN KEY (field_id) REFERENCES ir_model_fields(id) ON DELETE CASCADE;


--
-- Name: ir_model_fields_group_rel_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_fields_group_rel
    ADD CONSTRAINT ir_model_fields_group_rel_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: ir_model_fields_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_fields
    ADD CONSTRAINT ir_model_fields_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE CASCADE;


--
-- Name: ir_model_fields_serialization_field_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_fields
    ADD CONSTRAINT ir_model_fields_serialization_field_id_fkey FOREIGN KEY (serialization_field_id) REFERENCES ir_model_fields(id) ON DELETE CASCADE;


--
-- Name: ir_model_fields_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model_fields
    ADD CONSTRAINT ir_model_fields_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_model_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_model
    ADD CONSTRAINT ir_model_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_module_category_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_module_category
    ADD CONSTRAINT ir_module_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_module_category_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_module_category
    ADD CONSTRAINT ir_module_category_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES ir_module_category(id) ON DELETE SET NULL;


--
-- Name: ir_module_category_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_module_category
    ADD CONSTRAINT ir_module_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_module_module_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT ir_module_module_category_id_fkey FOREIGN KEY (category_id) REFERENCES ir_module_category(id) ON DELETE SET NULL;


--
-- Name: ir_module_module_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT ir_module_module_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_module_module_dependency_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_module_module_dependency
    ADD CONSTRAINT ir_module_module_dependency_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_module_module_dependency_module_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_module_module_dependency
    ADD CONSTRAINT ir_module_module_dependency_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module(id) ON DELETE CASCADE;


--
-- Name: ir_module_module_dependency_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_module_module_dependency
    ADD CONSTRAINT ir_module_module_dependency_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_module_module_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_module_module
    ADD CONSTRAINT ir_module_module_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_property_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_property
    ADD CONSTRAINT ir_property_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: ir_property_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_property
    ADD CONSTRAINT ir_property_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_property_fields_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_property
    ADD CONSTRAINT ir_property_fields_id_fkey FOREIGN KEY (fields_id) REFERENCES ir_model_fields(id) ON DELETE CASCADE;


--
-- Name: ir_property_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_property
    ADD CONSTRAINT ir_property_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_rule_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_rule
    ADD CONSTRAINT ir_rule_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_rule_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_rule
    ADD CONSTRAINT ir_rule_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE CASCADE;


--
-- Name: ir_rule_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_rule
    ADD CONSTRAINT ir_rule_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_sequence_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_sequence
    ADD CONSTRAINT ir_sequence_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: ir_sequence_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_sequence
    ADD CONSTRAINT ir_sequence_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_sequence_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_sequence_type
    ADD CONSTRAINT ir_sequence_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_sequence_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_sequence_type
    ADD CONSTRAINT ir_sequence_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_sequence_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_sequence
    ADD CONSTRAINT ir_sequence_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_server_object_lines_col1_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_server_object_lines
    ADD CONSTRAINT ir_server_object_lines_col1_fkey FOREIGN KEY (col1) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: ir_server_object_lines_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_server_object_lines
    ADD CONSTRAINT ir_server_object_lines_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_server_object_lines_server_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_server_object_lines
    ADD CONSTRAINT ir_server_object_lines_server_id_fkey FOREIGN KEY (server_id) REFERENCES ir_act_server(id) ON DELETE SET NULL;


--
-- Name: ir_server_object_lines_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_server_object_lines
    ADD CONSTRAINT ir_server_object_lines_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_translation_lang_fkey_res_lang; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_translation
    ADD CONSTRAINT ir_translation_lang_fkey_res_lang FOREIGN KEY (lang) REFERENCES res_lang(code);


--
-- Name: ir_ui_menu_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_menu
    ADD CONSTRAINT ir_ui_menu_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_ui_menu_group_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_menu_group_rel
    ADD CONSTRAINT ir_ui_menu_group_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: ir_ui_menu_group_rel_menu_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_menu_group_rel
    ADD CONSTRAINT ir_ui_menu_group_rel_menu_id_fkey FOREIGN KEY (menu_id) REFERENCES ir_ui_menu(id) ON DELETE CASCADE;


--
-- Name: ir_ui_menu_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_menu
    ADD CONSTRAINT ir_ui_menu_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES ir_ui_menu(id) ON DELETE SET NULL;


--
-- Name: ir_ui_menu_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_menu
    ADD CONSTRAINT ir_ui_menu_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_ui_view_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view
    ADD CONSTRAINT ir_ui_view_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_ui_view_custom_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view_custom
    ADD CONSTRAINT ir_ui_view_custom_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_ui_view_custom_ref_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view_custom
    ADD CONSTRAINT ir_ui_view_custom_ref_id_fkey FOREIGN KEY (ref_id) REFERENCES ir_ui_view(id) ON DELETE CASCADE;


--
-- Name: ir_ui_view_custom_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view_custom
    ADD CONSTRAINT ir_ui_view_custom_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: ir_ui_view_custom_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view_custom
    ADD CONSTRAINT ir_ui_view_custom_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_ui_view_inherit_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view
    ADD CONSTRAINT ir_ui_view_inherit_id_fkey FOREIGN KEY (inherit_id) REFERENCES ir_ui_view(id) ON DELETE CASCADE;


--
-- Name: ir_ui_view_sc_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view_sc
    ADD CONSTRAINT ir_ui_view_sc_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_ui_view_sc_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view_sc
    ADD CONSTRAINT ir_ui_view_sc_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: ir_ui_view_sc_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view_sc
    ADD CONSTRAINT ir_ui_view_sc_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_ui_view_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_ui_view
    ADD CONSTRAINT ir_ui_view_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_values_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_values
    ADD CONSTRAINT ir_values_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE CASCADE;


--
-- Name: ir_values_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_values
    ADD CONSTRAINT ir_values_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_values_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_values
    ADD CONSTRAINT ir_values_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: ir_values_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_values
    ADD CONSTRAINT ir_values_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: ir_values_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_values
    ADD CONSTRAINT ir_values_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_wizard_screen_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_wizard_screen
    ADD CONSTRAINT ir_wizard_screen_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: ir_wizard_screen_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY ir_wizard_screen
    ADD CONSTRAINT ir_wizard_screen_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: link_hebergement_epis_heb_pk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY link_hebergement_epis
    ADD CONSTRAINT link_hebergement_epis_heb_pk_fkey FOREIGN KEY (heb_pk) REFERENCES hebergement(heb_pk);


--
-- Name: link_hebergement_metadata_heb_fk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY link_hebergement_metadata
    ADD CONSTRAINT link_hebergement_metadata_heb_fk_fkey FOREIGN KEY (heb_fk) REFERENCES hebergement(heb_pk);


--
-- Name: link_hebergement_metadata_metadata_fk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY link_hebergement_metadata
    ADD CONSTRAINT link_hebergement_metadata_metadata_fk_fkey FOREIGN KEY (metadata_fk) REFERENCES metadata(met_pk);


--
-- Name: link_hebergement_metadata_update_link_met_fk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY link_hebergement_metadata_update
    ADD CONSTRAINT link_hebergement_metadata_update_link_met_fk_fkey FOREIGN KEY (link_met_fk) REFERENCES link_hebergement_metadata(link_met_pk);


--
-- Name: link_hebergement_metadata_update_metadata_fk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY link_hebergement_metadata_update
    ADD CONSTRAINT link_hebergement_metadata_update_metadata_fk_fkey FOREIGN KEY (metadata_fk) REFERENCES metadata(met_pk);


--
-- Name: log_log_hebpk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY log
    ADD CONSTRAINT log_log_hebpk_fkey FOREIGN KEY (log_hebpk) REFERENCES hebergement(heb_pk);


--
-- Name: mail_compose_message_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_compose_message
    ADD CONSTRAINT mail_compose_message_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_compose_message_filter_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_compose_message
    ADD CONSTRAINT mail_compose_message_filter_id_fkey FOREIGN KEY (filter_id) REFERENCES ir_filters(id) ON DELETE CASCADE;


--
-- Name: mail_compose_message_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_compose_message
    ADD CONSTRAINT mail_compose_message_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_message_common_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_message_common
    ADD CONSTRAINT mail_message_common_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_message_common_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_message_common
    ADD CONSTRAINT mail_message_common_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_message_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_message_fetchmail_server_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_fetchmail_server_id_fkey FOREIGN KEY (fetchmail_server_id) REFERENCES fetchmail_server(id) ON DELETE SET NULL;


--
-- Name: mail_message_mail_server_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_mail_server_id_fkey FOREIGN KEY (mail_server_id) REFERENCES ir_mail_server(id) ON DELETE SET NULL;


--
-- Name: mail_message_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: mail_message_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_message_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_message
    ADD CONSTRAINT mail_message_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_thread_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_thread
    ADD CONSTRAINT mail_thread_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: mail_thread_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY mail_thread
    ADD CONSTRAINT mail_thread_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: maintenance_contract_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY maintenance_contract
    ADD CONSTRAINT maintenance_contract_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: maintenance_contract_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY maintenance_contract
    ADD CONSTRAINT maintenance_contract_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: map_blacklist_blacklist_provider_pk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY map_blacklist
    ADD CONSTRAINT map_blacklist_blacklist_provider_pk_fkey FOREIGN KEY (blacklist_provider_pk) REFERENCES map_provider(provider_pk);


--
-- Name: map_external_data_ext_data_provider_pk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY map_external_data
    ADD CONSTRAINT map_external_data_ext_data_provider_pk_fkey FOREIGN KEY (ext_data_provider_pk) REFERENCES map_provider(provider_pk);


--
-- Name: meeting_attendee_rel_attendee_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY meeting_attendee_rel
    ADD CONSTRAINT meeting_attendee_rel_attendee_id_fkey FOREIGN KEY (attendee_id) REFERENCES calendar_attendee(id) ON DELETE CASCADE;


--
-- Name: meeting_attendee_rel_event_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY meeting_attendee_rel
    ADD CONSTRAINT meeting_attendee_rel_event_id_fkey FOREIGN KEY (event_id) REFERENCES crm_meeting(id) ON DELETE CASCADE;


--
-- Name: merge_opportunity_rel_merge_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY merge_opportunity_rel
    ADD CONSTRAINT merge_opportunity_rel_merge_id_fkey FOREIGN KEY (merge_id) REFERENCES crm_merge_opportunity(id) ON DELETE CASCADE;


--
-- Name: merge_opportunity_rel_opportunity_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY merge_opportunity_rel
    ADD CONSTRAINT merge_opportunity_rel_opportunity_id_fkey FOREIGN KEY (opportunity_id) REFERENCES crm_lead(id) ON DELETE CASCADE;


--
-- Name: message_attachment_rel_attachment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY message_attachment_rel
    ADD CONSTRAINT message_attachment_rel_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment(id) ON DELETE CASCADE;


--
-- Name: message_attachment_rel_message_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY message_attachment_rel
    ADD CONSTRAINT message_attachment_rel_message_id_fkey FOREIGN KEY (message_id) REFERENCES mail_message(id) ON DELETE CASCADE;


--
-- Name: metadata_metadata_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY metadata
    ADD CONSTRAINT metadata_metadata_type_id_fkey FOREIGN KEY (metadata_type_id) REFERENCES metadata_type(met_typ_id);


--
-- Name: migrade_application_installer_modules_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY migrade_application_installer_modules
    ADD CONSTRAINT migrade_application_installer_modules_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: migrade_application_installer_modules_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY migrade_application_installer_modules
    ADD CONSTRAINT migrade_application_installer_modules_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: multi_company_default_company_dest_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_company_dest_id_fkey FOREIGN KEY (company_dest_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: multi_company_default_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: multi_company_default_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: multi_company_default_field_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_field_id_fkey FOREIGN KEY (field_id) REFERENCES ir_model_fields(id) ON DELETE SET NULL;


--
-- Name: multi_company_default_object_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_object_id_fkey FOREIGN KEY (object_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: multi_company_default_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY multi_company_default
    ADD CONSTRAINT multi_company_default_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: osv_memory_autovacuum_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY osv_memory_autovacuum
    ADD CONSTRAINT osv_memory_autovacuum_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: osv_memory_autovacuum_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY osv_memory_autovacuum
    ADD CONSTRAINT osv_memory_autovacuum_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: partner_clear_ids_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY partner_clear_ids
    ADD CONSTRAINT partner_clear_ids_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: partner_clear_ids_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY partner_clear_ids
    ADD CONSTRAINT partner_clear_ids_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: partner_massmail_wizard_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY partner_massmail_wizard
    ADD CONSTRAINT partner_massmail_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: partner_massmail_wizard_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY partner_massmail_wizard
    ADD CONSTRAINT partner_massmail_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: partner_sms_send_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY partner_sms_send
    ADD CONSTRAINT partner_sms_send_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: partner_sms_send_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY partner_sms_send
    ADD CONSTRAINT partner_sms_send_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: partner_wizard_ean_check_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY partner_wizard_ean_check
    ADD CONSTRAINT partner_wizard_ean_check_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: partner_wizard_ean_check_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY partner_wizard_ean_check
    ADD CONSTRAINT partner_wizard_ean_check_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: pricelist_partnerinfo_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pricelist_partnerinfo
    ADD CONSTRAINT pricelist_partnerinfo_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: pricelist_partnerinfo_suppinfo_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pricelist_partnerinfo
    ADD CONSTRAINT pricelist_partnerinfo_suppinfo_id_fkey FOREIGN KEY (suppinfo_id) REFERENCES product_supplierinfo(id) ON DELETE CASCADE;


--
-- Name: pricelist_partnerinfo_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY pricelist_partnerinfo
    ADD CONSTRAINT pricelist_partnerinfo_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: process_condition_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_condition
    ADD CONSTRAINT process_condition_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: process_condition_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_condition
    ADD CONSTRAINT process_condition_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: process_condition_node_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_condition
    ADD CONSTRAINT process_condition_node_id_fkey FOREIGN KEY (node_id) REFERENCES process_node(id) ON DELETE CASCADE;


--
-- Name: process_condition_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_condition
    ADD CONSTRAINT process_condition_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: process_node_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_node
    ADD CONSTRAINT process_node_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: process_node_menu_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_node
    ADD CONSTRAINT process_node_menu_id_fkey FOREIGN KEY (menu_id) REFERENCES ir_ui_menu(id) ON DELETE SET NULL;


--
-- Name: process_node_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_node
    ADD CONSTRAINT process_node_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: process_node_process_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_node
    ADD CONSTRAINT process_node_process_id_fkey FOREIGN KEY (process_id) REFERENCES process_process(id) ON DELETE CASCADE;


--
-- Name: process_node_subflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_node
    ADD CONSTRAINT process_node_subflow_id_fkey FOREIGN KEY (subflow_id) REFERENCES process_process(id) ON DELETE SET NULL;


--
-- Name: process_node_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_node
    ADD CONSTRAINT process_node_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: process_process_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_process
    ADD CONSTRAINT process_process_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: process_process_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_process
    ADD CONSTRAINT process_process_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model(id) ON DELETE SET NULL;


--
-- Name: process_process_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_process
    ADD CONSTRAINT process_process_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: process_transition_action_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition_action
    ADD CONSTRAINT process_transition_action_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: process_transition_action_transition_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition_action
    ADD CONSTRAINT process_transition_action_transition_id_fkey FOREIGN KEY (transition_id) REFERENCES process_transition(id) ON DELETE CASCADE;


--
-- Name: process_transition_action_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition_action
    ADD CONSTRAINT process_transition_action_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: process_transition_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition
    ADD CONSTRAINT process_transition_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: process_transition_group_rel_rid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition_group_rel
    ADD CONSTRAINT process_transition_group_rel_rid_fkey FOREIGN KEY (rid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: process_transition_group_rel_tid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition_group_rel
    ADD CONSTRAINT process_transition_group_rel_tid_fkey FOREIGN KEY (tid) REFERENCES process_transition(id) ON DELETE CASCADE;


--
-- Name: process_transition_ids_ptr_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition_ids
    ADD CONSTRAINT process_transition_ids_ptr_id_fkey FOREIGN KEY (ptr_id) REFERENCES process_transition(id) ON DELETE CASCADE;


--
-- Name: process_transition_ids_wtr_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition_ids
    ADD CONSTRAINT process_transition_ids_wtr_id_fkey FOREIGN KEY (wtr_id) REFERENCES wkf_transition(id) ON DELETE CASCADE;


--
-- Name: process_transition_source_node_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition
    ADD CONSTRAINT process_transition_source_node_id_fkey FOREIGN KEY (source_node_id) REFERENCES process_node(id) ON DELETE CASCADE;


--
-- Name: process_transition_target_node_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition
    ADD CONSTRAINT process_transition_target_node_id_fkey FOREIGN KEY (target_node_id) REFERENCES process_node(id) ON DELETE CASCADE;


--
-- Name: process_transition_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY process_transition
    ADD CONSTRAINT process_transition_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_category_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_category
    ADD CONSTRAINT product_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_category_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_category
    ADD CONSTRAINT product_category_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES product_category(id) ON DELETE CASCADE;


--
-- Name: product_category_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_category
    ADD CONSTRAINT product_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_installer_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_installer
    ADD CONSTRAINT product_installer_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_installer_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_installer
    ADD CONSTRAINT product_installer_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_packaging_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_packaging
    ADD CONSTRAINT product_packaging_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_packaging_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_packaging
    ADD CONSTRAINT product_packaging_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE CASCADE;


--
-- Name: product_packaging_ul_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_packaging
    ADD CONSTRAINT product_packaging_ul_fkey FOREIGN KEY (ul) REFERENCES product_ul(id) ON DELETE SET NULL;


--
-- Name: product_packaging_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_packaging
    ADD CONSTRAINT product_packaging_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_price_list_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_price_list
    ADD CONSTRAINT product_price_list_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_price_list_price_list_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_price_list
    ADD CONSTRAINT product_price_list_price_list_fkey FOREIGN KEY (price_list) REFERENCES product_pricelist(id) ON DELETE CASCADE;


--
-- Name: product_price_list_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_price_list
    ADD CONSTRAINT product_price_list_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_price_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_price_type
    ADD CONSTRAINT product_price_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_price_type_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_price_type
    ADD CONSTRAINT product_price_type_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: product_price_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_price_type
    ADD CONSTRAINT product_price_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist
    ADD CONSTRAINT product_pricelist_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist
    ADD CONSTRAINT product_pricelist_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist
    ADD CONSTRAINT product_pricelist_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_item_base_pricelist_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_base_pricelist_id_fkey FOREIGN KEY (base_pricelist_id) REFERENCES product_pricelist(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_item_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES product_category(id) ON DELETE CASCADE;


--
-- Name: product_pricelist_item_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_item_price_version_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_price_version_id_fkey FOREIGN KEY (price_version_id) REFERENCES product_pricelist_version(id) ON DELETE CASCADE;


--
-- Name: product_pricelist_item_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product(id) ON DELETE CASCADE;


--
-- Name: product_pricelist_item_product_tmpl_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: product_pricelist_item_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_item
    ADD CONSTRAINT product_pricelist_item_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_type
    ADD CONSTRAINT product_pricelist_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_type
    ADD CONSTRAINT product_pricelist_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_version_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_version
    ADD CONSTRAINT product_pricelist_version_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_version_pricelist_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_version
    ADD CONSTRAINT product_pricelist_version_pricelist_id_fkey FOREIGN KEY (pricelist_id) REFERENCES product_pricelist(id) ON DELETE CASCADE;


--
-- Name: product_pricelist_version_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist_version
    ADD CONSTRAINT product_pricelist_version_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_pricelist_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_pricelist
    ADD CONSTRAINT product_pricelist_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_product_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_product
    ADD CONSTRAINT product_product_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_product_product_tmpl_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_product
    ADD CONSTRAINT product_product_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: product_product_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_product
    ADD CONSTRAINT product_product_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_supplierinfo_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_supplierinfo
    ADD CONSTRAINT product_supplierinfo_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: product_supplierinfo_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_supplierinfo
    ADD CONSTRAINT product_supplierinfo_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_supplierinfo_name_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_supplierinfo
    ADD CONSTRAINT product_supplierinfo_name_fkey FOREIGN KEY (name) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: product_supplierinfo_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_supplierinfo
    ADD CONSTRAINT product_supplierinfo_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_template(id) ON DELETE CASCADE;


--
-- Name: product_supplierinfo_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_supplierinfo
    ADD CONSTRAINT product_supplierinfo_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_template_categ_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES product_category(id) ON DELETE SET NULL;


--
-- Name: product_template_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: product_template_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_template_product_manager_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_product_manager_fkey FOREIGN KEY (product_manager) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_template_uom_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_uom_id_fkey FOREIGN KEY (uom_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: product_template_uom_po_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_uom_po_id_fkey FOREIGN KEY (uom_po_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: product_template_uos_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_uos_id_fkey FOREIGN KEY (uos_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: product_template_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_template
    ADD CONSTRAINT product_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_ul_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_ul
    ADD CONSTRAINT product_ul_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_ul_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_ul
    ADD CONSTRAINT product_ul_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_uom_categ_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_uom_categ
    ADD CONSTRAINT product_uom_categ_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_uom_categ_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_uom_categ
    ADD CONSTRAINT product_uom_categ_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_uom_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_uom
    ADD CONSTRAINT product_uom_category_id_fkey FOREIGN KEY (category_id) REFERENCES product_uom_categ(id) ON DELETE CASCADE;


--
-- Name: product_uom_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_uom
    ADD CONSTRAINT product_uom_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: product_uom_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY product_uom
    ADD CONSTRAINT product_uom_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_project_analytic_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_project
    ADD CONSTRAINT project_project_analytic_account_id_fkey FOREIGN KEY (analytic_account_id) REFERENCES account_analytic_account(id) ON DELETE CASCADE;


--
-- Name: project_project_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_project
    ADD CONSTRAINT project_project_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_project_resource_calendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_project
    ADD CONSTRAINT project_project_resource_calendar_id_fkey FOREIGN KEY (resource_calendar_id) REFERENCES resource_calendar(id) ON DELETE SET NULL;


--
-- Name: project_project_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_project
    ADD CONSTRAINT project_project_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: project_task_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_delegate_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_delegate
    ADD CONSTRAINT project_task_delegate_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_delegate_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_delegate
    ADD CONSTRAINT project_task_delegate_project_id_fkey FOREIGN KEY (project_id) REFERENCES project_project(id) ON DELETE CASCADE;


--
-- Name: project_task_delegate_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_delegate
    ADD CONSTRAINT project_task_delegate_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: project_task_delegate_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_delegate
    ADD CONSTRAINT project_task_delegate_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_history_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_history
    ADD CONSTRAINT project_task_history_task_id_fkey FOREIGN KEY (task_id) REFERENCES project_task(id) ON DELETE CASCADE;


--
-- Name: project_task_history_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_history
    ADD CONSTRAINT project_task_history_type_id_fkey FOREIGN KEY (type_id) REFERENCES project_task_type(id) ON DELETE SET NULL;


--
-- Name: project_task_history_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_history
    ADD CONSTRAINT project_task_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_parent_rel_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_parent_rel
    ADD CONSTRAINT project_task_parent_rel_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES project_task(id) ON DELETE CASCADE;


--
-- Name: project_task_parent_rel_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_parent_rel
    ADD CONSTRAINT project_task_parent_rel_task_id_fkey FOREIGN KEY (task_id) REFERENCES project_task(id) ON DELETE CASCADE;


--
-- Name: project_task_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: project_task_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_project_id_fkey FOREIGN KEY (project_id) REFERENCES project_project(id) ON DELETE SET NULL;


--
-- Name: project_task_reevaluate_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_reevaluate
    ADD CONSTRAINT project_task_reevaluate_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_reevaluate_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_reevaluate
    ADD CONSTRAINT project_task_reevaluate_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_type
    ADD CONSTRAINT project_task_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_type_id_fkey FOREIGN KEY (type_id) REFERENCES project_task_type(id) ON DELETE SET NULL;


--
-- Name: project_task_type_rel_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_type_rel
    ADD CONSTRAINT project_task_type_rel_project_id_fkey FOREIGN KEY (project_id) REFERENCES project_project(id) ON DELETE CASCADE;


--
-- Name: project_task_type_rel_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_type_rel
    ADD CONSTRAINT project_task_type_rel_type_id_fkey FOREIGN KEY (type_id) REFERENCES project_task_type(id) ON DELETE CASCADE;


--
-- Name: project_task_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_type
    ADD CONSTRAINT project_task_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_work_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_work
    ADD CONSTRAINT project_task_work_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_work_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_work
    ADD CONSTRAINT project_task_work_task_id_fkey FOREIGN KEY (task_id) REFERENCES project_task(id) ON DELETE CASCADE;


--
-- Name: project_task_work_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_work
    ADD CONSTRAINT project_task_work_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_work_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task_work
    ADD CONSTRAINT project_task_work_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_task_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_task
    ADD CONSTRAINT project_task_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: project_user_rel_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_user_rel
    ADD CONSTRAINT project_user_rel_project_id_fkey FOREIGN KEY (project_id) REFERENCES project_project(id) ON DELETE CASCADE;


--
-- Name: project_user_rel_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY project_user_rel
    ADD CONSTRAINT project_user_rel_uid_fkey FOREIGN KEY (uid) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: publisher_warranty_contract_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY publisher_warranty_contract
    ADD CONSTRAINT publisher_warranty_contract_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: publisher_warranty_contract_wizard_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY publisher_warranty_contract_wizard
    ADD CONSTRAINT publisher_warranty_contract_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: publisher_warranty_contract_wizard_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY publisher_warranty_contract_wizard
    ADD CONSTRAINT publisher_warranty_contract_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: publisher_warranty_contract_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY publisher_warranty_contract
    ADD CONSTRAINT publisher_warranty_contract_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: rel_modules_langexport_module_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY rel_modules_langexport
    ADD CONSTRAINT rel_modules_langexport_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module(id) ON DELETE CASCADE;


--
-- Name: rel_modules_langexport_wiz_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY rel_modules_langexport
    ADD CONSTRAINT rel_modules_langexport_wiz_id_fkey FOREIGN KEY (wiz_id) REFERENCES base_language_export(id) ON DELETE CASCADE;


--
-- Name: rel_server_actions_action_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY rel_server_actions
    ADD CONSTRAINT rel_server_actions_action_id_fkey FOREIGN KEY (action_id) REFERENCES ir_act_server(id) ON DELETE CASCADE;


--
-- Name: rel_server_actions_server_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY rel_server_actions
    ADD CONSTRAINT rel_server_actions_server_id_fkey FOREIGN KEY (server_id) REFERENCES ir_act_server(id) ON DELETE CASCADE;


--
-- Name: res_alarm_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_alarm
    ADD CONSTRAINT res_alarm_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_alarm_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_alarm
    ADD CONSTRAINT res_alarm_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_bank_country_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_bank
    ADD CONSTRAINT res_bank_country_fkey FOREIGN KEY (country) REFERENCES res_country(id) ON DELETE SET NULL;


--
-- Name: res_bank_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_bank
    ADD CONSTRAINT res_bank_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_bank_state_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_bank
    ADD CONSTRAINT res_bank_state_fkey FOREIGN KEY (state) REFERENCES res_country_state(id) ON DELETE SET NULL;


--
-- Name: res_bank_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_bank
    ADD CONSTRAINT res_bank_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_company_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_company_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: res_company_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: res_company_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: res_company_project_time_mode_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_project_time_mode_id_fkey FOREIGN KEY (project_time_mode_id) REFERENCES product_uom(id) ON DELETE SET NULL;


--
-- Name: res_company_users_rel_cid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_company_users_rel
    ADD CONSTRAINT res_company_users_rel_cid_fkey FOREIGN KEY (cid) REFERENCES res_company(id) ON DELETE CASCADE;


--
-- Name: res_company_users_rel_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_company_users_rel
    ADD CONSTRAINT res_company_users_rel_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: res_company_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_company
    ADD CONSTRAINT res_company_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_config_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_config
    ADD CONSTRAINT res_config_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_config_installer_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_config_installer
    ADD CONSTRAINT res_config_installer_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_config_installer_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_config_installer
    ADD CONSTRAINT res_config_installer_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_config_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_config
    ADD CONSTRAINT res_config_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_country_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_country
    ADD CONSTRAINT res_country_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_country_state_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_country_state
    ADD CONSTRAINT res_country_state_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country(id) ON DELETE SET NULL;


--
-- Name: res_country_state_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_country_state
    ADD CONSTRAINT res_country_state_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_country_state_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_country_state
    ADD CONSTRAINT res_country_state_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_country_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_country
    ADD CONSTRAINT res_country_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_currency_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_currency
    ADD CONSTRAINT res_currency_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: res_currency_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_currency
    ADD CONSTRAINT res_currency_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_currency_rate_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_currency_rate
    ADD CONSTRAINT res_currency_rate_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_currency_rate_currency_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_currency_rate
    ADD CONSTRAINT res_currency_rate_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency(id) ON DELETE SET NULL;


--
-- Name: res_currency_rate_currency_rate_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_currency_rate
    ADD CONSTRAINT res_currency_rate_currency_rate_type_id_fkey FOREIGN KEY (currency_rate_type_id) REFERENCES res_currency_rate_type(id) ON DELETE SET NULL;


--
-- Name: res_currency_rate_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_currency_rate_type
    ADD CONSTRAINT res_currency_rate_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_currency_rate_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_currency_rate_type
    ADD CONSTRAINT res_currency_rate_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_currency_rate_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_currency_rate
    ADD CONSTRAINT res_currency_rate_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_currency_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_currency
    ADD CONSTRAINT res_currency_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_groups_action_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups_action_rel
    ADD CONSTRAINT res_groups_action_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: res_groups_action_rel_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups_action_rel
    ADD CONSTRAINT res_groups_action_rel_uid_fkey FOREIGN KEY (uid) REFERENCES ir_actions_todo(id) ON DELETE CASCADE;


--
-- Name: res_groups_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups
    ADD CONSTRAINT res_groups_category_id_fkey FOREIGN KEY (category_id) REFERENCES ir_module_category(id) ON DELETE SET NULL;


--
-- Name: res_groups_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups
    ADD CONSTRAINT res_groups_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_groups_implied_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups_implied_rel
    ADD CONSTRAINT res_groups_implied_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: res_groups_implied_rel_hid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups_implied_rel
    ADD CONSTRAINT res_groups_implied_rel_hid_fkey FOREIGN KEY (hid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: res_groups_report_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups_report_rel
    ADD CONSTRAINT res_groups_report_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: res_groups_report_rel_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups_report_rel
    ADD CONSTRAINT res_groups_report_rel_uid_fkey FOREIGN KEY (uid) REFERENCES ir_act_report_xml(id) ON DELETE CASCADE;


--
-- Name: res_groups_users_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups_users_rel
    ADD CONSTRAINT res_groups_users_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: res_groups_users_rel_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups_users_rel
    ADD CONSTRAINT res_groups_users_rel_uid_fkey FOREIGN KEY (uid) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: res_groups_wizard_rel_gid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups_wizard_rel
    ADD CONSTRAINT res_groups_wizard_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: res_groups_wizard_rel_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups_wizard_rel
    ADD CONSTRAINT res_groups_wizard_rel_uid_fkey FOREIGN KEY (uid) REFERENCES ir_act_wizard(id) ON DELETE CASCADE;


--
-- Name: res_groups_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_groups
    ADD CONSTRAINT res_groups_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_lang_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_lang_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_lang
    ADD CONSTRAINT res_lang_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_log_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_log
    ADD CONSTRAINT res_log_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_log_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_log
    ADD CONSTRAINT res_log_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_log_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_log
    ADD CONSTRAINT res_log_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_address_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_address
    ADD CONSTRAINT res_partner_address_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: res_partner_address_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_address
    ADD CONSTRAINT res_partner_address_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country(id) ON DELETE SET NULL;


--
-- Name: res_partner_address_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_address
    ADD CONSTRAINT res_partner_address_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_address_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_address
    ADD CONSTRAINT res_partner_address_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: res_partner_address_state_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_address
    ADD CONSTRAINT res_partner_address_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state(id) ON DELETE SET NULL;


--
-- Name: res_partner_address_title_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_address
    ADD CONSTRAINT res_partner_address_title_fkey FOREIGN KEY (title) REFERENCES res_partner_title(id) ON DELETE SET NULL;


--
-- Name: res_partner_address_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_address
    ADD CONSTRAINT res_partner_address_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_bank_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_bank_fkey FOREIGN KEY (bank) REFERENCES res_bank(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE CASCADE;


--
-- Name: res_partner_bank_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: res_partner_bank_state_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_type_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank_type
    ADD CONSTRAINT res_partner_bank_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_type_field_bank_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank_type_field
    ADD CONSTRAINT res_partner_bank_type_field_bank_type_id_fkey FOREIGN KEY (bank_type_id) REFERENCES res_partner_bank_type(id) ON DELETE CASCADE;


--
-- Name: res_partner_bank_type_field_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank_type_field
    ADD CONSTRAINT res_partner_bank_type_field_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_type_field_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank_type_field
    ADD CONSTRAINT res_partner_bank_type_field_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_type_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank_type
    ADD CONSTRAINT res_partner_bank_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_bank_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_bank
    ADD CONSTRAINT res_partner_bank_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_category_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_category
    ADD CONSTRAINT res_partner_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_category_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_category
    ADD CONSTRAINT res_partner_category_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES res_partner_category(id) ON DELETE CASCADE;


--
-- Name: res_partner_category_rel_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_category_rel
    ADD CONSTRAINT res_partner_category_rel_category_id_fkey FOREIGN KEY (category_id) REFERENCES res_partner_category(id) ON DELETE CASCADE;


--
-- Name: res_partner_category_rel_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_category_rel
    ADD CONSTRAINT res_partner_category_rel_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE CASCADE;


--
-- Name: res_partner_category_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_category
    ADD CONSTRAINT res_partner_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: res_partner_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_event_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_event
    ADD CONSTRAINT res_partner_event_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_event_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_event
    ADD CONSTRAINT res_partner_event_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: res_partner_event_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_event
    ADD CONSTRAINT res_partner_event_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_event_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_event
    ADD CONSTRAINT res_partner_event_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: res_partner_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: res_partner_title_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_title
    ADD CONSTRAINT res_partner_title_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_title_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_title_fkey FOREIGN KEY (title) REFERENCES res_partner_title(id) ON DELETE SET NULL;


--
-- Name: res_partner_title_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner_title
    ADD CONSTRAINT res_partner_title_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_partner_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_partner
    ADD CONSTRAINT res_partner_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_payterm_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_payterm
    ADD CONSTRAINT res_payterm_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_payterm_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_payterm
    ADD CONSTRAINT res_payterm_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_request_act_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request
    ADD CONSTRAINT res_request_act_from_fkey FOREIGN KEY (act_from) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_request_act_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request
    ADD CONSTRAINT res_request_act_to_fkey FOREIGN KEY (act_to) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_request_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request
    ADD CONSTRAINT res_request_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_request_history_act_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request_history
    ADD CONSTRAINT res_request_history_act_from_fkey FOREIGN KEY (act_from) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_request_history_act_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request_history
    ADD CONSTRAINT res_request_history_act_to_fkey FOREIGN KEY (act_to) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_request_history_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request_history
    ADD CONSTRAINT res_request_history_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_request_history_req_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request_history
    ADD CONSTRAINT res_request_history_req_id_fkey FOREIGN KEY (req_id) REFERENCES res_request(id) ON DELETE CASCADE;


--
-- Name: res_request_history_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request_history
    ADD CONSTRAINT res_request_history_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_request_link_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request_link
    ADD CONSTRAINT res_request_link_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_request_link_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request_link
    ADD CONSTRAINT res_request_link_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_request_ref_partner_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request
    ADD CONSTRAINT res_request_ref_partner_id_fkey FOREIGN KEY (ref_partner_id) REFERENCES res_partner(id) ON DELETE SET NULL;


--
-- Name: res_request_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_request
    ADD CONSTRAINT res_request_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_users_context_project_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_context_project_id_fkey FOREIGN KEY (context_project_id) REFERENCES project_project(id) ON DELETE SET NULL;


--
-- Name: res_users_context_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_context_section_id_fkey FOREIGN KEY (context_section_id) REFERENCES crm_case_section(id) ON DELETE SET NULL;


--
-- Name: res_users_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_users_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_users
    ADD CONSTRAINT res_users_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_widget_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_widget
    ADD CONSTRAINT res_widget_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_widget_user_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_widget_user
    ADD CONSTRAINT res_widget_user_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_widget_user_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_widget_user
    ADD CONSTRAINT res_widget_user_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: res_widget_user_widget_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_widget_user
    ADD CONSTRAINT res_widget_user_widget_id_fkey FOREIGN KEY (widget_id) REFERENCES res_widget(id) ON DELETE CASCADE;


--
-- Name: res_widget_user_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_widget_user
    ADD CONSTRAINT res_widget_user_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_widget_wizard_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_widget_wizard
    ADD CONSTRAINT res_widget_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_widget_wizard_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_widget_wizard
    ADD CONSTRAINT res_widget_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: res_widget_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY res_widget
    ADD CONSTRAINT res_widget_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: reservation_proprio_heb_fk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY reservation_proprio
    ADD CONSTRAINT reservation_proprio_heb_fk_fkey FOREIGN KEY (heb_fk) REFERENCES hebergement(heb_pk);


--
-- Name: reservation_proprio_pro_fk_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY reservation_proprio
    ADD CONSTRAINT reservation_proprio_pro_fk_fkey FOREIGN KEY (pro_fk) REFERENCES proprio(pro_pk);


--
-- Name: resource_calendar_attendance_calendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar_attendance
    ADD CONSTRAINT resource_calendar_attendance_calendar_id_fkey FOREIGN KEY (calendar_id) REFERENCES resource_calendar(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_attendance_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar_attendance
    ADD CONSTRAINT resource_calendar_attendance_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_attendance_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar_attendance
    ADD CONSTRAINT resource_calendar_attendance_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar
    ADD CONSTRAINT resource_calendar_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar
    ADD CONSTRAINT resource_calendar_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_leaves_calendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar_leaves
    ADD CONSTRAINT resource_calendar_leaves_calendar_id_fkey FOREIGN KEY (calendar_id) REFERENCES resource_calendar(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_leaves_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar_leaves
    ADD CONSTRAINT resource_calendar_leaves_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_leaves_resource_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar_leaves
    ADD CONSTRAINT resource_calendar_leaves_resource_id_fkey FOREIGN KEY (resource_id) REFERENCES resource_resource(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_leaves_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar_leaves
    ADD CONSTRAINT resource_calendar_leaves_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_manager_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar
    ADD CONSTRAINT resource_calendar_manager_fkey FOREIGN KEY (manager) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_calendar_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_calendar
    ADD CONSTRAINT resource_calendar_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_resource_calendar_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_resource
    ADD CONSTRAINT resource_resource_calendar_id_fkey FOREIGN KEY (calendar_id) REFERENCES resource_calendar(id) ON DELETE SET NULL;


--
-- Name: resource_resource_company_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_resource
    ADD CONSTRAINT resource_resource_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company(id) ON DELETE SET NULL;


--
-- Name: resource_resource_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_resource
    ADD CONSTRAINT resource_resource_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_resource_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_resource
    ADD CONSTRAINT resource_resource_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: resource_resource_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY resource_resource
    ADD CONSTRAINT resource_resource_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: rule_group_rel_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY rule_group_rel
    ADD CONSTRAINT rule_group_rel_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups(id) ON DELETE CASCADE;


--
-- Name: rule_group_rel_rule_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY rule_group_rel
    ADD CONSTRAINT rule_group_rel_rule_group_id_fkey FOREIGN KEY (rule_group_id) REFERENCES ir_rule(id) ON DELETE CASCADE;


--
-- Name: sale_member_rel_member_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sale_member_rel
    ADD CONSTRAINT sale_member_rel_member_id_fkey FOREIGN KEY (member_id) REFERENCES res_users(id) ON DELETE CASCADE;


--
-- Name: sale_member_rel_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY sale_member_rel
    ADD CONSTRAINT sale_member_rel_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE CASCADE;


--
-- Name: section_stage_rel_section_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY section_stage_rel
    ADD CONSTRAINT section_stage_rel_section_id_fkey FOREIGN KEY (section_id) REFERENCES crm_case_section(id) ON DELETE CASCADE;


--
-- Name: section_stage_rel_stage_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY section_stage_rel
    ADD CONSTRAINT section_stage_rel_stage_id_fkey FOREIGN KEY (stage_id) REFERENCES crm_case_stage(id) ON DELETE CASCADE;


--
-- Name: user_preferences_config_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY user_preferences_config
    ADD CONSTRAINT user_preferences_config_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: user_preferences_config_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY user_preferences_config
    ADD CONSTRAINT user_preferences_config_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wizard_ir_model_menu_create_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wizard_ir_model_menu_create
    ADD CONSTRAINT wizard_ir_model_menu_create_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wizard_ir_model_menu_create_line_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wizard_ir_model_menu_create_line
    ADD CONSTRAINT wizard_ir_model_menu_create_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wizard_ir_model_menu_create_line_view_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wizard_ir_model_menu_create_line
    ADD CONSTRAINT wizard_ir_model_menu_create_line_view_id_fkey FOREIGN KEY (view_id) REFERENCES ir_ui_view(id) ON DELETE CASCADE;


--
-- Name: wizard_ir_model_menu_create_line_wizard_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wizard_ir_model_menu_create_line
    ADD CONSTRAINT wizard_ir_model_menu_create_line_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES wizard_ir_model_menu_create(id) ON DELETE SET NULL;


--
-- Name: wizard_ir_model_menu_create_line_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wizard_ir_model_menu_create_line
    ADD CONSTRAINT wizard_ir_model_menu_create_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wizard_ir_model_menu_create_menu_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wizard_ir_model_menu_create
    ADD CONSTRAINT wizard_ir_model_menu_create_menu_id_fkey FOREIGN KEY (menu_id) REFERENCES ir_ui_menu(id) ON DELETE CASCADE;


--
-- Name: wizard_ir_model_menu_create_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wizard_ir_model_menu_create
    ADD CONSTRAINT wizard_ir_model_menu_create_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_activity_action_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_activity
    ADD CONSTRAINT wkf_activity_action_id_fkey FOREIGN KEY (action_id) REFERENCES ir_act_server(id) ON DELETE SET NULL;


--
-- Name: wkf_activity_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_activity
    ADD CONSTRAINT wkf_activity_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_activity_subflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_activity
    ADD CONSTRAINT wkf_activity_subflow_id_fkey FOREIGN KEY (subflow_id) REFERENCES wkf(id) ON DELETE SET NULL;


--
-- Name: wkf_activity_wkf_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_activity
    ADD CONSTRAINT wkf_activity_wkf_id_fkey FOREIGN KEY (wkf_id) REFERENCES wkf(id) ON DELETE CASCADE;


--
-- Name: wkf_activity_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_activity
    ADD CONSTRAINT wkf_activity_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf
    ADD CONSTRAINT wkf_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_instance_wkf_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_instance
    ADD CONSTRAINT wkf_instance_wkf_id_fkey FOREIGN KEY (wkf_id) REFERENCES wkf(id) ON DELETE CASCADE;


--
-- Name: wkf_logs_act_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_logs
    ADD CONSTRAINT wkf_logs_act_id_fkey FOREIGN KEY (act_id) REFERENCES wkf_activity(id) ON DELETE SET NULL;


--
-- Name: wkf_logs_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_logs
    ADD CONSTRAINT wkf_logs_uid_fkey FOREIGN KEY (uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_transition_act_from_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_transition
    ADD CONSTRAINT wkf_transition_act_from_fkey FOREIGN KEY (act_from) REFERENCES wkf_activity(id) ON DELETE CASCADE;


--
-- Name: wkf_transition_act_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_transition
    ADD CONSTRAINT wkf_transition_act_to_fkey FOREIGN KEY (act_to) REFERENCES wkf_activity(id) ON DELETE CASCADE;


--
-- Name: wkf_transition_create_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_transition
    ADD CONSTRAINT wkf_transition_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_transition_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_transition
    ADD CONSTRAINT wkf_transition_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups(id) ON DELETE SET NULL;


--
-- Name: wkf_transition_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_transition
    ADD CONSTRAINT wkf_transition_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: wkf_triggers_instance_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_triggers
    ADD CONSTRAINT wkf_triggers_instance_id_fkey FOREIGN KEY (instance_id) REFERENCES wkf_instance(id) ON DELETE CASCADE;


--
-- Name: wkf_triggers_workitem_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_triggers
    ADD CONSTRAINT wkf_triggers_workitem_id_fkey FOREIGN KEY (workitem_id) REFERENCES wkf_workitem(id) ON DELETE CASCADE;


--
-- Name: wkf_witm_trans_inst_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_witm_trans
    ADD CONSTRAINT wkf_witm_trans_inst_id_fkey FOREIGN KEY (inst_id) REFERENCES wkf_instance(id) ON DELETE CASCADE;


--
-- Name: wkf_witm_trans_trans_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_witm_trans
    ADD CONSTRAINT wkf_witm_trans_trans_id_fkey FOREIGN KEY (trans_id) REFERENCES wkf_transition(id) ON DELETE CASCADE;


--
-- Name: wkf_workitem_act_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_workitem
    ADD CONSTRAINT wkf_workitem_act_id_fkey FOREIGN KEY (act_id) REFERENCES wkf_activity(id) ON DELETE RESTRICT;


--
-- Name: wkf_workitem_inst_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_workitem
    ADD CONSTRAINT wkf_workitem_inst_id_fkey FOREIGN KEY (inst_id) REFERENCES wkf_instance(id) ON DELETE CASCADE;


--
-- Name: wkf_workitem_subflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf_workitem
    ADD CONSTRAINT wkf_workitem_subflow_id_fkey FOREIGN KEY (subflow_id) REFERENCES wkf_instance(id) ON DELETE CASCADE;


--
-- Name: wkf_write_uid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY wkf
    ADD CONSTRAINT wkf_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users(id) ON DELETE SET NULL;


--
-- Name: public; Type: ACL; Schema: -; Owner: -
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

